{"version":3,"sources":["components/common/Preloader/Preloader.module.css","components/Profile/Profile.module.css","components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/common/FormsControl/FormsControls.module.css","components/Navbar/Navbar.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/common/FormsControl/FormsControls.tsx","utils/validators/validators.tsx","components/common/FormsControl/SuperButton.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Header/logo/rocket33.png","components/Header/Header.tsx","api/api.ts","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.tsx","redux/propfile-reducer.tsx","redux/users-reducer.ts","redux/redux-store.tsx","components/common/Preloader/Preloader.tsx","components/Profile/MyPosts/Post/img.webp","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/common/Paginator/Paginator.tsx","components/Users/img/logo2.png","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.tsx","components/Users/UsersContainer.tsx","App.tsx","index.tsx","components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/common/FormsControl/SuperButton.module.css","components/Login/Login.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["module","exports","Navbar","className","classes","nav","item","to","activeClassName","active","SEND_MESSAGE","initialState","dialogs","id","name","messages","DialogItem","props","path","s","dialog","Message","message","Textarea","input","meta","value","restProps","classStyle","touched","error","errorTextarea","textarea","errorSpan","Input","required","maxLenghtCreator","maxLenght","length","minLenghtCreator","minLenght","SuperButton","red","finalClassName","default","button","maxLength","minLength","AddMessageFormRedux","reduxForm","form","useState","text","setText","onSubmit","handleSubmit","Field","onChange","e","currentTarget","placeholder","style","margin","validate","component","onClick","width","Dialogs","useEffect","document","title","dialogsElements","dialogsPage","map","messagesElements","dialogsItems","sendMessage","newMessageBody","console","log","mapStateToPropsForRedirect","state","auth","isAuth","WithAuthRedirect","Component","connect","compose","dispatch","type","Header","ResultCode","header","wrap","logo","src","alt","brand","loginBlock","login","fontSize","padding","logout","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","then","response","data","followUser","post","unFollowUser","delete","authUser","authAPI","email","password","rememberMe","profileAPI","userId","status","put","SET_USER_DATA","setAuthUserData","payload","a","resultCode","Success","HeaderContainer","this","React","LoginReduxForm","loginWrap","href","target","height","display","marginTop","marginRight","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","newPostText","profile","setStatus","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","usersOnPage","totalUsersCount","isFetching","followingInProgress","portionSize","followSuccess","userID","unFollowSuccess","setUsers","setCurrentPage","page","setTotalUsersCount","count","totalCount","toggleIsFetching","toggleIsFollowingProgress","followUnFollowFlow","apiMethod","actionCreator","rootReducer","combineReducers","sidebar","action","body","Date","getTime","profilePage","newPost","filter","usersPage","u","followed","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Preloader","ldsDualRing","Post","content","img","Logo","like","MyPosts","memo","PostsElements","postBlock","AddNewPostFormRedux","MyPostsContainer","ProfileStatusWithHooks","editMode","setEditMode","checkedStatus","statusInputDiv","onDoubleClick","changeStatusDiv","autoFocus","onBlur","updateStatus","statusInput","ProfileInfo","photo","photos","small","large","descriptionBlock","textBlock","fullName","statusWrap","description","Profile","ProfileContainer","match","params","Number","authorizedUserId","history","push","getProfile","getStatus","withRouter","Paginator","selectedPage","pagination","portionNumber","setPortionNumber","pagesCount","Math","ceil","totalItemsCount","pages","i","portionCount","leftPortionSize","rightPortionSize","p","onPageChanged","marginLeft","User","userWrap","userInfoWrap","cursor","fontStyle","letterSpacing","disabled","some","unFollow","follow","Users","getUsersPage","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","getPage","bind","res","items","News","lazy","Music","Settings","App","initialize","fallback","exact","render","DialogsContainer","AppConnect","promise","Promise","all","AppContainer","StrictMode","ReactDOM","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,iC,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,+DCAjFD,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,+BAA+B,YAAc,iCAAiC,OAAS,4BAA4B,WAAa,gCAAgC,KAAO,0BAA0B,YAAc,iCAAiC,eAAiB,oCAAoC,gBAAkB,qCAAqC,UAAY,iC,mBCA/bD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,mBCA/KD,EAAOC,QAAU,CAAC,eAAe,oCAAoC,MAAQ,6BAA6B,SAAW,gCAAgC,WAAa,kCAAkC,cAAgB,qCAAqC,UAAY,mC,+JC6BtPC,MA1Bf,WACI,OACI,sBAAKC,UAAWC,IAAQC,IAAxB,UACI,qBAAKF,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,WAAYC,gBAAiBJ,IAAQK,OAAjD,uBAEJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAQK,OAAhD,yBAEJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAQK,OAA9C,sBAEJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBJ,IAAQK,OAA7C,oBAEJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAQK,OAA9C,qBAEJ,qBAAKN,UAAWC,IAAQE,KAAxB,SACI,cAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBJ,IAAQK,OAAjD,4B,uBCtBVC,EAAe,uBAgBjBC,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,QACd,CAACD,GAAI,EAAGC,KAAM,SACd,CAACD,GAAI,EAAGC,KAAM,UACd,CAACD,GAAI,EAAGC,KAAM,WAElBC,SAAU,CACN,CAACF,GAAI,EAAGE,SAAU,MAClB,CAACF,GAAI,EAAGE,SAAU,gBAClB,CAACF,GAAI,EAAGE,SAAU,U,yBCXXC,MARf,SAAoBC,GAChB,IAAIC,EAAO,YAAcD,EAAMJ,GAE/B,OAAO,qBAAKV,UAAWgB,IAAEC,OAAS,IAAMD,IAAEV,OAAnC,SACH,eAAC,IAAD,CAASF,GAAIW,EAAb,cAAqBD,EAAMH,WCFpBO,MAJf,SAAiBJ,GACb,OAAO,qBAAKd,UAAWgB,IAAEC,OAAlB,SAA2BH,EAAMK,W,yFCJ/BC,EAAyC,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,MAAMC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAUC,EAAe,iBACnFC,EAAaH,EAAKI,SAAWJ,EAAKK,MAAQX,IAAEY,cAAgB,IAAMZ,IAAEa,SAAYb,IAAEa,SACxF,OAAO,gCACH,0EAAU7B,UAAWyB,GAAgBD,GAAeD,GAAUF,GAAWC,IACzE,8BACKA,EAAKI,SAAWJ,EAAKK,OAAS,uBAAM3B,UAAWgB,IAAEc,UAAnB,cAAgCR,EAAKK,eAMnEI,EAAsC,SAAC,GAAgC,IAA/BV,EAA8B,EAA9BA,MAAMC,EAAwB,EAAxBA,KAASE,EAAe,iBACzEC,EAAaH,EAAKI,SAAWJ,EAAKK,MAAQX,IAAEY,cAAgB,IAAMZ,IAAEa,SAAYb,IAAEa,SACxF,OAAO,gCACH,2DAAO7B,UAAWyB,GAAgBD,GAAeH,GAAWC,IAC5D,8BACKA,EAAKI,SAAWJ,EAAKK,OAAS,uBAAM3B,UAAWgB,IAAEc,UAAnB,cAAgCR,EAAKK,eCrBnEK,EAAW,SAACT,GACrB,IAAIA,EACJ,MAAO,qBAIEU,EAAmB,SAACC,GAAD,OAAoB,SAACX,GACjD,GAAIA,GAASA,EAAMY,OAASD,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,cAG/BE,EAAmB,SAACC,GAAD,OAAoB,SAACd,GACjD,GAAIA,GAASA,EAAMY,OAASE,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,c,uCCc7BC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKvC,EAGR,EAHQA,UACFwB,EAEN,iBACKgB,EAAc,UAAMD,EAAMvB,IAAEuB,IAAM,IAAMvB,IAAEyB,QAAUzB,IAAEyB,QAAxC,YAAmDzC,EAAnD,YAAgEgB,IAAE0B,QAEtF,OACI,oCACI1C,UAAWwC,GACPhB,KC0BhB,IAAImB,EAAYV,EAAiB,IAC7BW,EAAYR,EAAiB,GAwBpBS,EAAsBC,YAAwB,CAACC,KAAM,wBAA/BD,EAtBZ,SAAChC,GACpB,MAAuBkC,mBAAS,SAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAEA,OAAQ,8BACJ,uBAAMC,SAAUrC,EAAMsC,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACI9B,MAAO0B,EACPK,SAAU,SAACC,GAAYL,EAAO,OAACK,QAAD,IAACA,OAAD,EAACA,EAAGC,cAAcjC,QAChDkC,YAAa,qBACbC,MAAO,CAACC,OAAQ,UAChBC,SAAU,CAAC5B,EAAUW,EAAWC,GAChCjC,KAAM,iBAAkBkD,UAAWzC,MAE3C,cAAC,EAAD,CACI0C,QAAS,WAAKZ,EAAQ,KACtBQ,MAAO,CAACK,MAAM,SAFlB,kCAUGC,EA3Df,SAAiBlD,GACbmD,qBAAU,WACNC,SAASC,MAAQ,aACnB,IAIF,IAAIC,EAAkBtD,EAAMuD,YAAY5D,QAAQ6D,KAAI,SAAArD,GAAM,OAAI,cAAC,EAAD,CAA4BN,KAAMM,EAAON,KAAMD,GAAIO,EAAOP,IAAzCO,EAAOP,OAClF6D,EAAmBzD,EAAMuD,YAAYzD,SAAS0D,KAAI,SAAAnD,GAAO,OAAI,cAAC,EAAD,CAA0BA,QAASA,EAAQP,UAA7BO,EAAQT,OAQvF,OACI,sBAAKV,UAAWgB,IAAEP,QAAlB,UACI,qBAAKT,UAAWgB,IAAEwD,aAAlB,SACKJ,IAEL,sBAAKpE,UAAWgB,IAAEJ,SAAlB,UACK2D,EACD,8BACI,cAAC1B,EAAD,CAAqBM,SAbnB,SAACF,GACfnC,EAAM2D,YAAYxB,EAAKyB,gBACvBC,QAAQC,IAAI3B,e,0BCnBhB4B,EAA6B,SAACC,GAC9B,MAAO,CACHC,KAAMD,EAAMC,KAAKC,SAGlB,SAASC,EAAqBC,GAUjC,OAAOC,YAAQN,EAARM,EARmB,SAACrE,GACQA,EAAtBiE,KAAL,IAAcvD,EAAd,YAA2BV,EAA3B,GACA,OAAKA,EAAMiE,KAEJ,cAACG,EAAD,eAAe1D,IAFE,cAAC,IAAD,CAAUpB,GAAI,cCFlD,IAiBegF,cAA6BD,aAjBpB,SAACL,GACrB,MAAO,CACHT,YAAaS,EAAMT,gBAGA,SAACgB,GACxB,MAAO,CAKHZ,YAAa,SAACxB,GACXoC,ERqBD,CACFC,KAAM/E,EAAcmE,eQtBWzB,SAKkDgC,EAA1EG,CAA4FpB,G,iBChC5F,OAA0B,qCCiC1BuB,IC7BHC,GD6BGD,GArBf,SAAgBzE,GACZ,OACI,wBAAQd,UAAWC,IAAQwF,OAA3B,SACI,sBAAKzF,UAAWC,IAAQyF,KAAxB,UACI,sBAAK1F,UAAWC,IAAQ0F,KAAxB,cAA+B,qBAAMC,IAAKD,GAAME,IAAI,KAApD,IAAyD,qBAAK7F,UAAWC,IAAQ6F,MAAxB,6BAAzD,OACA,qBAAK9F,UAAWC,IAAQ8F,WAAxB,SACKjF,EAAMkE,OACD,gCAAK,eAAC,IAAD,CAAS5E,GAAI,YAAb,cAA4BU,EAAMkF,MAAlC,OACH,cAAC,EAAD,CACItC,MAAO,CAACuC,SAAU,OAAQlC,MAAO,OAAQJ,OAAQ,YAAauC,QAAS,OACvEpC,QAAShD,EAAMqF,OAFnB,wBAMF,cAAC,IAAD,CAAS/F,GAAI,SAAb,6B,2DCtBdoF,O,qBAAAA,I,kBAAAA,Q,KAsBZ,IAAMY,GAAWC,KAAMC,OAAO,CAC1BC,iBAAgB,EAChBC,QAAU,gDACVC,QAAQ,CACJ,UAAU,0CAGLC,GAAU,CAEnBC,SAFmB,WAEuB,IAAhCC,EAA+B,uDAAjB,EAAGC,EAAc,uDAAH,EAClC,OAAOT,GAASU,IAAT,qBAA6CF,EAA7C,kBAAkEC,IACpEE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAEnCC,WANmB,SAMRxG,GACP,OAAO0F,GAASe,KAAT,iBAAoCzG,IACtCqG,MAAK,SAAAC,GAAQ,OAAKA,EAASC,SAEpCG,aAVmB,SAUN1G,GACT,OAAO0F,GAASiB,OAAT,iBAAsC3G,IACxCqG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGnCK,SAfmB,WAgBf,OAAOjB,KAAMS,IAAN,uDAAkE,CACrEP,iBAAgB,IACfQ,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAIjBM,GAAU,WAEf,OAAOnB,GAASU,IAAT,UAAoD,IACtDC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,SAH3BM,GAAU,SAKbC,EAAcC,GAA6C,IAA7BC,EAA4B,wDAC5D,OAAOtB,GAASe,KAAT,aAA0D,CAACK,QAAMC,WAASC,gBAN5EH,GAAU,WASf,OAAOnB,GAASiB,OAAT,eAIFM,GAAa,SAEXC,GACP,OAAOxB,GAASU,IAAI,WAAYc,GAC3Bb,MAAK,SAAAC,GACF,OAAOA,MALVW,GAAa,SAOZC,GACN,OAAOxB,GAASU,IAAI,kBAAmBc,IARlCD,GAAa,SAUTE,GACT,OAAOzB,GAAS0B,IAAT,kBAA4C,CAACD,Y,SC3EtDE,GAAgB,qBAMlBvH,GAAiC,CACjCoH,OAAQ,MACRJ,MAAO,KACPxB,MAAO,KACPhB,QAAO,GAuBEgD,GAAkB,SAACJ,EAAqBJ,EAAoBxB,EAAmBhB,GACxF,MAAO,CACHM,KAAMyC,GAAeE,QAAQ,CAACL,SAAOJ,QAAMxB,QAAMhB,YAK5CsC,GAAW,2DACpB,WAAOjC,GAAP,wBAAA6C,EAAA,sEACwBX,KADxB,QACMP,EADN,QAGyBmB,aAAe3C,GAAW4C,UAAU,EACpBpB,EAASC,KAA7BvG,EADuC,EACvCA,GAAIsF,EADmC,EACnCA,MAAOwB,EAD4B,EAC5BA,MAChBnC,EAAS2C,GAAgBtH,EAAI8G,EAAOxB,GAAO,KAL3D,2CADoB,uDCnClBqC,G,4JAEF,WACE,OAAO,cAAC,GAAD,eAAYC,KAAKxH,Y,GAHAyH,IAAMrD,WAcrBC,gBAJS,SAACL,GAAD,MAA+C,CACnEE,OAAQF,EAAMC,KAAKC,OACnBgB,MAAOlB,EAAMC,KAAKiB,SAEiB,CAACsB,YAAUnB,OD8C5B,WAClB,OAAO,SAACd,GACJkC,KACKR,MAAK,SAAAE,GACEA,EAAKA,KAAKkB,aAAe3C,GAAW4C,SACpC/C,EAAS2C,GAAgB,KAAK,KAAK,MAAK,UCnD7C7C,CAA6CkD,I,oBCLxD1F,GAAYV,EAAiB,IAC7BW,GAAYR,EAAiB,GAqDpBoG,GAAiB1F,YAAwB,CAACC,KAAM,SAA/BD,EAnDL,SAAChC,GAOtB,OALAmD,qBAAU,WACNC,SAASC,MAAQ,UACnB,IAGK,8BACH,uBAAOnE,UAAWgB,KAAEyH,UAAWtF,SAAUrC,EAAMsC,aAA/C,UACI,mBAAGpD,UAAWgB,KAAEgF,MAAhB,qBACA,sBAAKhG,UAAWgB,KAAE+D,KAAlB,UACI,6FACI,mBAAG2D,KAAK,wCAAwCC,OAAO,SAAvD,sBAEJ,2DACA,kDAEJ,8BACI,cAACtF,EAAA,EAAD,CAAOI,YAAa,WACbC,MAAO,CAACkF,OAAQ,OAAQ7E,MAAM,QAC9BH,SAAU,CAAC5B,GACXrB,KAAM,QACNkD,UAAW9B,MAGtB,8BACI,cAACsB,EAAA,EAAD,CAAOI,YAAa,cACbC,MAAO,CAACkF,OAAQ,OAAQ7E,MAAM,QAC9BH,SAAU,CAAC5B,EAAUW,GAAWC,IAChC0C,KAAM,WACN3E,KAAM,WACNkD,UAAW9B,MAEtB,sBAAK2B,MAAO,CAACmF,QAAS,OAAOC,UAAW,OAAxC,UACI,cAACzF,EAAA,EAAD,CACMK,MAAO,CAACqF,YAAa,OACrBlF,UAAW,QACVlD,KAAM,aACN2E,KAAM,aAEb,mBAAG5B,MAAO,CAACoF,UAAW,QAAtB,4BAGJ,8BACI,cAAC,EAAD,uBAEHhI,EAAMa,OAAS,qBAAK3B,UAAWgB,KAAEY,cAAlB,SAAkCd,EAAMa,gBA+BrDwD,gBALO,SAACL,GACnB,MAAO,CACHE,OAAQF,EAAMC,KAAKC,UAGa,CAACgB,MF5CpB,SAACwB,EAAcC,EAAiBC,GAAhC,gDACjB,WAAOrC,GAAP,kBAAA6C,EAAA,sEAC0BX,GAAcC,EAAOC,EAAUC,GADzD,QACQV,EADR,QAGyBC,KAAKkB,aAAe3C,GAAW4C,QACxC/C,EAASiC,OAERnG,EAAU6F,EAASC,KAAKrG,SAASuB,OAAQ,EACvC6E,EAASC,KAAKrG,SACd,qBACHyE,EAAS2D,aAAW,QAAQ,CAACC,OAAQ9H,MATrD,2CADiB,wDE4CNgE,EApBD,SAACrE,GAKX,OAAGA,EAAMkE,OAAgB,cAAC,IAAD,CAAU5E,GAAI,aAEhC,8BACH,cAACoI,GAAD,CAAgBrF,SAPH,SAAC+F,GACdpI,EAAMkF,MAAMkD,EAAS1B,MAAM0B,EAASzB,SAASyB,EAASxB,oBC9ExDyB,GAAsB,0BAKxB3I,GAAiC,CACjC4I,aAAY,GCTZ5I,GAAe,GCGb6I,GAAW,mBACXC,GAAmB,2BACnBC,GAAa,qBACbC,GAAc,sBAgDhBhJ,GAAe,CACfiJ,MAAO,CACH,CACI/I,GAAI,EACJE,SAAU,6CACV8I,WAAY,IAEhB,CACIhJ,GAAI,EACJE,SAAU,qDACV8I,WAAY,KAIpBC,YAAa,GACbC,QAAS,KACT/B,OAAO,UA4CEgC,GAAY,SAAC5G,GACtB,MAAO,CACHqC,KAAMiE,GAAYtG,SCjHpB6G,GAAS,eACTC,GAAW,iBACXC,GAAY,kBACZC,GAAmB,yBACnBC,GAAwB,8BACxBC,GAAqB,2BACrBC,GAA+B,qCA+BjC5J,GAAiC,CACjC6J,MAAO,GACPC,YAAa,GACbC,gBAAiB,EACjB3D,YAAa,EACb4D,YAAW,EACXC,oBAAoB,GACpBC,YAAY,IA+DHC,GAAgB,SAACjK,GAC1B,MAAO,CACH4E,KAAMwE,GAAQc,OAAQlK,IAIjBmK,GAAkB,SAACnK,GAC5B,MAAO,CACH4E,KAAMyE,GAAUa,OAAQlK,IAGnBoK,GAAW,SAACT,GACrB,MAAO,CACH/E,KAAM0E,GAAWK,MAAOA,IAGnBU,GAAiB,SAACC,GAC3B,MAAO,CACH1F,KAAM2E,GAAkBrD,YAAaoE,IAGhCC,GAAqB,SAACC,GAC/B,MAAO,CACH5F,KAAM4E,GAAuBiB,WAAYD,IAGpCE,GAAmB,SAACZ,GAC7B,MAAO,CACHlF,KAAM6E,GAAoBK,eAGrBa,GAA4B,SAACZ,EAA8B7C,GACpE,MAAO,CACHtC,KAAM8E,GAA8BK,sBAAqB7C,WA6B1D0D,GAAkB,yCAAG,WAAO1D,EAAevC,EAAoCkG,EAAeC,GAAzE,UAAAtD,EAAA,6DACpB7C,EAASgG,IAA0B,EAAMzD,IADrB,SAEJ2D,EAAU3D,GAFN,OAGW,IAHX,OAGJO,YACJ9C,EAASmG,EAAc5D,IAE3BvC,EAASgG,IAA0B,EAAOzD,IAN9B,2CAAH,4D,oBClKZ6D,GAAcC,YAAgB,CACvCC,QHR0B,WAA0C,IAAzC7G,EAAwC,uDAA5BtE,GAEvC,OAAOsE,GGOPT,YnBsB0B,WAAwF,IAAvFS,EAAsF,uDAA5DtE,EAAcoL,EAA8C,uCAEjH,OAAQA,EAAOtG,MACX,KAAK/E,EACD,IAAIsL,EAAOD,EAAOlH,eAClB,OAAO,2BAAII,GAAX,IACIlE,SAAS,GAAD,mBAAKkE,EAAMlE,UAAX,CAAoB,CAACF,IAAI,IAAIoL,MAAOC,UAAWnL,SAAUiL,OAEzE,QACI,OAAO/G,ImB9BfkH,YF4D0B,WAAwF,IAAvFlH,EAAsF,uDAA7DtE,GAAcoL,EAA+C,uCAEjH,OAAQA,EAAOtG,MACX,KAAK+D,GACD,IAAI4C,EAAqB,CACrBvL,IAAI,IAAIoL,MAAOC,UACfnL,SAAUgL,EAAOjC,YACjBD,WAAY,GAEhB,OAAO,2BACA5E,GADP,IAEI6E,YAAa,GACbF,MAAM,CAAEwC,GAAH,mBAAcnH,EAAM2E,UAIjC,KAAKF,GACD,OAAO,2BACAzE,GADP,IAEI+C,OAAQ+D,EAAO3I,OAEvB,KAAKqG,GACD,OAAO,2BAAIxE,GAAX,IAAkB8E,QAASgC,EAAOhC,UAEtC,KAAKJ,GACD,OAAO,2BAAI1E,GAAX,IACI2E,MAAO3E,EAAM2E,MAAMyC,QAAO,SAAC/E,GAAD,OAAUA,EAAKzG,KAAOkL,EAAOlL,QAG/D,QACI,OAAOoE,IEzFfqH,UD8CwB,WAAwF,IAAvFrH,EAAsF,uDAA5DtE,GAAcoL,EAA8C,uCAE/G,OAAQA,EAAOtG,MACX,KAAKwE,GACD,OAAO,2BACAhF,GADP,IAEIuF,MAAOvF,EAAMuF,MAAM/F,KAAI,SAAA8H,GACnB,OAAIA,EAAE1L,KAAOkL,EAAOhB,OACT,2BAAIwB,GAAX,IAAcC,UAAU,IAErBD,OAInB,KAAKrC,GACD,OAAO,2BACAjF,GADP,IAEIuF,MAAOvF,EAAMuF,MAAM/F,KAAI,SAAA8H,GACnB,OAAIA,EAAE1L,KAAOkL,EAAOhB,OACT,2BAAIwB,GAAX,IAAcC,UAAU,IAErBD,OAGnB,KAAKpC,GACD,OAAO,2BAAIlF,GAAX,IAAkBuF,MAAM,YAAKuB,EAAOvB,SAExC,KAAKJ,GACD,OAAO,2BAAInF,GAAX,IAAkB8B,YAAagF,EAAOhF,cAE1C,KAAKsD,GACD,OAAO,2BAAIpF,GAAX,IAAkByF,gBAAiBqB,EAAOT,aAE9C,KAAKhB,GACD,OAAO,2BAAIrF,GAAX,IAAkB0F,WAAYoB,EAAOpB,aAEzC,KAAKJ,GACD,OAAO,2BACAtF,GADP,IAEI2F,oBAAqBmB,EAAOnB,oBAAP,sBACX3F,EAAM2F,qBADK,CACgBmB,EAAOhE,SACtC9C,EAAM2F,oBAAoByB,QAAO,SAAAxL,GAAE,OAAKA,IAAOkL,EAAOhE,YAGpE,QACI,OAAO9C,IC1FfC,KPUuB,WAAuF,IAAtFD,EAAqF,uDAA3DtE,GAAcoL,EAA6C,uCAE7G,OAAQA,EAAOtG,MACX,KAAKyC,GACD,OAAO,2BACAjD,GACA8G,EAAO3D,SAElB,QACI,OAAOnD,IOlBfwH,IJCsB,WAAsF,IAArFxH,EAAoF,uDAA1DtE,GAAcoL,EAA4C,uCAE3G,OAAQA,EAAOtG,MACX,KAAK6D,GACD,OAAO,2BACArE,GADP,IAEIsE,aAAY,IAEpB,QACI,OAAOtE,IITf/B,KAAKwJ,OAIHC,GAAmBC,OAAOC,sCAAwCtH,IASzDuH,GALHC,YAAYnB,GAAae,GAAiBK,YAAgBC,Q,qBCtBzDC,GAAY,WACrB,OAAO,qBAAK/M,UAAWgB,KAAEgM,e,wCCJd,OAA0B,iCCuB1BC,OAdf,SAAcnM,GAEV,OAEI,sBAAKd,UAAWC,KAAQiN,QAAxB,UAEQ,qBAAKlN,UAAWC,KAAQkN,IAAxB,SAA6B,qBAAKvH,IAAKwH,GAAMvH,IAAI,OACjD,sBAAK7F,UAAWC,KAAQkB,QAAxB,cAAmCL,EAAMK,WACzC,sBAAKnB,UAAWC,KAAQoN,KAAxB,kBAAoCvM,EAAMuM,YCJpDC,GAAU/E,IAAMgF,MAAK,SAACzM,GAExB,IAAI0M,EACA1M,EAAM2I,MAAMnF,KAAI,SAAA6C,GAAI,OAAI,cAAC,GAAD,CAAMhG,QAASgG,EAAKvG,SAAUyM,KAAMlG,EAAKuC,gBAMrE,OACI,sBAAK1J,UAAWC,KAAQiN,QAAxB,UACI,sBAAKlN,UAAWC,KAAQwN,UAAxB,UACI,qBAAKzN,UAAWC,KAAQwF,OAAxB,SACI,qDAEJ,cAACiI,GAAD,CAAqBvK,SAVnB,SAACF,GACXnC,EAAMgD,QAAQb,EAAK0G,mBAWf,qBAAK3J,UAAWC,KAAQwJ,MAAxB,SACK+D,UAMb7K,GAAYV,EAAiB,IAC7BW,GAAYR,EAAiB,GAqBpBsL,GAAsB5K,YAAyB,CAACC,KAAM,yBAAhCD,EAnBZ,SAAChC,GACpB,OAAQ,8BACJ,uBAAMqC,SAAUrC,EAAMsC,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACII,YAAa,uBACbC,MAAO,CAACC,OAAQ,UAChBhD,KAAM,cACNkD,UAAWzC,EACXwC,SAAU,CAAC5B,EAAUW,GAAWC,QAGxC,cAAC,EAAD,8BASG0K,MC7BAK,GAHUxI,aAdD,SAACL,GACrB,MAAO,CACH2E,MAAO3E,EAAMkH,YAAYvC,MACzBE,YAAa7E,EAAMkH,YAAYrC,gBAGZ,SAACtE,GACxB,MAAO,CACHvB,QAAS,SAACb,GACNoC,EPqFD,CACHC,KAAM+D,GAAUM,YOtFY1G,QAKXkC,CAA4CmI,I,oBCtBxDM,GAAyB,SAAC9M,GACnC,MAAgCkC,oBAAS,GAAzC,mBAAO6K,EAAP,KAAiBC,EAAjB,KACA,EAA4B9K,mBAASlC,EAAM+G,QAA3C,mBAAOA,EAAP,KAAegC,EAAf,KAEA5F,qBAAU,WACN4F,EAAU/I,EAAM+G,UAClB,CAAC/G,EAAM+G,SAET,IAOIkG,EAAiC,OAAjBjN,EAAM+G,OAAkB,SAAW/G,EAAM+G,OAE7D,OAAO,gCACFgG,GACD,qBAAK7N,UAAWgB,KAAEgN,eAAlB,SACI,sBAAMC,cAAgB,WAAOH,GAAY,IAAzC,SACKC,OAGPF,GACF,qBAAK7N,UAAWgB,KAAEkN,gBAAlB,SACI,uBACI5K,SAfW,SAACC,GACpBsG,EAAUtG,EAAEC,cAAcjC,QAelB4M,WAAW,EACXC,OArBe,WACvBtN,EAAMuN,aAAaxG,GACnBiG,GAAY,IAoBJ9N,UAAWgB,KAAEsN,YACbhJ,KAAK,OACL/D,MAAOsG,UCIR0G,OA9Bf,SAAqBzN,GACjB,IAAKA,EAAM8I,QAAS,OAAO,cAAC,GAAD,IAE3B,IAAI4E,EAAQ1N,EAAM8I,QAAQ6E,OAAOC,MAAQ5N,EAAM8I,QAAQ6E,OAAOE,MAAQvB,GAClED,EAAM,qBAAKvH,IAAK4I,IAEpB,OACI,8BACI,sBAAKxO,UAAWC,KAAQ2O,iBAAxB,UACI,8BAAMzB,IACN,sBAAKnN,UAAWC,KAAQ4O,UAAxB,UACI,sBAAK7O,UAAWC,KAAQ4H,OAAxB,UACI,sBAAK7H,UAAWC,KAAQU,KAAxB,UAA+BG,EAAM8I,QAAQkF,SAA7C,OACA,sBAAM9O,UAAWC,KAAQ8O,WAAzB,UACI,mBAAGrL,MAAO,CAAEqF,YAAY,QAAxB,uBACI,cAAC,GAAD,CAAyBsF,aAAcvN,EAAMuN,aAAcxG,OAAQ/G,EAAM+G,eAGrF,qBAAK7H,UAAWC,KAAQ+O,YAAxB,6M,qBCELC,OApBf,SAAiBnO,GAAkB,IAAD,EAM1B,OAJJmD,qBAAU,WAAO,IAAD,IACZC,SAASC,OAAS,UAAArD,EAAM8I,eAAN,eAAekF,UAAf,UAA0BhO,EAAM8I,eAAhC,aAA0B,EAAekF,SAAW,YACxE,WAAChO,EAAM8I,eAAP,aAAC,EAAekF,WAEVhO,EAAMkE,OAGV,sBAAKhF,UAAWgB,KAAEkM,QAAlB,UACI,cAAC,GAAD,CAAatD,QAAS9I,EAAM8I,QACf/B,OAAQ/G,EAAM+G,OACdwG,aAAcvN,EAAMuN,eAEjC,cAAC,GAAD,OARsB,cAAC,IAAD,CAAUjO,GAAI,YCQzC8O,G,uKAEH,WACI,IAAItH,GAAUU,KAAKxH,MAAMqO,MAAMC,OAAOxH,OAClCA,IACAU,KAAKxH,MAAMkE,OACL4C,EAASyH,OAAO/G,KAAKxH,MAAMwO,kBAC3BhH,KAAKxH,MAAMyO,QAAQC,KAAK,WAGlClH,KAAKxH,MAAM2O,WAAW7H,GACtBU,KAAKxH,MAAM4O,UAAU9H,K,oBAGzB,WACI,OAAO,cAAC,GAAD,2BAAaU,KAAKxH,OAAlB,IACS8I,QAAStB,KAAKxH,MAAM8I,QACpB/B,OAAQS,KAAKxH,MAAM+G,OACnBwG,aAAc/F,KAAKxH,MAAMuN,oB,GAlBjB9F,IAAMrD,WA+BtBE,eAA6BD,aATvB,SAACL,GACnB,MAAO,CACH8E,QAAS9E,EAAMkH,YAAYpC,QAC3B/B,OAAQ/C,EAAMkH,YAAYnE,OAC1ByH,iBAAkBxK,EAAMC,KAAK6C,OAC7B5C,OAAQF,EAAMC,KAAKC,UAI0C,CAAC0K,UXgF7C,SAAChP,GACtB,OAAO,SAAC2E,GACJsC,GAAqBjH,GAChBqG,MAAK,SAAAE,GACE5B,EAASwE,GAAU5C,EAAKA,YWpFoCoH,aXwFpD,SAACpL,GACzB,OAAO,SAACoC,GACJsC,GAAwB1E,GACnB8D,MAAK,SAAAE,GAC+B,IAAzBA,EAAKA,KAAKkB,YACV9C,EAASwE,GAAU5G,SW7FkDwM,WXwEnE,SAAC/O,GACvB,OAAO,SAAC2E,GACJsC,GAAsBjH,GACjBqG,MAAK,SAAAE,GAda,IAAC2C,EAeZvE,GAfYuE,EAea3C,EAAKA,KAdvC,CACH3B,KAAMgE,GAAkBM,oBW/D0E+F,IAA1FvK,CAAsG8J,I,wCC7CzGU,GAAYrH,IAAMgF,MAAK,SAACzM,GASjC,IAPA,IAAI+O,EAAe7O,KAAE6O,aAAe,IAAM7O,KAAE8O,WAC5C,EAAyC9M,mBAAS,GAAlD,mBAAO+M,EAAP,KAAqBC,EAArB,KAGMC,EAAaC,KAAKC,KAAMrP,EAAMsP,gBAAkBtP,EAAM+F,UACtDwJ,EAAiB,GAEdC,EAAI,EAAEA,GAAKL,EAAYK,IAAMD,EAAMb,KAAKc,GAGjD,IAAMC,EAAeL,KAAKC,KAAKF,EAAcnP,EAAM4J,aAE7C8F,GAAmBT,EAAgB,GAAKjP,EAAM+F,SAAW,EACzD4J,EAAmBV,EAAgBjP,EAAM+F,SAE/C,OACQ,sBAAK7G,UAAWgB,KAAE0E,KAAlB,UACKqK,EAAgB,GACjB,cAAC,EAAD,CACI/P,UAAWgB,KAAE0B,OACboB,QAAS,WAAOkM,EAAiBD,EAAgB,IAFrD,mBAKCM,EACInE,QAAO,SAAAwE,GAAC,OAAIA,GAAKF,GAAmBE,GAAKD,KACzCnM,KAAI,SAAAoM,GACL,OAAO,uBACC1Q,UAAWc,EAAM8F,cAAgB8J,EAAIb,EAAe7O,KAAE8O,WACtDhM,QAAS,WAAKhD,EAAM6P,cAAcD,IAFnC,UAGHA,EAHG,UAKVH,EAAeR,GAChB,cAAC,EAAD,CACI/P,UAAWgB,KAAE0B,OACbgB,MAAO,CAACkN,WAAW,QACnB9M,QAAS,WAAOkM,EAAiBD,EAAgB,IAHrD,yBC/CD,OAA0B,kC,aCc5Bc,GAAgC,SAAC,GAAsB,IAArBxG,EAAoB,EAApBA,MAASvJ,EAAW,kBAC3DiN,EAAiC,OAAjB1D,EAAMxC,OAAkB,SAAWwC,EAAMxC,OAE7D,OACI,sBAAK7H,UAAWgB,KAAE8P,SAAlB,UACI,+BACQ,8BACI,cAAC,IAAD,CAAS1Q,GAAI,YAAciK,EAAM3J,GAAjC,SACI,qBAAKkF,IAA2B,MAAtByE,EAAMoE,OAAOC,MAAgBrE,EAAMoE,OAAOC,MAAQ/I,GAAM3F,UAAWgB,KAAEwN,cAK/F,uBAAMxO,UAAWgB,KAAE+P,aAAnB,UACQ,uBAAMrN,MAAO,CAACsN,OAAO,WAArB,UACI,oCAAO3G,EAAM1J,QACb,sBAAM+C,MAAO,CAACuN,UAAU,SAAUhL,SAAS,QAA3C,cAAsD8H,QAGrD,qBAAMrK,MAAO,CAACkN,WAAW,QAAzB,SAEEvG,EAAMgC,SACH,cAAC,EAAD,CACE3I,MAAO,CAACwN,cAAc,MAAOjL,SAAS,QACtCkL,SAAUrQ,EAAM2J,oBAAoB2G,MAAK,SAAA1Q,GAAE,OAAIA,IAAO2J,EAAM3J,MAC5DoD,QAAS,WAAOhD,EAAMuQ,SAAShH,EAAM3J,KAHvC,sBAMA,cAAC,EAAD,CAAcgD,MAAO,CAACwN,cAAc,MAAOjL,SAAS,QACtCkL,SAAUrQ,EAAM2J,oBAAoB2G,MAAK,SAAA1Q,GAAE,OAAIA,IAAO2J,EAAM3J,MAC5DoD,QAAS,WAAOhD,EAAMwQ,OAAOjH,EAAM3J,KAFjD,6B,sFCvBjB6Q,GAAmC,SAAC,GAEgB,IAD5DlH,EAC2D,EAD3DA,MAAMzD,EACqD,EADrDA,YAAsB0D,EAC+B,EADzCzD,SACf8J,EAAwD,EAAxDA,cAAcpG,EAA0C,EAA1CA,gBAAgBG,EAA0B,EAA1BA,YAAe5J,EAAW,kBAM5D,OAJAmD,qBAAU,WACNC,SAASC,MAAQ,UACnB,IAGE,sBAAKnE,UAAWgB,KAAE0E,KAAlB,UACM2E,EAAM/F,KAAI,SAAA8H,GAAC,OAET,cAAC,GAAD,CACA/B,MAAO+B,EAEPkF,OAAQxQ,EAAMwQ,OACdD,SAAUvQ,EAAMuQ,SAChB5G,oBAAqB3J,EAAM2J,qBAHtB2B,EAAE1L,OAOP,cAACkP,GAAD,CACAhJ,YAAaA,EACb+J,cAAeA,EACfP,gBAAiB7F,EACjB1D,SAAUyD,EACVI,YAAaA,Q,UCtChB8G,GAAeC,aAAe,CAHP,SAAC3M,GACjC,OAAOA,EAAMqH,UAAU9B,SAEuC,SAACA,GAC/D,OAAOA,KAGEqH,GAAc,SAAC5M,GACxB,OAAOA,EAAMqH,UAAU7B,aAGdqH,GAAqB,SAAC7M,GAC9B,OAAOA,EAAMqH,UAAU5B,iBAGfqH,GAAiB,SAAC9M,GAC3B,OAAQA,EAAMqH,UAAUvF,aAEfiL,GAAgB,SAAC/M,GAC1B,OAAQA,EAAMqH,UAAU3B,YAEfE,GAAc,SAAC5F,GACxB,OAAQA,EAAMqH,UAAUzB,aAEfoH,GAAyB,SAAChN,GACnC,OAAOA,EAAMqH,UAAU1B,qBCiBrBsH,G,4MAMFpB,cAAgB,SAACqB,GACb,IAAOnL,EAAa,EAAK/F,MAAlB+F,SACP,EAAK/F,MAAMmR,QAAQD,EAAWnL,I,uDANlC,WACI,MAAgCyB,KAAKxH,MAA9B8F,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,SACnByB,KAAKxH,MAAM6F,SAASC,EAAYC,K,oBAOpC,WACI,OAAO,qCACFyB,KAAKxH,MAAM0J,WAAa,cAAC,GAAD,IAAe,GACxC,cAAC,GAAD,CACAD,gBAAiBjC,KAAKxH,MAAMyJ,gBAC5B1D,SAAUyB,KAAKxH,MAAM+F,SACrBD,YAAa0B,KAAKxH,MAAM8F,YACxB+J,cAAerI,KAAKqI,cACpBtG,MAAO/B,KAAKxH,MAAMuJ,MAClBiH,OAAQhJ,KAAKxH,MAAMwQ,OACnBD,SAAU/I,KAAKxH,MAAMuQ,SACrB5G,oBAAqBnC,KAAKxH,MAAM2J,oBAChCC,YAAapC,KAAKxH,MAAM4J,qB,GAvBPnC,IAAMrD,WAyCpBE,eAA6BD,aAZtB,SAACL,GACnB,MAAO,CACHuF,MAAOmH,GAAa1M,GACpB+B,SAAU6K,GAAY5M,GACtByF,gBAAiBoH,GAAmB7M,GACpC8B,YAAagL,GAAe9M,GAC5B0F,WAAYqH,GAAc/M,GAC1B4F,YAAaA,GAAY5F,GACzB2F,oBAAoBqH,GAAuBhN,MAK/C,CAACwM,OhB6FiB,SAAC1J,GAAD,gDAClB,WAAOvC,GAAP,gBAAA6C,EAAA,sDAEQqD,EAAY7E,GAAQQ,WAAWgL,KAAKxL,IACxC4E,GAAmB1D,EAAOvC,EAAUkG,EAAUZ,IAHlD,2CADkB,uDgB7FT0G,ShBoGW,SAACzJ,GAAD,gDACpB,WAAOvC,GAAP,gBAAA6C,EAAA,sDAEQqD,EAAY7E,GAAQU,aAAa8K,KAAKxL,IAC1C4E,GAAmB1D,EAAOvC,EAAUkG,EAAUV,IAHlD,2CADoB,uDgBpGDC,YACfC,kBAAgBE,sBAAoBG,oBACpCC,6BAA0B1E,ShB0DV,SAACC,EAAqBC,GAAtB,gDACpB,WAAOxB,GAAP,gBAAA6C,EAAA,6DACI7C,EAAS+F,IAAiB,IAC1B/F,EAAS0F,GAAenE,IAF5B,SAImBF,GAAQC,SAASC,EAAaC,GAJjD,OAIMsL,EAJN,OAKY9M,EAAS+F,IAAiB,IAC1B/F,EAASyF,GAASqH,EAAIC,QACtB/M,EAAS4F,GAAmBkH,EAAIhH,aAP5C,2CADoB,uDgB1DoB8G,QhBqErB,SAACD,EAAoBpL,GAArB,gDACnB,WAAOvB,GAAP,gBAAA6C,EAAA,6DACI7C,EAAS0F,GAAeiH,IACxB3M,EAAS+F,IAAiB,IAF9B,SAIoB1E,GAAQC,SAASqL,EAAYpL,GAJjD,OAIQuL,EAJR,OAKY9M,EAAS+F,IAAiB,IAC1B/F,EAASyF,GAASqH,EAAIC,QANlC,2CADmB,yDgBrEgCnN,EAHxCG,CAG0D2M,IC1EnEM,GAAOC,gBAAK,kBAAM,iCAClBC,GAAQD,gBAAK,kBAAM,iCACnBE,GAAWF,gBAAK,kBAAM,iCAStBG,G,uKACF,WACInK,KAAKxH,MAAM4R,e,oBAGf,WACI,OAAIpK,KAAKxH,MAAMsI,YAIX,sBAAKpJ,UAAU,cAAf,UACQ,cAAC,GAAD,IACJ,sBAAKA,UAAU,sBAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,kBAAf,SACI,eAAC,WAAD,CAAU2S,SAAU,cAAC,GAAD,IAApB,UACI,cAAC,IAAD,CAAO5R,KAAK,IAAI6R,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUzS,GAAI,eAClD,cAAC,IAAD,CAAOW,KAAK,eAAe6R,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUzS,GAAI,eAC7D,cAAC,IAAD,CAAOW,KAAK,uBAAuB6R,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUzS,GAAI,eACrE,cAAC,IAAD,CAAOW,KAAK,oBAAoB8R,OAAQ,kBAAM,cAAC,GAAD,OAC9C,cAAC,IAAD,CAAO9R,KAAK,WAAW8R,OAAQ,kBAAM,cAACC,EAAD,OACrC,cAAC,IAAD,CAAO/R,KAAK,SAAS8R,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,IAAD,CAAO9R,KAAK,SAAS8R,OAAQ,kBAAM,cAAC,GAAD,OACnC,cAAC,IAAD,CAAO9R,KAAK,QAAQ8R,OAAQ,kBAAM,cAACR,GAAD,OAClC,cAAC,IAAD,CAAOtR,KAAK,SAAS8R,OAAQ,kBAAM,cAACN,GAAD,OACnC,cAAC,IAAD,CAAOxR,KAAK,YAAY8R,OAAQ,kBAAM,cAACL,GAAD,kBApB9C,cAAC,GAAD,Q,GAPFjK,IAAMrD,WAuClB6N,GAAa5N,aAHK,SAACL,GAAD,MAA+C,CACnEsE,YAAatE,EAAMwH,IAAIlD,eAEgB,CAACsJ,WpB9BlB,kBACtB,SAACrN,GACG,IAAI2N,EAAU3N,EAASiC,MACvB2L,QAAQC,IAAI,CAACF,IACRjM,MAAK,WACF1B,EAVL,CACHC,KAAM6D,WoBkCKhE,CAAuCsN,IAW3CU,GATO,WACrB,OAAQ,cAAC,IAAMC,WAAP,UACD,cAAC,IAAD,UACI,cAAC,IAAD,CAAUzG,MAAOA,GAAjB,SACI,cAACoG,GAAD,WClEhBM,IAASR,OAAO,cAAC,GAAD,IAAiB3O,SAASoP,eAAe,U,mBCLzDzT,EAAOC,QAAU,CAAC,WAAa,8BAA8B,aAAe,gCAAgC,KAAO,wBAAwB,OAAS,4B,mBCApJD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,SAAW,wBAAwB,aAAe,4BAA4B,MAAQ,qBAAqB,WAAa,0BAA0B,aAAe,4BAA4B,KAAO,sB,mBCAjPD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,MAAQ,sBAAsB,WAAa,6B,mBCArJD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,yBAAyB,OAAS,4BAA4B,MAAQ,6B,mBCArID,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,KAAO,sB,mBCA3FD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,OAAS,0B,mBCA7FD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,IAAM,kBAAkB,QAAU,sBAAsB,KAAO,sB","file":"static/js/main.bc78ec29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__3yn0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1jbYM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3TPlV\",\"item\":\"Navbar_item__1mjvs\",\"active\":\"Navbar_active__rcQNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2knFI\",\"textBlock\":\"ProfileInfo_textBlock__3HsWL\",\"description\":\"ProfileInfo_description__2Bnqe\",\"status\":\"ProfileInfo_status__-qYIm\",\"statusWrap\":\"ProfileInfo_statusWrap__9NkiC\",\"name\":\"ProfileInfo_name__2Nfxf\",\"statusInput\":\"ProfileInfo_statusInput__2viNo\",\"statusInputDiv\":\"ProfileInfo_statusInputDiv__2gnHC\",\"changeStatusDiv\":\"ProfileInfo_changeStatusDiv__QS8I-\",\"wallpaper\":\"ProfileInfo_wallpaper__1h6KX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1PKM2\",\"dialogsItems\":\"Dialogs_dialogsItems__1ohTD\",\"active\":\"Dialogs_active__1ssKt\",\"dialog\":\"Dialogs_dialog__2tEBf\",\"messages\":\"Dialogs_messages__3Age9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControls_form-control__3UWpJ\",\"input\":\"FormsControls_input__3tU5n\",\"textarea\":\"FormsControls_textarea__2A0lr\",\"errorInput\":\"FormsControls_errorInput__ShC7f\",\"errorTextarea\":\"FormsControls_errorTextarea__8lQff\",\"errorSpan\":\"FormsControls_errorSpan__1qZvi\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from './Navbar.module.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile'  activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/dialogs' activeClassName={classes.active}> Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/users' activeClassName={classes.active}> Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nconst SEND_MESSAGE = 'DIALOGS/SEND_MESSAGE'\r\n\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DialogActionType = SendMessageActionType\r\ntype SendMessageActionType = ReturnType<typeof sendMessageCreator>\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Anya'},\r\n        {id: 4, name: 'Sveta'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'},\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'How are you?'},\r\n        {id: 3, messages: 'Good'},\r\n    ] as MessagesType[]\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: DialogActionType):InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {...state,\r\n                messages:[...state.messages,{id: new Date().getTime(), messages: body}]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody:any) => {\r\n   return {\r\n        type: SEND_MESSAGE, newMessageBody\r\n    } as const\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nexport type DialogItemType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\n\r\nfunction DialogItem(props: DialogItemType) {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}> {props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype MessageType = {\r\n    message:string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport {WrappedFieldsProps} from 'redux-form/lib/Fields'\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldsProps> = ({input,meta, value, ...restProps}) => {\r\n    const classStyle = meta.touched && meta.error ? s.errorTextarea + ' ' + s.textarea :  s.textarea\r\n    return <div>\r\n        <textarea className={classStyle} {...restProps} {...value}{...input} {...meta}/>\r\n        <div>\r\n            {meta.touched && meta.error && <span className={s.errorSpan}> {meta.error}</span>}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldsProps> = ({input,meta, ...restProps}) => {\r\n    const classStyle = meta.touched && meta.error ? s.errorTextarea + ' ' + s.textarea :  s.textarea\r\n    return <div>\r\n        <input className={classStyle} {...restProps} {...input} {...meta}/>\r\n        <div>\r\n            {meta.touched && meta.error && <span className={s.errorSpan}> {meta.error}</span>}\r\n        </div>\r\n\r\n    </div>\r\n}","export const required = (value: any) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLenghtCreator = (maxLenght: any) => (value: any) => {\r\n    if (value && value.length > maxLenght)  return `Max length is ${maxLenght} symbols`\r\n    return undefined\r\n}\r\nexport const minLenghtCreator = (minLenght: any) => (value: any) => {\r\n    if (value && value.length < minLenght)  return `Min length is ${minLenght} symbols`\r\n    return undefined\r\n}\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red + ' ' + s.default : s.default} ${className} ${s.button}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from './Message/Message';\r\nimport {DialogsMapDispatchToPropsType, DialogsMapStateToPropsType} from \"./DialogsContainer\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FormDataType} from \"../Login/Login\";\r\nimport {Textarea} from \"../common/FormsControl/FormsControls\";\r\nimport {maxLenghtCreator, minLenghtCreator, required} from \"../../utils/validators/validators\";\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\n\r\n\r\nexport type DialogType = DialogsMapStateToPropsType & DialogsMapDispatchToPropsType\r\n\r\nfunction Dialogs(props: DialogType) {\r\n    useEffect(() => {\r\n        document.title = 'Messages'\r\n    },[])\r\n\r\n\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message key={message.id} message={message.messages}/>)\r\n\r\n\r\n    let sendMessage = (text:any) => {\r\n        props.sendMessage(text.newMessageBody)\r\n        console.log(text)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={sendMessage}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength = maxLenghtCreator(40)\r\nlet minLength = minLenghtCreator(4)\r\n\r\nconst AddMessageForm = (props: InjectedFormProps<FormDataType> ) => {\r\n    const [text,setText] = useState('asD12')\r\n\r\n    return  <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    value={text}\r\n                    onChange={(e: any) => {setText(e?.currentTarget.value)}}\r\n                    placeholder={'Enter your message'}\r\n                    style={{margin: '10px 0'}}\r\n                    validate={[required, maxLength, minLength]}\r\n                    name={'newMessageBody'} component={Textarea}/>\r\n            </div>\r\n            <SuperButton\r\n                onClick={()=>{setText('')}}\r\n                style={{width:'120px'}}>\r\n                Send message\r\n            </SuperButton>\r\n        </form>\r\n    </div>\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {ReduxStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStateForRedirectPropsType = {\r\n    auth: boolean\r\n}\r\nlet mapStateToPropsForRedirect = (state: ReduxStateType): mapStateForRedirectPropsType => {\r\n    return {\r\n        auth: state.auth.isAuth\r\n    }\r\n}\r\nexport function WithAuthRedirect <T>(Component: ComponentType<T>)  {\r\n\r\n    const RedirectComponent = (props:mapStateForRedirectPropsType) => {\r\n            let {auth, ...restProps} = props\r\n            if (!props.auth) return <Redirect to={'/Login'}/>\r\n\r\n            return <Component {...restProps as T}/>\r\n\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from 'react';\r\nimport {InitialStateType, sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\n\r\nexport type DialogsMapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\nexport type DialogsMapDispatchToPropsType = {\r\n    sendMessage:(text:any) => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):DialogsMapDispatchToPropsType => {\r\n    return {\r\n     // updateNewMessageBody: (text:string) => {\r\n     //     let action = updateNewMessageCreator(text);\r\n     //     dispatch(action)\r\n     // },\r\n        sendMessage: (text:any) => {\r\n           dispatch(sendMessageCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,mapDispatchToProps), WithAuthRedirect)(Dialogs)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/rocket33.bf84b78f.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from './Header.module.css';\r\nimport logo from './logo/rocket33.png';\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\n\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nfunction Header(props:HeaderPropsType) {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.wrap}>\r\n                <div className={classes.logo}> <img  src={logo} alt=\"\"/> <div className={classes.brand}>SOCIAL NETWORK </div> </div>\r\n                <div className={classes.loginBlock}>\r\n                    {props.isAuth\r\n                        ? <div><NavLink to={'./profile'}> {props.login} </NavLink>\r\n                            <SuperButton\r\n                                style={{fontSize: '12px', width: '60px', margin: '0 0 0 8px', padding: '4px'}}\r\n                                onClick={props.logout}>\r\n                                Log out\r\n                            </SuperButton>\r\n                        </div>\r\n                        : <NavLink to={'/login'}> Login </NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\nimport {UsersType} from \"../redux/users-reducer\";\r\n\r\n\r\nexport enum ResultCode  {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\ntype CommonType<T = {}> = {\r\n    resultCode: ResultCode\r\n    messages: Array<string>\r\n    data: T\r\n}\r\n\r\ntype UsersCommonType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n    error: null | string\r\n}\r\ntype MeResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL:  'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:{\r\n        'API-KEY':'7e928b19-02e3-4839-a906-80cc9541b152'\r\n    }})\r\n\r\nexport const userAPI = {\r\n\r\n    getUsers (currentPage = 1, pageSize = 5) {\r\n        return instance.get<UsersCommonType>( `users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)},\r\n\r\n    followUser(id:number)  {\r\n        return instance.post<CommonType>(`follow/${id}`)\r\n            .then(response =>  response.data)},\r\n\r\n    unFollowUser(id:number) {\r\n        return instance.delete<CommonType>(`follow/${id}`)\r\n            .then(response => response.data)},\r\n\r\n    //without instance\r\n    authUser() {\r\n        return axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n            withCredentials:true})\r\n            .then(response => {\r\n              return response.data})\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<CommonType<MeResponseType>>(`auth/me`, {})\r\n            .then(response =>  response.data)},\r\n\r\n    login(email:string, password:string,rememberMe:boolean = false) {\r\n        return instance.post<CommonType<{userId: number}>>(`auth/login`, {email,password,rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete<CommonType>(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId:number) {\r\n        return instance.get(`profile/`+ userId)\r\n            .then(response => {\r\n                return response\r\n            })},\r\n    getStatus(userId:number) {\r\n        return instance.get(`profile/status/`+ userId)\r\n          },\r\n    updateStatus(status:string) {\r\n        return instance.put<CommonType>(`profile/status/`, {status})\r\n           },\r\n\r\n}","import {authAPI, ResultCode} from \"../api/api\";\r\nimport {AppThunkType, ReduxStateType} from \"./redux-store\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA';\r\n\r\n\r\nexport type AuthActionType = SetUserDataActionType\r\ntype SetUserDataActionType = ReturnType<typeof setAuthUserData>\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: 16107,\r\n    email: null,\r\n    login: null,\r\n    isAuth:false,\r\n}\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId:number| null, email:string| null, login:string| null,isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA, payload:{userId,email,login,isAuth}\r\n    } as const\r\n}\r\n\r\n//with async\r\nexport const authUser = ():AppThunkType =>\r\n    async (dispatch) => {\r\n      let response = await  authAPI.me();\r\n\r\n                if (response.resultCode === ResultCode.Success) {\r\n                    let {id, login, email} = response.data\r\n                    dispatch(setAuthUserData(id, email, login, true))\r\n                }\r\n}\r\n\r\nexport const login = (email:string, password:string, rememberMe:boolean) =>\r\n    async (dispatch: ThunkDispatch<ReduxStateType, unknown, AuthActionType | FormAction>) => {\r\n        let response = await  authAPI.login(email, password, rememberMe);\r\n\r\n                if (response.data.resultCode === ResultCode.Success) {\r\n                    dispatch(authUser())\r\n                } else {\r\n                 let message = response.data.messages.length> 0\r\n                     ? response.data.messages\r\n                     : 'Something is wrong'\r\n                    dispatch(stopSubmit('login',{_error: message}))\r\n                }\r\n    }\r\n\r\n//without async\r\nexport const logout = ():AppThunkType => {\r\n    return (dispatch) => {\r\n        authAPI.logout()\r\n            .then(data => {\r\n                if (data.data.resultCode === ResultCode.Success) {\r\n                    dispatch(setAuthUserData(null,null,null,false))\r\n                }\r\n            })\r\n    }\r\n}","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {authUser, logout} from \"../../redux/auth-reducer\";\r\n\r\ntype HeaderContainerType = MapStateToPropsType &{\r\n    authUser:() => void\r\n    logout:() => void\r\n}\r\nclass HeaderContainer extends React.Component<HeaderContainerType, {}>{\r\n\r\n    render() {\r\n      return <Header {...this.props}/>\r\n    }\r\n}\r\ntype  MapStateToPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\nexport default connect(mapStateToProps,{authUser, logout}) (HeaderContainer);","import React, {ChangeEvent, useEffect, useState} from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControl/FormsControls\";\r\nimport {maxLenghtCreator, minLenghtCreator, required} from \"../../utils/validators/validators\";\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./Login.module.css\";\r\nimport SuperCheckbox from \"../common/Checkbox/SuperCheckbox\";\r\n\r\n\r\nexport type FormDataType = {\r\n    email:string\r\n    password:string\r\n    rememberMe:boolean\r\n}\r\n\r\nlet maxLength = maxLenghtCreator(20)\r\nlet minLength = minLenghtCreator(4)\r\n\r\nexport const LoginForm = (props:InjectedFormProps<FormDataType>) => {\r\n\r\n    useEffect(() => {\r\n        document.title = 'Login'\r\n    },[])\r\n\r\n\r\n    return <div>\r\n        <form  className={s.loginWrap} onSubmit={props.handleSubmit}>\r\n            <p className={s.login}>Sign in</p>\r\n            <div className={s.auth}>\r\n                <p> You can use this app with default authorization or register\r\n                    <a href=\"https://social-network.samuraijs.com/\" target=\"_blank\"> here</a>\r\n                </p>\r\n                <p> Email: free@samuraijs.com</p>\r\n                <p>Password: free</p>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'   Email'}\r\n                       style={{height: '35px', width:'100%'}}\r\n                       validate={[required]}\r\n                       name={'email'}\r\n                       component={Input}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'   Password'}\r\n                       style={{height: '35px', width:'100%'}}\r\n                       validate={[required, maxLength, minLength]}\r\n                       type={'password'}\r\n                       name={'password'}\r\n                       component={Input}/>\r\n            </div>\r\n            <div style={{display: 'flex',marginTop: '5px'}}>\r\n                <Field\r\n                      style={{marginRight: '8px'}}\r\n                      component={'input'}\r\n                       name={'rememberMe'}\r\n                       type={\"checkbox\"}\r\n                />\r\n                <p style={{marginTop: '-6px'}}>Remember me</p>\r\n\r\n            </div>\r\n            <div>\r\n                <SuperButton> Login</SuperButton>\r\n            </div>\r\n            {props.error && <div className={s.errorTextarea}>{props.error}</div>}\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\ntype LoginType = mapStateToPropsType & {\r\n    login:(email:string, password:string, rememberMe:boolean) => void\r\n}\r\n\r\nconst Login = (props:LoginType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email,formData.password,formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth){ return <Redirect to={'/profile'}/> }\r\n\r\n    return <div>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth:boolean\r\n}\r\nlet mapStateToProps = (state: ReduxStateType):mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect (mapStateToProps,{login})(Login)","import {authUser} from \"./auth-reducer\";\r\nimport {AppThunkType} from \"./redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\n\r\n\r\ntype InitializedSuccessType = ReturnType<typeof initializedSuccess>\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized:false,\r\n}\r\n\r\nexport type AppActionType = InitializedSuccessType\r\nexport type InitialStateType = {\r\n    initialized:boolean\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized:true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    } as const\r\n}\r\n\r\nexport const initialize = (): AppThunkType =>\r\n    (dispatch) => {\r\n        let promise = dispatch(authUser())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n    }\r\n\r\n","let initialState = {}\r\n\r\n\r\nexport const sidebarReducer = (state:any = initialState,action:any) => {\r\n\r\n    return state\r\n\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'PROFILE/ADD-POST';\r\nconst SET_USER_PROFILE = 'PROFILE/SET_USER_PROFILE';\r\nconst SET_STATUS = 'PROFILE/SET_STATUS';\r\nconst DELETE_POST = 'PROFILE/DELETE_POST';\r\n\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    messages: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ContactsType = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string | null\r\n    fullName: string\r\n    aboutMe: string | null\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n    }\r\nexport type ProfilePageType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n    profile: ProfileType | null\r\n    status: string\r\n\r\n}\r\n\r\nexport type ProfileActionType = AddPostActionType  | SetUsersProfileActionType | SetStatusActionType | DeletePostActionType\r\n\r\ntype AddPostActionType = ReturnType<typeof addPostCreator>\r\ntype SetUsersProfileActionType = ReturnType<typeof setUsersProfile>\r\ntype SetStatusActionType = ReturnType<typeof setStatus>\r\ntype DeletePostActionType = ReturnType<typeof deletePost>\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            messages: 'Falcon 9’s first stage has landed on!',\r\n            likesCount: 11,\r\n        },\r\n        {\r\n            id: 2,\r\n            messages: 'Yuri Gagarin was the first person to fly in space.',\r\n            likesCount: 41,\r\n        },\r\n\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status:'Hello!'\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                messages: action.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [newPost,...state.posts],\r\n\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.text\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n\r\n        case DELETE_POST:\r\n            return {...state,\r\n                posts: state.posts.filter((post) => post.id !== action.id) }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addPostCreator = (newPostText:string) => {\r\n    return {\r\n        type: ADD_POST, newPostText\r\n    } as const\r\n}\r\n\r\nexport const setStatus = (text: string) => {\r\n    return {\r\n        type: SET_STATUS, text\r\n    } as const\r\n}\r\nexport const setUsersProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile\r\n    } as const\r\n}\r\nexport const deletePost = (id: number) => {\r\n    return {\r\n        type: DELETE_POST, id\r\n    } as const\r\n}\r\n\r\nexport const getProfile = (id:number) => {\r\n    return (dispatch: Dispatch<ProfileActionType>) => {\r\n        profileAPI.getProfile(id)\r\n            .then(data => {\r\n                    dispatch(setUsersProfile(data.data))\r\n                }\r\n            )}\r\n}\r\nexport const getStatus = (id:number)  => {\r\n    return (dispatch: Dispatch<ProfileActionType>) => {\r\n        profileAPI.getStatus(id)\r\n            .then(data => {\r\n                    dispatch(setStatus(data.data))\r\n                }\r\n            )}\r\n}\r\nexport const updateStatus = (text: string) => {\r\n    return (dispatch: Dispatch<ProfileActionType>) => {\r\n        profileAPI.updateStatus(text)\r\n            .then(data => {\r\n                    if (data.data.resultCode === 0) {\r\n                        dispatch(setStatus(text))\r\n                    }\r\n                }\r\n            )\r\n    }\r\n}","import {userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst FOLLOW = 'USERS/FOLLOW';\r\nconst UNFOLLOW = 'USERS/UNFOLLOW';\r\nconst SET_USERS = 'USERS/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'USERS/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'USERS/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'USERS/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\n\r\n\r\nexport type UsersActionType = FollowActionType | UnFollowActionType | SetUsersActionType | setCurrentPageActionType | setUsersTotalCountActionType | setIsFetchingACActionType | toggleIsFollowingProgressActionType\r\n\r\ntype FollowActionType = ReturnType<typeof followSuccess>\r\ntype UnFollowActionType = ReturnType<typeof unFollowSuccess>\r\ntype SetUsersActionType = ReturnType<typeof setUsers>\r\ntype setCurrentPageActionType = ReturnType<typeof setCurrentPage>\r\ntype setUsersTotalCountActionType = ReturnType<typeof setTotalUsersCount>\r\ntype setIsFetchingACActionType = ReturnType<typeof toggleIsFetching>\r\ntype toggleIsFollowingProgressActionType = ReturnType<typeof toggleIsFollowingProgress>\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    usersOnPage: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching:false,\r\n    followingInProgress:[],\r\n    portionSize:15\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: UsersType[]\r\n    usersOnPage: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    followingInProgress:number[]\r\n    portionSize:number\r\n}\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id =>  id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (id: number) => {\r\n    return {\r\n        type: FOLLOW, userID: id\r\n    } as const\r\n}\r\n\r\nexport const unFollowSuccess = (id: number) => {\r\n    return {\r\n        type: UNFOLLOW, userID: id\r\n    } as const\r\n}\r\nexport const setUsers = (users: UsersType[]) => {\r\n    return {\r\n        type: SET_USERS, users: users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (page: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE, currentPage: page\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (count: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT, totalCount: count\r\n    } as const\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING, isFetching\r\n    } as const\r\n}\r\nexport const toggleIsFollowingProgress = (followingInProgress: boolean, userId:number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId\r\n    } as const\r\n}\r\n\r\n//with async\r\nexport const getUsers = (currentPage: number, pageSize: number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n\r\n      let res = await  userAPI.getUsers(currentPage, pageSize);\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(res.items))\r\n                dispatch(setTotalUsersCount(res.totalCount))\r\n    }\r\n\r\nexport const getPage = (pageNumber: number, currentPage: number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n        dispatch(setCurrentPage(pageNumber))\r\n        dispatch(toggleIsFetching(true))\r\n\r\n        let res = await userAPI.getUsers(pageNumber, currentPage);\r\n                dispatch(toggleIsFetching(false))\r\n                dispatch(setUsers(res.items))\r\n    }\r\n\r\n\r\n\r\n\r\n const followUnFollowFlow = async (userId:number, dispatch: Dispatch<UsersActionType>,apiMethod: any,actionCreator:(id:number) => FollowActionType | UnFollowActionType ) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        let res = await apiMethod(userId)\r\n                if (res.resultCode === 0) {\r\n                    dispatch(actionCreator(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n    }\r\n\r\nexport const follow = (userId:number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n\r\n        let apiMethod = userAPI.followUser.bind(userAPI)\r\n        followUnFollowFlow(userId,dispatch, apiMethod,followSuccess )\r\n    }\r\n\r\nexport const unFollow = (userId:number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n\r\n        let apiMethod = userAPI.unFollowUser.bind(userAPI)\r\n        followUnFollowFlow(userId,dispatch, apiMethod,unFollowSuccess )\r\n    }\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {DialogActionType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionType, profileReducer} from \"./propfile-reducer\";\r\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionType, authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {AppActionType, appReducer} from \"./app-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    sidebar: sidebarReducer,\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    app:appReducer,\r\n    form:formReducer\r\n})\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport type ReduxStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport type ReduxActionType = AuthActionType | UsersActionType | DialogActionType | ProfileActionType | AppActionType\r\nexport type AppThunkType <ReturnType = void> = ThunkAction<ReturnType, ReduxStateType,unknown, ReduxActionType>\r\n\r\nexport default store","import s from \"./Preloader.module.css\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.ldsDualRing}></div>\r\n}","export default __webpack_public_path__ + \"static/media/img.1c5b1442.webp\";","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport Logo from './img.webp';\r\n\r\ntype PostType = {\r\n    message:string\r\n    like:number\r\n}\r\n\r\nfunction Post(props:PostType) {\r\n\r\n    return (\r\n\r\n        <div className={classes.content}>\r\n\r\n                <div className={classes.img}><img src={Logo} alt=\"\"/></div>\r\n                <div className={classes.message}> {props.message}</div>\r\n                <div className={classes.like}>like {props.like}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsMapDispatchToPropsType, MyPostsMapStateToPropsType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FormDataType} from \"../../Login/Login\";\r\nimport {maxLenghtCreator, minLenghtCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\";\r\nimport SuperButton from \"../../common/FormsControl/SuperButton\";\r\n\r\n\r\nexport type MyPostsPropsType = MyPostsMapStateToPropsType & MyPostsMapDispatchToPropsType\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let PostsElements =\r\n        props.posts.map(post => <Post message={post.messages} like={post.likesCount}/>)\r\n\r\n    let addPost = (text: any) => {\r\n        props.onClick(text.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.postBlock}>\r\n                <div className={classes.header}>\r\n                    <h4> My publications.</h4>\r\n                </div>\r\n                <AddNewPostFormRedux onSubmit={addPost}/>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {PostsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nlet maxLength = maxLenghtCreator(20)\r\nlet minLength = minLenghtCreator(4)\r\n\r\nconst AddNewPostForm = (props:InjectedFormProps<FormDataType> ) => {\r\n    return  <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'  Enter your message'}\r\n                    style={{margin: '10px 0'}}\r\n                    name={'newPostText'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength, minLength]}\r\n                />\r\n            </div>\r\n            <SuperButton>\r\n                Publish\r\n            </SuperButton>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport const AddNewPostFormRedux = reduxForm<FormDataType >({form: 'profileAddMessageForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator, PostsType} from \"../../../redux/propfile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type MyPostsMapStateToPropsType = {\r\n    posts:PostsType[]\r\n    newPostText:string\r\n}\r\nexport  type MyPostsMapDispatchToPropsType = {\r\n    onClick:(text:any) => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MyPostsMapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):MyPostsMapDispatchToPropsType => {\r\n    return {\r\n        onClick: (text:any) => {\r\n            dispatch(addPostCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer","import s from \"./ProfileInfo.module.css\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\n type PropsType = {\r\n     status: string\r\n     updateStatus:(text:string) => void\r\n }\r\nexport const ProfileStatusWithHooks = (props: PropsType) => {\r\n    const [editMode, setEditMode] = useState(true)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const deactivateEditMode = () => {\r\n        props.updateStatus(status)\r\n        setEditMode(true)\r\n    }\r\n    const onStatusChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    let checkedStatus = props.status === null ? 'Hello!' : props.status\r\n\r\n    return <div>\r\n        {editMode &&\r\n        <div className={s.statusInputDiv}>\r\n            <span onDoubleClick={(() => {setEditMode(false)})}>\r\n                {checkedStatus}\r\n            </span>\r\n        </div>}\r\n        {!editMode &&\r\n        <div className={s.changeStatusDiv}>\r\n            <input\r\n                onChange={onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={deactivateEditMode}\r\n                className={s.statusInput}\r\n                type=\"text\"\r\n                value={status}/>\r\n        </div>}\r\n    </div>\r\n}","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Logo from './../MyPosts/Post/img.webp';\r\nimport {ProfileType} from \"../../../redux/propfile-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatusWithHooks\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus:(text:string) => void\r\n}\r\n\r\nfunction ProfileInfo(props: PropsType) {\r\n    if (!props.profile) return <Preloader/>;\r\n\r\n    let photo = props.profile.photos.small ? props.profile.photos.large : Logo\r\n    let img = <img src={photo}/>\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <div>{img}</div>\r\n                <div className={classes.textBlock}>\r\n                    <div className={classes.status}>\r\n                        <div className={classes.name}>{props.profile.fullName} </div>\r\n                        <div  className={classes.statusWrap}>\r\n                            <p style={{ marginRight:'10px'}} > Status: </p>\r\n                                <ProfileStatusWithHooks  updateStatus={props.updateStatus} status={props.status}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.description}>Do you know that Falcon 9 is a reusable, two-stage rocket manufactured by SpaceX for the reliable and safe transport of people and\r\n                        payloads into Earth orbit and beyond? Now you know.\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React, {useEffect} from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport {ProfileType} from \"../../redux/propfile-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus:(text:string) => void\r\n    isAuth: boolean\r\n}\r\nfunction Profile(props:PropsType) {\r\n\r\n    useEffect(() => {\r\n        document.title =  props.profile?.fullName ? props.profile?.fullName : 'Profile'\r\n    },[props.profile?.fullName])\r\n\r\n        if(!props.isAuth){ return <Redirect to={'/login'}/> }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, ProfileType, updateStatus} from \"../../redux/propfile-reducer\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    isAuth: boolean\r\n    authorizedUserId: number | null\r\n}\r\n\r\ntype ProfileContainerType = mapStateToPropsType & {\r\n    getProfile:(userId:number) => void\r\n    getStatus:(userId:number) => void\r\n    updateStatus:(text:string) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\r\n\r\n class ProfileContainer extends React.Component<PropsType, {}>{\r\n\r\n    componentDidMount() {\r\n        let userId = +this.props.match.params.userId;\r\n        if(!userId) {\r\n            this.props.isAuth\r\n                ? userId = Number(this.props.authorizedUserId)\r\n                : this.props.history.push('/login')\r\n        }\r\n\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render(){\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default  compose<React.ComponentType>(connect(mapStateToProps,{getStatus,updateStatus,getProfile}),withRouter)(ProfileContainer)\r\n","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport SuperButton from \"../FormsControl/SuperButton\";\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalItemsCount: number\r\n    pageSize:number\r\n    currentPage: number\r\n    portionSize:number\r\n}\r\n\r\nexport const Paginator = React.memo((props:PaginatorPropsType) => {\r\n\r\n    let selectedPage = s.selectedPage + ' ' + s.pagination\r\n    const [portionNumber,setPortionNumber] = useState(1)\r\n\r\n     //всего юзеров / кол-во юзеров на странице = кол-во страниц\r\n    const pagesCount = Math.ceil( props.totalItemsCount / props.pageSize)\r\n    const pages:number[] = []\r\n\r\n    for (let i = 1;i <= pagesCount ;i++){ pages.push(i) }\r\n\r\n    // кол-во страниц / \"порцию страниц\"  = кол-во \"порций\" страниц\r\n    const portionCount = Math.ceil(pagesCount  / props.portionSize)\r\n\r\n    const leftPortionSize = (portionNumber - 1) * props.pageSize + 1\r\n    const rightPortionSize = portionNumber * props.pageSize\r\n\r\n    return (\r\n            <div className={s.wrap}>\r\n                {portionNumber > 1 &&\r\n                <SuperButton\r\n                    className={s.button}\r\n                    onClick={() => {setPortionNumber(portionNumber - 1)}}>\r\n                    PREV </SuperButton>}\r\n\r\n                {pages\r\n                    .filter(p => p >= leftPortionSize && p <= rightPortionSize)\r\n                    .map(p => {\r\n                    return <span\r\n                            className={props.currentPage === p ? selectedPage : s.pagination}\r\n                            onClick={()=>{props.onPageChanged(p)}}>\r\n                       {p} </span>  })}\r\n\r\n                {portionCount > portionNumber &&\r\n                <SuperButton\r\n                    className={s.button}\r\n                    style={{marginLeft:'10px'}}\r\n                    onClick={() => {setPortionNumber(portionNumber + 1)}}>\r\n                    NEXT </SuperButton>}\r\n            </div>\r\n)})","export default __webpack_public_path__ + \"static/media/logo2.73c0cc36.png\";","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport logo from \"./img/logo2.png\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\n\r\ntype UserPropsType = {\r\n    users: UsersType\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    followingInProgress:number[]\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = ({users,...props}) => {\r\n    let checkedStatus = users.status === null ? 'Hello!' : users.status\r\n\r\n    return (\r\n        <div className={s.userWrap}>\r\n            <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + users.id}>\r\n                            <img src={users.photos.small != null ? users.photos.small : logo} className={s.photo}/>\r\n                        </NavLink>\r\n                </div>\r\n\r\n                </span>\r\n            <span className={s.userInfoWrap}>\r\n                    <span style={{cursor:'default'}}>\r\n                        <div> {users.name}</div>\r\n                        <div  style={{fontStyle:'italic', fontSize:'16px'}}> {checkedStatus}</div>\r\n                    </span>\r\n\r\n                         <div  style={{marginLeft:'-3px'}}>\r\n\r\n                        {  users.followed\r\n                            ? <SuperButton\r\n                                style={{letterSpacing:'1px', fontSize:'14px'}}\r\n                                disabled={props.followingInProgress.some(id => id === users.id)}\r\n                                onClick={() => {props.unFollow(users.id)}}>\r\n                                UNFOLLOW\r\n                            </SuperButton>\r\n                            : <SuperButton  style={{letterSpacing:'1px', fontSize:'14px'}}\r\n                                            disabled={props.followingInProgress.some(id => id === users.id)}\r\n                                            onClick={() => {props.follow(users.id)}}>\r\n                                FOLLOW\r\n                            </SuperButton>\r\n                        }\r\n\r\n                    </div>\r\n                </span>\r\n        </div>\r\n\r\n)}","import React, {useEffect} from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\n\r\ntype UsersPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    followingInProgress:number[]\r\n    portionSize:number\r\n}\r\n\r\nexport const Users : React.FC<UsersPropsType> = (\r\n    {users,currentPage,pageSize: usersOnPage,\r\n        onPageChanged,totalUsersCount,portionSize,...props}) => {\r\n\r\n    useEffect(() => {\r\n        document.title = 'Users'\r\n    },[])\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n            { users.map(u =>\r\n                \r\n                <User\r\n                users={u}\r\n                key={u.id}\r\n                follow={props.follow}\r\n                unFollow={props.unFollow}\r\n                followingInProgress={props.followingInProgress}\r\n                />)\r\n            }\r\n\r\n                <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={usersOnPage}\r\n                portionSize={portionSize}\r\n            />\r\n        </div>\r\n\r\n)}","import {ReduxStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getUsersPageSelector = (state: ReduxStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsersPage = createSelector([getUsersPageSelector],(users) => {\r\n    return users\r\n})\r\n\r\nexport const getPageSize = (state: ReduxStateType) => {\r\n    return state.usersPage.usersOnPage\r\n}\r\n\r\nexport const getTotalUsersCount = (state: ReduxStateType) => {\r\n     return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: ReduxStateType) => {\r\n    return  state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: ReduxStateType) => {\r\n    return  state.usersPage.isFetching\r\n}\r\nexport const portionSize = (state: ReduxStateType) => {\r\n    return  state.usersPage.portionSize\r\n}\r\nexport const getFollowingInProgress = (state: ReduxStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    getPage,\r\n    getUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    toggleIsFollowingProgress, unFollow,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\n\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {Users} from \"./Users\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersPage, portionSize\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    followingInProgress:number[]\r\n    portionSize:number\r\n}\r\nexport type dispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    getUsers:(pageSize: number, currentPage: number)  => void\r\n    getPage:(pageNumber: number, currentPage: number)  => void\r\n}\r\n\r\ntype UsersPropsType = mapStateToPropsType & dispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component <UsersPropsType,{}>{\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} =  this.props\r\n        this.props.getUsers(currentPage,pageSize)\r\n    }\r\n    onPageChanged = (pageNumber:number) => {\r\n        const {pageSize} =  this.props\r\n        this.props.getPage(pageNumber,pageSize)\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : ''}\r\n            <Users\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unFollow={this.props.unFollow}\r\n            followingInProgress={this.props.followingInProgress}\r\n            portionSize={this.props.portionSize}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType):mapStateToPropsType => {\r\n    return {\r\n        users: getUsersPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        portionSize: portionSize(state),\r\n        followingInProgress:getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n    {follow, unFollow, setUsers,\r\n        setCurrentPage, setTotalUsersCount, toggleIsFetching,\r\n        toggleIsFollowingProgress,getUsers, getPage}), WithAuthRedirect)(UsersContainer)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {BrowserRouter, Redirect, Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initialize} from \"./redux/app-reducer\";\r\nimport store, {ReduxStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport { Suspense } from 'react';\r\nimport { lazy } from 'react';\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nconst News = lazy(() => import('./components/News/News'));\r\nconst Music = lazy(() => import('./components/Music/Music'));\r\nconst Settings = lazy(() => import('./components/Settings/Settings'));\r\n\r\ntype HeaderContainerType  =  MapStateToPropsType & {\r\n    initialize:() => void\r\n}\r\ntype  MapStateToPropsType = {\r\n    initialized:boolean\r\n}\r\n\r\nclass App extends React.Component<HeaderContainerType, {}> {\r\n    componentDidMount() {\r\n        this.props.initialize()\r\n\r\n    }\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return  <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                    <HeaderContainer/>\r\n                <div className='app-content-wrapper'>\r\n                    <div className='nav-wrapper'>\r\n                        <Navbar/>\r\n                    </div>\r\n                    <div className='content-wrapper'>\r\n                        <Suspense fallback={<Preloader/>}>\r\n                            <Route path='/' exact render={() => <Redirect to={'profile'}/>}/>\r\n                            <Route path='/ReactSocial' exact render={() => <Redirect to={'profile'}/>}/>\r\n                            <Route path='/ReactSocial/profile' exact render={() => <Redirect to={'profile'}/>}/>\r\n                            <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                            <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                            <Route path='/users' render={() => <UsersContainer/>}/>\r\n                            <Route path='/login' render={() => <Login/>}/>\r\n                            <Route path='/news' render={() => <News/>}/>\r\n                            <Route path='/music' render={() => <Music/>}/>\r\n                            <Route path='/settings' render={() => <Settings/>}/>\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MapStateToPropsType => ({\r\n    initialized: state.app.initialized,\r\n})\r\nconst AppConnect = connect(mapStateToProps,{initialize}) (App);\r\n\r\n const AppContainer = () => {\r\n return  <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <AppConnect/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>\r\n}\r\nexport default AppContainer","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./App\";\r\n\r\n\r\nReactDOM.render(<AppContainer/>, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__nwlMs\",\"selectedPage\":\"Paginator_selectedPage__1npOX\",\"wrap\":\"Paginator_wrap__2rKXl\",\"button\":\"Paginator_button__1o8_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Users_wrap__3sWeN\",\"userWrap\":\"Users_userWrap__3H8b4\",\"userInfoWrap\":\"Users_userInfoWrap__1vcPb\",\"photo\":\"Users_photo__38xCo\",\"pagination\":\"Users_pagination__OHGGc\",\"selectedPage\":\"Users_selectedPage__2C9Fy\",\"user\":\"Users_user__2JHGo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Ozwe\",\"wrap\":\"Header_wrap__2BQLM\",\"logo\":\"Header_logo__1sU97\",\"brand\":\"Header_brand__3FSq4\",\"loginBlock\":\"Header_loginBlock__1m390\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3kQ5e\",\"red\":\"SuperButton_red__1nNl2\",\"button\":\"SuperButton_button__8zyzT\",\"blink\":\"SuperButton_blink__3b_VN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrap\":\"Login_loginWrap__1wP8M\",\"login\":\"Login_login__H5P_O\",\"auth\":\"Login_auth__1nYT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__bddHt\",\"posts\":\"MyPosts_posts__1YkW2\",\"header\":\"MyPosts_header__uORGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3MiuU\",\"img\":\"Post_img__1AXZT\",\"message\":\"Post_message__3A_LI\",\"like\":\"Post_like___r4DU\"};"],"sourceRoot":""}