{"version":3,"sources":["Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Header/Header.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Profile.module.css","Redux/sidebar-reducer.tsx","Redux/dialogs-reducer.tsx","Redux/propfile-reducer.tsx","Redux/redux-store.tsx","Components/Header/Header.tsx","Components/Navbar/Navbar.tsx","Components/Profile/MyPosts/Post/img.webp","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx","App.tsx","index.tsx","Components/Navbar/Navbar.module.css","Components/Dialogs/Dialogs.module.css"],"names":["module","exports","initialState","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogs","id","name","messages","newMessageBody","UPDATE_NEW_POST","ADD_POST","posts","likesCount","newPostText","rootReducer","combineReducers","sidebar","state","dialogsPage","action","type","body","Date","getTime","profilePage","newPost","newText","store","createStore","Header","className","classes","header","logo","Navbar","nav","item","to","activeClassName","active","Post","props","content","img","src","Logo","alt","message","like","MyPosts","PostsElements","map","post","newPostElement","React","createRef","postBlock","onChange","event","text","currentTarget","value","ref","onClick","MyPostsContainer","connect","dispatch","updateNewPostCreator","ProfileInfo","descriptionBlock","description","Profile","s","News","Music","Settings","DialogItem","path","dialog","Message","Dialogs","dialogsElements","messagesElements","dialogsItems","updateNewMessageBody","sendMessage","DialogsContainer","updateNewMessageCreator","App","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55229eec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3DGyO\",\"img\":\"Post_img__kHxfE\",\"message\":\"Post_message__3QPS7\",\"like\":\"Post_like__1Xkw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1DqSy\",\"item\":\"MyPosts_item__WB3A_\",\"posts\":\"MyPosts_posts__aBbYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1SEQZ\",\"logo\":\"Header_logo__VwJNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1J6dA\",\"description\":\"ProfileInfo_description__1e9aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2BDJ4\"};","let initialState = {}\r\n\r\n\r\nexport const sidebarReducer = (state:any = initialState,action:any) => {\r\n\r\n    return state\r\n\r\n}\r\n","\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DispatchType = UpdateNewMessageBodyActionType | SendMessageActionType\r\n\r\ntype UpdateNewMessageBodyActionType = ReturnType<typeof updateNewMessageCreator>\r\ntype SendMessageActionType = ReturnType<typeof sendMessageCreator>\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Anya'},\r\n        {id: 4, name: 'Sveta'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'},\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'How are you?'},\r\n        {id: 3, messages: 'Good'},\r\n    ] as MessagesType[],\r\n    newMessageBody:''\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: DispatchType):InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n\r\n            return {...state,\r\n                newMessageBody: action.body}\r\n\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody\r\n            return {...state,\r\n                newMessageBody: '',\r\n                messages:[...state.messages,{id: new Date().getTime(), messages: body}]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = () => {\r\n   return {\r\n        type: SEND_MESSAGE\r\n    } as const\r\n}\r\nexport const updateNewMessageCreator = (text: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY, body: text\r\n    } as const\r\n}","const UPDATE_NEW_POST = 'UPDATE-NEW-POST-TEXT';\r\nconst ADD_POST = 'ADD-POST';\r\n\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    messages: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n}\r\nexport type DispatchType = AddPostActionType | UpdatePostActionType\r\ntype AddPostActionType = ReturnType<typeof addPostCreator>\r\ntype UpdatePostActionType = ReturnType<typeof updateNewPostCreator>\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            messages: 'Hi,how are you?',\r\n            likesCount: 11,\r\n        },\r\n        {\r\n            id: 2,\r\n            messages: 'its my first posts',\r\n            likesCount: 41,\r\n        },\r\n\r\n    ],\r\n    newPostText:''\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: DispatchType):ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                messages: state.newPostText,\r\n                likesCount: 0,\r\n            }\r\n\r\n            return {...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n\r\n        case UPDATE_NEW_POST:\r\n            return {...state,\r\n                newPostText: action.newText\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addPostCreator = () => {\r\n   return {\r\n        type: ADD_POST\r\n    } as const\r\n}\r\nexport const updateNewPostCreator = (text: string)=> {\r\n    return {\r\n        type: UPDATE_NEW_POST, newText: text\r\n    }as const\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {profileReducer} from \"./propfile-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    sidebar: sidebarReducer,\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer\r\n})\r\n\r\nexport type ReduxStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer)\r\n\r\n\r\n\r\nexport default store","import React from \"react\";\r\nimport classes from './Header.module.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from './Navbar.module.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile'  activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/dialogs' activeClassName={classes.active}> Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/img.1c5b1442.webp\";","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport Logo from './img.webp';\r\n\r\ntype PostType = {\r\n    message:string\r\n    like:number\r\n}\r\n\r\nfunction Post(props:PostType) {\r\n\r\n    return (\r\n\r\n        <div className={classes.content}>\r\n\r\n                <div className={classes.img}><img src={Logo} alt=\"\"/></div>\r\n                <div className={classes.message}> {props.message}</div>\r\n                <div className={classes.like}>like {props.like}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsMapDispatchToPropsType, MyPostsMapStateToPropsType} from \"./MyPostsContainer\";\r\n\r\n\r\nexport type MyPostsPropsType = MyPostsMapStateToPropsType & MyPostsMapDispatchToPropsType\r\n\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n\r\n     let PostsElements =\r\n        props.posts.map (post => <Post message={post.messages} like={post.likesCount} />)\r\n\r\n     let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    const onPostChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = event.currentTarget.value\r\n        props.onChange(text);\r\n    }\r\n    let addPost = () => {\r\n        props.onClick()\r\n    }\r\n    return (\r\n        <div className={classes.content}>\r\n\r\n            <div className={classes.postBlock}>\r\n                <div>\r\n                    <h4>My publications</h4>\r\n                </div>\r\n                <div>\r\n                    <textarea\r\n                        onChange={onPostChange}\r\n                        value={props.newPostText}\r\n                        ref={newPostElement}> </textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}> Publish</button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {PostsElements}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator, PostsType, updateNewPostCreator} from \"../../../Redux/propfile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type MyPostsMapStateToPropsType = {\r\n    posts:PostsType[]\r\n    newPostText:string\r\n}\r\nexport  type MyPostsMapDispatchToPropsType = {\r\n    onChange:(text:string) => void\r\n    onClick:() => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MyPostsMapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):MyPostsMapDispatchToPropsType => {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(addPostCreator())\r\n        },\r\n        onChange: (text: string) => {\r\n            let action = updateNewPostCreator(text);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Logo from './../MyPosts/Post/img.webp';\r\n\r\nfunction ProfileInfo() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\" alt=\"\"/>\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                <div><img src={Logo} alt=\"\"/></div>\r\n                <div className={classes.description}>  Hello! Nice to meet you on my page. There is will be description about my page. You should wait for this.</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\n\r\n\r\nfunction Profile() {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport classes from './News.module.css'\r\n\r\nfunction News  () {\r\n    return (\r\n        <div >\r\n           news\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News"," import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\nfunction Music  () {\r\n    return (\r\n        <div >\r\n      music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react';\r\nimport classes from './Settings.module.css'\r\n\r\nfunction Settings  () {\r\n    return (\r\n        <div >\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nexport type DialogItemType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\n\r\nfunction DialogItem(props: DialogItemType) {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}> {props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype MessageType = {\r\n    message:string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from './Message/Message';\r\nimport {DialogsMapDispatchToPropsType, DialogsMapStateToPropsType} from \"./DialogsContainer\";\r\n\r\n\r\ntype DialogType = DialogsMapStateToPropsType & DialogsMapDispatchToPropsType\r\n\r\nfunction Dialogs(props: DialogType) {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message key={message.id} message={message.messages}/>)\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let newMessageBody = props.dialogsPage.newMessageBody\r\n\r\n    let updateNewMessageBody = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = event.currentTarget.value\r\n        props.updateNewMessageBody(text)\r\n    }\r\n    let sendMessage = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div>\r\n                    <div>\r\n                    <textarea\r\n                        onChange={updateNewMessageBody}\r\n                        value={newMessageBody}\r\n                        ref={newPostElement}> </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={sendMessage}> Send message</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {InitialStateType, sendMessageCreator, updateNewMessageCreator} from '../../Redux/dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type DialogsMapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\nexport type DialogsMapDispatchToPropsType = {\r\n    updateNewMessageBody:(text:string) => void\r\n    sendMessage:() => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):DialogsMapDispatchToPropsType => {\r\n    return {\r\n     updateNewMessageBody: (text:string) => {\r\n         let action = updateNewMessageCreator(text);\r\n         dispatch(action)\r\n     },\r\n        sendMessage: () => {\r\n           dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Profile from \"./Components/Profile/Profile\";\nimport {Route} from \"react-router-dom\";\nimport News from './Components/News/News';\nimport Music from './Components/Music/Music';\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\n\n\nfunction App() {\n\n\n    return (\n\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile' render={() => <Profile/>}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                </div>\n            </div>\n\n    );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport './index.css';\nimport store from './Redux/redux-store';\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from 'react-redux';\n\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <BrowserRouter>\n                <Provider store={store}>\n                <App/>\n                </Provider>\n            </BrowserRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3IHOI\",\"item\":\"Navbar_item__3-xYg\",\"active\":\"Navbar_active__ItIae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Wwmq0\",\"dialogsItems\":\"Dialogs_dialogsItems__k-GXX\",\"active\":\"Dialogs_active__1JhBv\",\"dialog\":\"Dialogs_dialog__11cD9\",\"messages\":\"Dialogs_messages__3zY0R\"};"],"sourceRoot":""}