{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/common/FormsControl/FormsControls.module.css","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/common/FormsControl/FormsControls.tsx","utils/validators/validators.tsx","components/common/FormsControl/SuperButton.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx","components/Header/logo/rocket33.png","components/Header/Header.tsx","api/api.ts","redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/sidebar-reducer.tsx","redux/propfile-reducer.tsx","redux/users-reducer.ts","redux/redux-store.tsx","components/common/Preloader/Preloader.tsx","components/Profile/MyPosts/Post/img/img.webp","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Users/img/logo2.png","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/common/DragAndDrop/DragAndDrop.tsx","components/common/Checkbox/SuperCheckbox.tsx","components/Profile/ProfileInfo/ContentForm/ContentForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearch.tsx","components/Users/Users.tsx","redux/users-selectors.tsx","components/Users/UsersContainer.tsx","components/common/404/Error404.tsx","App.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/common/404/Error404.module.css","components/Header/Header.module.css","components/common/FormsControl/SuperButton.module.css","components/Login/Login.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/common/DragAndDrop/DragAndDrop.module.css","components/common/Checkbox/SuperCheckbox.module.css"],"names":["module","exports","Navbar","className","classes","nav","item","to","activeClassName","active","SEND_MESSAGE","initialState","dialogs","id","name","messages","DialogItem","props","path","s","dialog","style","color","Message","message","Textarea","input","meta","value","restProps","classStyle","touched","error","errorTextarea","textarea","errorSpan","Input","FormInput","field","form","errors","formClass","FormSelect","children","required","maxLengthCreator","maxLength","length","minLengthCreator","minLength","SuperButton","red","finalClassName","default","button","AddMessageFormRedux","reduxForm","useState","text","setText","onSubmit","handleSubmit","Field","onChange","e","currentTarget","placeholder","margin","validate","component","onClick","width","Dialogs","useEffect","document","title","dialogsElements","dialogsPage","map","messagesElements","dialogsItems","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","isAuth","WithAuthRedirect","Component","connect","compose","dispatch","type","Header","ResultCode","header","wrap","logo","src","alt","brand","loginBlock","login","fontSize","padding","logout","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","term","friend","isFriend","get","then","response","data","followUser","post","unFollowUser","delete","authUser","authAPI","email","password","rememberMe","captchaURL","profileAPI","userId","file","formData","FormData","append","put","profile","status","securityAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","setAuthUserData","payload","getCaptchaURLSuccess","a","resultCode","Success","HeaderContainer","this","React","LoginReduxForm","useSelector","loginWrap","href","target","height","display","marginTop","marginRight","Captcha","res","url","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","posts","likesCount","newPostText","isOwner","updateMode","setStatus","profileUpdateMode","mode","getProfile","console","log","users","usersOnPage","totalUsersCount","isFetching","followingInProgress","portionSize","filter","actions","followSuccess","userID","setFilter","unFollowSuccess","setUsers","setCurrentPage","page","setTotalUsersCount","count","totalCount","toggleIsFetching","toggleIsFollowingProgress","followUnFollowFlow","apiMethod","actionCreator","rootReducer","combineReducers","sidebar","action","body","Date","getTime","profilePage","newPost","photos","usersPage","u","followed","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Preloader","ldsDualRing","Post","content","img","Logo","like","MyPosts","memo","PostsElements","postBlock","AddNewPostFormRedux","MyPostsContainer","ProfileStatusWithHooks","editMode","setEditMode","deactivateEditMode","updateStatus","checkedStatus","flexWrap","statusInputDiv","onDoubleClick","changeStatusDiv","autoFocus","onBlur","statusInput","onKeyPress","key","DragAndDrop","drag","setDrag","dragStartHandler","preventDefault","dragLeaveHandler","dragWrap","drop","onDragStart","onDragOver","onDragLeave","onDrop","dataTransfer","files","setPhoto","setEditPhotoMode","onDropHandler","SuperCheckbox","checked","onChangeChecked","spanClassName","finalInputClassName","checkbox","label","contentFormValidate","values","ContentForm","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","fragmentWrap","contentForm","initialValues","setSubmitting","setProfile","isSubmitting","paddingRight","Object","entries","contacts","justifyContent","marginLeft","marginBottom","opacity","disabled","Content","flexDirection","detailsWrap","details","textAlign","ProfileInfo","editPhotoMode","photoSmall","small","photoLarge","large","descriptionBlock","contentWrap","Profile","myPostWrap","ProfileContainer","match","params","Number","authorizedUserId","history","push","getStatus","setUserId","prevProps","prevState","snapshot","getState","Promise","reject","withRouter","Paginator","selectedPage","pagination","portionNumber","setPortionNumber","pagesCount","Math","ceil","totalItemsCount","pages","i","portionCount","leftPortionSize","rightPortionSize","p","index","onPageChanged","User","userWrap","photo","userInfoWrap","cursor","fontStyle","letterSpacing","some","unFollow","follow","usersSearchValidate","UsersSearch","onFilterChanged","Users","getUsersPage","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getUsersFilter","UsersContainer","pageNumber","bind","items","getPage","Error404","errorWrap","errorBox","err","msg","News","lazy","Music","Settings","App","catchAllUnHandledErrors","initialize","addEventListener","removeEventListener","fallback","exact","render","DialogsContainer","AppConnect","promise","all","AppContainer","StrictMode","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.26079bd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2knFI\",\"detailsWrap\":\"ProfileInfo_detailsWrap__2HAQd\",\"details\":\"ProfileInfo_details__2yjPH\",\"img\":\"ProfileInfo_img__168ug\",\"textBlock\":\"ProfileInfo_textBlock__3HsWL\",\"description\":\"ProfileInfo_description__2Bnqe\",\"contentWrap\":\"ProfileInfo_contentWrap__1ttk9\",\"fragmentWrap\":\"ProfileInfo_fragmentWrap__1flSx\",\"contentForm\":\"ProfileInfo_contentForm__1pRBU\",\"name\":\"ProfileInfo_name__2Nfxf\",\"content\":\"ProfileInfo_content__1ZaTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1jbYM\",\"myPostWrap\":\"Profile_myPostWrap__2Mtbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControls_form-control__3UWpJ\",\"input\":\"FormsControls_input__3tU5n\",\"textarea\":\"FormsControls_textarea__2A0lr\",\"errorInput\":\"FormsControls_errorInput__ShC7f\",\"errorTextarea\":\"FormsControls_errorTextarea__8lQff\",\"errorSpan\":\"FormsControls_errorSpan__1qZvi\",\"formClass\":\"FormsControls_formClass__3UCOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__3yn0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3TPlV\",\"item\":\"Navbar_item__1mjvs\",\"active\":\"Navbar_active__rcQNT\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from './Navbar.module.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile' activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/dialogs' activeClassName={classes.active}> Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/users' activeClassName={classes.active}> Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","\r\nconst SEND_MESSAGE = 'DIALOGS/SEND_MESSAGE'\r\n\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DialogActionType = SendMessageActionType\r\ntype SendMessageActionType = ReturnType<typeof sendMessageCreator>\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Anya'},\r\n        {id: 4, name: 'Sveta'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'},\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'How are you?'},\r\n        {id: 3, messages: 'Good'},\r\n    ] as MessagesType[]\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: DialogActionType):InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {...state,\r\n                messages:[...state.messages,{id: new Date().getTime(), messages: body}]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody:any) => {\r\n   return {\r\n        type: SEND_MESSAGE, newMessageBody\r\n    } as const\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nexport type DialogItemType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nfunction DialogItem(props: DialogItemType) {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink style={{color:'black'}} to={path}> {props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype MessageType = {\r\n    message:string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport {WrappedFieldsProps} from 'redux-form/lib/Fields'\r\nimport { FieldProps } from 'formik'\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldsProps> = ({input,meta, value, ...restProps}) => {\r\n    const classStyle = meta.touched && meta.error ? s.errorTextarea + ' ' + s.textarea :  s.textarea\r\n    return <div>\r\n        <textarea className={classStyle} {...restProps} {...value}{...input} {...meta}/>\r\n        <div>\r\n            {meta.touched && meta.error && <span className={s.errorSpan}> {meta.error}</span>}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldsProps> = ({input,meta, ...restProps}) => {\r\n    const classStyle = meta.touched && meta.error ? s.errorTextarea + ' ' + s.textarea :  s.textarea\r\n    return <div>\r\n        <input className={classStyle} {...restProps} {...input} {...meta}/>\r\n        <div>\r\n            {meta.touched && meta.error && <span className={s.errorSpan}> {meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const FormInput:  React.ComponentType<FieldProps> = ({ field,  form: { touched, errors }, ...props }) => {\r\n    const classStyle = touched[field.name] && errors[field.name] ? s.errorTextarea + ' ' + s.textarea + ' ' + s.formClass  :  s.textarea + ' ' + s.formClass\r\n    return <div>\r\n        <input className={classStyle}\r\n               {...field} {...props}/>\r\n        <div>\r\n            {touched[field.name] && errors[field.name] && <span className={s.errorSpan}> {errors[field.name]}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const FormSelect:  React.ComponentType<FieldProps> = ({children, field,  form: { touched, errors }, ...props }) => {\r\n    const classStyle = touched[field.name] && errors[field.name] ? s.errorTextarea + ' ' + s.textarea + ' ' + s.formClass :  s.textarea + ' ' + s.formClass\r\n    return <div>\r\n        <select className={classStyle}\r\n               {...field} {...props}>\r\n            {children}\r\n        </select>\r\n        <div>\r\n            {touched[field.name] && errors[field.name] && <span className={s.errorSpan}> {errors[field.name]}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n","export const required = (value: any) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: any) => (value: any) => {\r\n    if (value && value.length > maxLength)  return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\nexport const minLengthCreator = (minLength: any) => (value: any) => {\r\n    if (value && value.length < minLength)  return `Min length is ${minLength} symbols`\r\n    return undefined\r\n}\r\n\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red + ' ' + s.default : s.default} ${className} ${s.button}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from './Message/Message';\r\nimport {DialogsMapDispatchToPropsType, DialogsMapStateToPropsType} from \"./DialogsContainer\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FormDataType} from \"../Login/Login\";\r\nimport {Textarea} from \"../common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\n\r\n\r\nexport type DialogType = DialogsMapStateToPropsType & DialogsMapDispatchToPropsType\r\n\r\nfunction Dialogs(props: DialogType) {\r\n    useEffect(() => {\r\n        document.title = 'Messages'\r\n    },[])\r\n\r\n\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message key={message.id} message={message.messages}/>)\r\n\r\n\r\n    let sendMessage = (text: any ) => {\r\n        props.sendMessage(text.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div>\r\n                    <AddMessageFormRedux onSubmit={sendMessage}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nlet maxLength = maxLengthCreator(40)\r\nlet minLength = minLengthCreator(4)\r\n\r\nconst AddMessageForm = (props: InjectedFormProps<FormDataType> ) => {\r\n    const [text,setText] = useState('asD12')\r\n\r\n    return  <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    value={text}\r\n                    onChange={(e: any) => {setText(e?.currentTarget.value)}}\r\n                    placeholder={'Enter your message'}\r\n                    style={{margin: '10px 0'}}\r\n                    validate={[required, maxLength, minLength]}\r\n                    name={'newMessageBody'} component={Textarea}/>\r\n            </div>\r\n            <SuperButton\r\n                onClick={()=>{setText('')}}\r\n                style={{width:'120px'}}>\r\n                Send message\r\n            </SuperButton>\r\n        </form>\r\n    </div>\r\n}\r\nexport const AddMessageFormRedux = reduxForm<FormDataType>({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {ReduxStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStateForRedirectPropsType = {\r\n    auth: boolean\r\n}\r\nlet mapStateToPropsForRedirect = (state: ReduxStateType): mapStateForRedirectPropsType => {\r\n    return {\r\n        auth: state.auth.isAuth\r\n    }\r\n}\r\nexport function WithAuthRedirect <T>(Component: ComponentType<T>)  {\r\n\r\n    const RedirectComponent = (props:mapStateForRedirectPropsType) => {\r\n            let {auth, ...restProps} = props\r\n            if (!props.auth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...restProps as T}/>\r\n\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from 'react';\r\nimport {InitialStateType, sendMessageCreator} from '../../redux/dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\n\r\nexport type DialogsMapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\nexport type DialogsMapDispatchToPropsType = {\r\n    sendMessage:(text:any) => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):DialogsMapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: (text:any) => {\r\n           dispatch(sendMessageCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,mapDispatchToProps), WithAuthRedirect)(Dialogs)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/rocket33.bf84b78f.png\";","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport classes from './Header.module.css';\r\nimport logo from './logo/rocket33.png';\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\n\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nfunction Header(props:HeaderPropsType) {\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.wrap}>\r\n                <div className={classes.logo}> <img  src={logo} alt=\"\"/> <div className={classes.brand}>SOCIAL NETWORK </div> </div>\r\n                <div className={classes.loginBlock}>\r\n                    {props.isAuth\r\n                        ? <div>\r\n                            <NavLink  to={'/profile'}> {props.login} </NavLink>\r\n                            <SuperButton\r\n                                style={{fontSize: '12px', width: '60px', margin: '0 0 0 8px', padding: '4px'}}\r\n                                onClick={props.logout}>\r\n                                Log out\r\n                            </SuperButton>\r\n                        </div>\r\n                        : <NavLink to={'/login'}> Login </NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\nimport {UsersType} from \"../redux/users-reducer\";\r\nimport {ProfileType} from \"../redux/propfile-reducer\";\r\nimport {FormType} from \"../components/Profile/ProfileInfo/ContentForm/ContentForm\";\r\n\r\n\r\nexport enum ResultCode  {\r\n    Success = 0,\r\n    Error = 1,\r\n    Captcha = 10,\r\n}\r\n\r\nexport type CommonType<T = {}> = {\r\n    data: T\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: ResultCode\r\n}\r\n\r\ntype UsersCommonType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n    error: null | string\r\n}\r\ntype MeResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL:  'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:{\r\n        'API-KEY':'7e928b19-02e3-4839-a906-80cc9541b152'\r\n    }})\r\n\r\nexport const userAPI = {\r\n\r\n    getUsers (currentPage = 1, pageSize = 5, term:string = '', friend:null | boolean = null) {\r\n        const isFriend = friend === null ? '' : `&friend=${friend}`\r\n\r\n        return instance.get<UsersCommonType>( `users?page=${currentPage}&count=${pageSize}&term=${term}`+ isFriend)\r\n            .then(response => response.data)},\r\n\r\n    followUser(id:number)  {\r\n        return instance.post<CommonType>(`follow/${id}`)\r\n            .then(response =>  response.data)},\r\n\r\n    unFollowUser(id:number) {\r\n        return instance.delete<CommonType>(`follow/${id}`)\r\n            .then(response => response.data)},\r\n\r\n    //without instance\r\n    authUser() {\r\n        return axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n            withCredentials:true})\r\n            .then(response => {\r\n              return response.data})\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<CommonType<MeResponseType>>(`auth/me`, {})\r\n            .then(response =>  response.data)},\r\n\r\n    login(email:string, password:string,rememberMe:boolean = false,captchaURL:string | null = null) {\r\n        return instance.post<CommonType<{userId: number}>>(`auth/login`, {email,password,rememberMe,captchaURL})\r\n    },\r\n    logout() {\r\n        return instance.delete<CommonType>(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId:number | null) {\r\n        return instance.get(`profile/`+ userId)\r\n            .then(response => {\r\n                return response\r\n            })},\r\n    getStatus(userId:number) {\r\n        return instance.get(`profile/status/`+ userId)\r\n          },\r\n    setPhoto(file:string | Blob) {\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n\r\n        return instance.put(`/profile/photo/`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }})\r\n          },\r\n    setProfile(profile:FormType) {\r\n        return instance.put(`profile`,profile)\r\n    },\r\n\r\n    updateStatus(status:string) {\r\n        return instance.put<CommonType>(`profile/status/`, {status})\r\n           },\r\n\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL() {\r\n        return instance.get<CommonType<{url: string}>>(` /security/get-captcha-url/`)\r\n    },\r\n}","import {authAPI, ResultCode, securityAPI} from \"../api/api\";\r\nimport {AppThunkType, ReduxStateType} from \"./redux-store\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nexport type AuthActionType = SetUserDataActionType | GetCaptchaURLSuccess\r\ntype SetUserDataActionType = ReturnType<typeof setAuthUserData>\r\ntype GetCaptchaURLSuccess = ReturnType<typeof getCaptchaURLSuccess>\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth:false,\r\n    captchaURL:null, //if null, captcha not required\r\n}\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaURL: string | null\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n            case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,captchaURL: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId:number| null, email:string| null, login:string| null,isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA, payload:{userId,email,login,isAuth}\r\n    } as const\r\n}\r\nexport const getCaptchaURLSuccess = (captchaURL: string) => ({type: GET_CAPTCHA_URL_SUCCESS, payload:captchaURL } as const)\r\n\r\n\r\n//with async\r\nexport const authUser = ():AppThunkType =>\r\n    async (dispatch) => {\r\n      let response = await  authAPI.me();\r\n\r\n                if (response.resultCode === ResultCode.Success) {\r\n                    let {id, login, email} = response.data\r\n                    dispatch(setAuthUserData(id, email, login, true))\r\n                }\r\n}\r\nexport const getCaptchaURL = ():AppThunkType =>\r\n    async (dispatch) => {\r\n        const res = await  securityAPI.getCaptchaURL();\r\n\r\n        const captchaURL = res.data.data.url\r\n        dispatch(getCaptchaURLSuccess(captchaURL))\r\n    }\r\nexport const login = (email:string, password:string, rememberMe:boolean, captchaURL:string | null) =>\r\n    async (dispatch: ThunkDispatch<ReduxStateType, unknown, AuthActionType | FormAction>) => {\r\n        let response = await  authAPI.login(email, password, rememberMe,captchaURL);\r\n\r\n                if (response.data.resultCode === ResultCode.Success) {\r\n                    dispatch(authUser())\r\n                } else {\r\n                    if (response.data.resultCode === ResultCode.Captcha) {\r\n                        dispatch(getCaptchaURL())\r\n                    }\r\n                 let message = response.data.messages.length > 0\r\n                     ? response.data.messages\r\n                     : 'Something is wrong'\r\n                    dispatch(stopSubmit('login',{_error: message}))\r\n                }\r\n    }\r\n\r\n//without async\r\nexport const logout = ():AppThunkType => {\r\n    return (dispatch) => {\r\n        authAPI.logout()\r\n            .then(data => {\r\n                if (data.data.resultCode === ResultCode.Success) {\r\n                    dispatch(setAuthUserData(null,null,null,false))\r\n                }\r\n            })\r\n    }\r\n}","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {authUser, logout} from \"../../redux/auth-reducer\";\r\n\r\ntype HeaderContainerType = MapStateToPropsType &{\r\n    authUser:() => void\r\n    logout:() => void\r\n}\r\nclass HeaderContainer extends React.Component<HeaderContainerType, {}>{\r\n\r\n    render() {\r\n      return <Header {...this.props}/>\r\n    }\r\n}\r\ntype  MapStateToPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\nexport default connect(mapStateToProps,{authUser, logout}) (HeaderContainer);","import React, {ComponentType, useEffect} from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./Login.module.css\";\r\n\r\n\r\nexport type FormDataType = {\r\n    email:string\r\n    password:string\r\n    captchaURL:string | null\r\n    rememberMe:boolean\r\n}\r\n\r\nlet maxLength = maxLengthCreator(20)\r\nlet minLength = minLengthCreator(4)\r\n\r\nexport const LoginForm:React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit,...props}) => {\r\n\r\n    const captchaURL = useSelector<ReduxStateType,string | null>(state => state.auth.captchaURL)\r\n\r\n    useEffect(() => {\r\n        document.title = 'Login'\r\n    },[])\r\n\r\n\r\n    return <div>\r\n        <form  className={s.loginWrap} onSubmit={handleSubmit}>\r\n            <p className={s.login}>Sign in</p>\r\n            <div className={s.auth}>\r\n                <p> You can use this app with default authorization or register\r\n                    <a href=\"https://social-network.samuraijs.com/\" target=\"_blank\"> here</a>\r\n                </p>\r\n                <p> Email: free@samuraijs.com</p>\r\n                <p>Password: free</p>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'   Email'}\r\n                       style={{height: '35px', width:'100%'}}\r\n                       validate={[required]}\r\n                       name={'email'}\r\n                       component={Input}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'   Password'}\r\n                       style={{height: '35px', width:'100%'}}\r\n                       validate={[required, maxLength, minLength]}\r\n                       type={'password'}\r\n                       name={'password'}\r\n                       component={Input}/>\r\n            </div>\r\n            <div style={{display: 'flex',marginTop: '5px'}}>\r\n                <Field\r\n                      style={{marginRight: '8px'}}\r\n                      component={'input'}\r\n                       name={'rememberMe'}\r\n                       type={\"checkbox\"}\r\n                />\r\n                <p style={{marginTop: '-6px'}}>Remember me</p>\r\n            </div>\r\n            <div style={{display: 'flex',marginTop: '5px'}}>\r\n                {captchaURL &&  <img src={captchaURL}/> }\r\n\r\n                {captchaURL &&   <Field\r\n                    style={{marginRight: '8px'}}\r\n                    component={Input}\r\n                    placeholder={'Symbols from image'}\r\n                    validate={required}\r\n                    name={'captchaURL'}\r\n                />}\r\n            </div>\r\n            <div>\r\n                <SuperButton> Login</SuperButton>\r\n            </div>\r\n            {props.error && <div className={s.errorTextarea}>{props.error}</div>}\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport const LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\ntype LoginType = mapStateToPropsType & {\r\n    login:(email:string, password:string, rememberMe:boolean,captchaURL:string | null) => void\r\n}\r\n\r\nconst Login = (props:LoginType) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email,formData.password,formData.rememberMe,formData.captchaURL)\r\n    }\r\n\r\n    if(props.isAuth){ return <Redirect to={'/profile'}/> }\r\n\r\n    return <div>\r\n        <LoginReduxForm  onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth:boolean\r\n}\r\nlet mapStateToProps = (state: ReduxStateType):mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n   }\r\n}\r\nexport default connect (mapStateToProps,{login})(Login)","import {authUser} from \"./auth-reducer\";\r\nimport {AppThunkType} from \"./redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\n\r\n\r\ntype InitializedSuccessType = ReturnType<typeof initializedSuccess>\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized:false,\r\n}\r\n\r\nexport type AppActionType = InitializedSuccessType\r\nexport type InitialStateType = {\r\n    initialized:boolean\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized:true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    } as const\r\n}\r\n\r\nexport const initialize = (): AppThunkType =>\r\n    (dispatch) => {\r\n        let promise = dispatch(authUser())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n    }\r\n\r\n","let initialState = {}\r\n\r\n\r\nexport const sidebarReducer = (state:any = initialState,action:any) => {\r\n\r\n    return state\r\n\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {FormType} from \"../components/Profile/ProfileInfo/ContentForm/ContentForm\";\r\nimport {AppThunkType} from \"./redux-store\";\r\n\r\nconst ADD_POST = 'PROFILE/ADD-POST';\r\nconst SET_USER_PROFILE = 'PROFILE/SET_USER_PROFILE';\r\nconst SET_STATUS = 'PROFILE/SET_STATUS';\r\nconst DELETE_POST = 'PROFILE/DELETE_POST';\r\nconst SET_PHOTO = 'PROFILE/SET_PHOTO';\r\n\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    messages: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ContactsType = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileType = {\r\n    userId: number| null\r\n    lookingForAJob: boolean | null\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n    }\r\nexport type ProfilePageType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n    profile: ProfileType | null\r\n    status: string\r\n    isOwner:boolean\r\n    updateMode:boolean\r\n}\r\n\r\nexport type ProfileActionType = AddPostActionType | ProfileUpdateModeType | SetUsersProfileActionType | SetStatusActionType | DeletePostActionType | SetPhotoActionType\r\n\r\ntype AddPostActionType = ReturnType<typeof addPostCreator>\r\ntype SetUsersProfileActionType = ReturnType<typeof setUsersProfile>\r\ntype SetStatusActionType = ReturnType<typeof setStatus>\r\ntype DeletePostActionType = ReturnType<typeof deletePost>\r\ntype SetPhotoActionType = ReturnType<typeof setPhotoSuccess>\r\ntype ProfileUpdateModeType = ReturnType<typeof profileUpdateMode>\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            messages: 'Falcon 9’s first stage has landed on!',\r\n            likesCount: 11,\r\n        },\r\n        {\r\n            id: 2,\r\n            messages: 'Yuri Gagarin was the first person to fly in space.',\r\n            likesCount: 41,\r\n        },\r\n\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status:'Hello!',\r\n    isOwner:false,\r\n    updateMode:false\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                messages: action.newPostText,\r\n                likesCount: 0,\r\n            }\r\n            return {\r\n                ...state,\r\n                newPostText: '',\r\n                posts: [newPost,...state.posts],\r\n\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.text\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n\r\n        case DELETE_POST:\r\n            return {...state,\r\n                posts: state.posts.filter((post) => post.id !== action.id) }\r\n        case SET_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n      case 'PROFILE_UPDATE_MODE':\r\n            return {...state, updateMode:action.mode }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addPostCreator = (newPostText:string) => ({type: ADD_POST, newPostText} as const)\r\nexport const setStatus = (text: string) => ({type: SET_STATUS, text} as const)\r\nexport const setUsersProfile = (profile: ProfileType) => ( {type: SET_USER_PROFILE, profile} as const)\r\nexport const deletePost = (id: number) => ({type: DELETE_POST, id} as const)\r\nexport const setPhotoSuccess = (photos: PhotosType) => ({type: SET_PHOTO, photos} as const )\r\nexport const profileUpdateMode = (mode: boolean) => ({type: \"PROFILE_UPDATE_MODE\", mode} as const)\r\n\r\nexport const getProfile = (id:number | null) =>\r\n    async (dispatch: Dispatch<ProfileActionType>) => {\r\n         try {\r\n             const res = await profileAPI.getProfile(id)\r\n             dispatch(setUsersProfile(res.data))\r\n         }catch (e){\r\n             console.log(e)\r\n         }\r\n}\r\n\r\n\r\nexport const getStatus = (id: number) =>\r\n    async (dispatch: Dispatch<ProfileActionType>) => {\r\n        try {\r\n            const res = await profileAPI.getStatus(id)\r\n            dispatch(setStatus(res.data))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport const setPhoto = (file: string | Blob) =>\r\n    async (dispatch: Dispatch<ProfileActionType>) => {\r\n        try {\r\n            const res = await profileAPI.setPhoto(file)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setPhotoSuccess(res.data.data.photos))\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\nexport const setProfile = (file: FormType):AppThunkType  =>\r\n    async (dispatch, getState) => {\r\n        let userId = getState().auth.userId\r\n        try {\r\n            const res = await profileAPI.setProfile(file)\r\n                    if (res.data.resultCode === 0) {\r\n                        dispatch(getProfile(userId))\r\n                        dispatch(profileUpdateMode(false))\r\n                    }\r\n        } catch (e) {\r\n          return Promise.reject(e.data.messages[0])\r\n        }\r\n    }\r\n\r\n\r\nexport const updateStatus = (text: string) =>\r\n    async (dispatch: Dispatch<ProfileActionType>) => {\r\n        try {\r\n            const res = await profileAPI.updateStatus(text)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setStatus(text))\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n","import {CommonType, userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {InferActionTypes} from \"./redux-store\";\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\n\r\n type InitialStateType = {\r\n    users: UsersType[]\r\n    usersOnPage: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    followingInProgress:number[]\r\n    portionSize:number\r\n    filter:{\r\n        term:string\r\n        friend:null | boolean\r\n    }\r\n}\r\nexport type FilterType = typeof initialState.filter\r\ntype FollowActionType = ReturnType<typeof actions.followSuccess>\r\ntype UnFollowActionType = ReturnType<typeof actions.unFollowSuccess>\r\nexport type UsersActionType = InferActionTypes<typeof actions>\r\n\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    usersOnPage: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching:false,\r\n    followingInProgress:[],\r\n    portionSize:15,\r\n    filter:{\r\n        term:'',\r\n        friend:null\r\n    }\r\n}\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'SET_USERS': {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'FILTER': {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id =>  id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess :(id: number) => ({type: 'FOLLOW', userID: id} as const),\r\n    setFilter :(filter:FilterType) =>  ({type: 'FILTER', payload:filter} as const),\r\n    unFollowSuccess :(id: number) =>  ({type: 'UNFOLLOW', userID: id} as const),\r\n    setUsers :(users: UsersType[]) => ({type: 'SET_USERS', users: users} as const),\r\n    setCurrentPage :(page: number) => ({type: 'SET_CURRENT_PAGE', currentPage: page} as const),\r\n    setTotalUsersCount :(count: number) => ( {type: 'SET_TOTAL_USERS_COUNT', totalCount: count} as const),\r\n    toggleIsFetching :(isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleIsFollowingProgress :(followingInProgress: boolean, userId:number) => ({type: 'TOGGLE_IS_FOLLOWING_PROGRESS', followingInProgress, userId} as const ),\r\n}\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number,filter:FilterType) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n        dispatch(actions.toggleIsFetching(true))\r\n        dispatch(actions.setCurrentPage(currentPage))\r\n        dispatch(actions.setFilter(filter))\r\n\r\n      const res = await  userAPI.getUsers(currentPage, pageSize,filter.term,filter.friend);\r\n                dispatch(actions.toggleIsFetching(false))\r\n                dispatch(actions.setUsers(res.items))\r\n                dispatch(actions.setTotalUsersCount(res.totalCount))\r\n    }\r\n\r\nexport const getPage = (pageNumber: number, currentPage: number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n        dispatch(actions.setCurrentPage(pageNumber))\r\n        dispatch(actions.toggleIsFetching(true))\r\n\r\n        const res = await userAPI.getUsers(pageNumber, currentPage);\r\n                dispatch(actions.toggleIsFetching(false))\r\n                dispatch(actions.setUsers(res.items))\r\n    }\r\n\r\n const followUnFollowFlow = async (userId:number, dispatch: Dispatch<UsersActionType>,apiMethod: (userId: number) => Promise<CommonType>,\r\n                                   actionCreator:(id:number) => FollowActionType | UnFollowActionType) => {\r\n        dispatch(actions.toggleIsFollowingProgress(true, userId))\r\n     const res = await apiMethod(userId)\r\n                if (res.resultCode === 0) {\r\n                    dispatch(actionCreator(userId))\r\n                }\r\n                dispatch(actions.toggleIsFollowingProgress(false, userId))\r\n    }\r\n\r\nexport const follow = (userId:number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n\r\n        const apiMethod = userAPI.followUser.bind(userAPI)\r\n        followUnFollowFlow(userId,dispatch, apiMethod,actions.followSuccess)\r\n    }\r\n\r\nexport const unFollow = (userId:number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n\r\n        const apiMethod = userAPI.unFollowUser.bind(userAPI)\r\n        followUnFollowFlow(userId,dispatch, apiMethod,actions.unFollowSuccess)\r\n    }\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {DialogActionType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionType, profileReducer} from \"./propfile-reducer\";\r\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionType, authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {AppActionType, appReducer} from \"./app-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    sidebar: sidebarReducer,\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    app:appReducer,\r\n    form:formReducer\r\n})\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport type ReduxStateType = ReturnType<typeof rootReducer>\r\n\r\n// аналог ReturnType, но для типизации обьекта;\r\n// если переданное значение(Т) соотвествует ключ-массив аргументов, infer запишет этот тип в U и вернет его\r\n//https://habr.com/ru/company/alfa/blog/452620/\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport type ReduxActionType = AuthActionType | UsersActionType | DialogActionType | ProfileActionType | AppActionType\r\nexport type AppThunkType <ReturnType = void> = ThunkAction<ReturnType, ReduxStateType,unknown, ReduxActionType>\r\n\r\nexport default store","import s from \"./Preloader.module.css\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.ldsDualRing}></div>\r\n}","export default __webpack_public_path__ + \"static/media/img.1c5b1442.webp\";","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport Logo from './img/img.webp';\r\n\r\ntype PostType = {\r\n    message:string\r\n    like:number\r\n}\r\n\r\nfunction Post(props:PostType) {\r\n\r\n    return <div className={classes.content}>\r\n                <div className={classes.img}><img src={Logo} alt=\"\"/></div>\r\n                <div className={classes.message}> {props.message}</div>\r\n                <div className={classes.like}>like {props.like}</div>\r\n        </div>\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsMapDispatchToPropsType, MyPostsMapStateToPropsType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {FormDataType} from \"../../Login/Login\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\";\r\nimport SuperButton from \"../../common/FormsControl/SuperButton\";\r\n\r\n\r\nexport type MyPostsPropsType = MyPostsMapStateToPropsType & MyPostsMapDispatchToPropsType\r\n\r\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\r\n\r\n    let PostsElements =\r\n        props.posts.map(post => <Post key={post.id} message={post.messages} like={post.likesCount}/>)\r\n\r\n    let addPost = (text: any) => {\r\n        props.onClick(text.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.postBlock}>\r\n                <div className={classes.header}>\r\n                    <h4> My publications.</h4>\r\n                </div>\r\n                <AddNewPostFormRedux onSubmit={addPost}/>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {PostsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nlet maxLength = maxLengthCreator(20)\r\nlet minLength = minLengthCreator(4)\r\n\r\nconst AddNewPostForm = (props:InjectedFormProps<FormDataType> ) => {\r\n    return  <div>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'  Enter your message'}\r\n                    style={{margin: '10px 0'}}\r\n                    name={'newPostText'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength, minLength]}\r\n                />\r\n            </div>\r\n            <SuperButton>\r\n                Publish\r\n            </SuperButton>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport const AddNewPostFormRedux = reduxForm<FormDataType >({form: 'profileAddMessageForm'})(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator, PostsType} from \"../../../redux/propfile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type MyPostsMapStateToPropsType = {\r\n    posts:PostsType[]\r\n    newPostText:string\r\n}\r\nexport  type MyPostsMapDispatchToPropsType = {\r\n    onClick:(text:any) => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MyPostsMapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):MyPostsMapDispatchToPropsType => {\r\n    return {\r\n        onClick: (text:any) => {\r\n            dispatch(addPostCreator(text))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer","export default __webpack_public_path__ + \"static/media/logo2.73c0cc36.png\";","import s from \"./ProfileStatus.module.css\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\n type PropsType = {\r\n     status: string\r\n     isOwner:boolean\r\n     updateStatus:(text:string) => void\r\n }\r\nexport const ProfileStatusWithHooks = (props: PropsType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const deactivateEditMode = () => {\r\n        props.updateStatus(status)\r\n        setEditMode(false)\r\n    }\r\n    const activateEditMode = () => {\r\n       if(props.isOwner)  setEditMode(true)\r\n    }\r\n    const onKeyPressInput = (e:React.KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter')  deactivateEditMode()\r\n    }\r\n    const onStatusChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    let checkedStatus = props.status === null ? 'Hello!' : props.status\r\n\r\n    return <div style={{flexWrap: 'wrap'}}>\r\n        {!editMode &&\r\n        <div className={s.statusInputDiv}>\r\n            <span onDoubleClick={activateEditMode}>\r\n                {checkedStatus}\r\n            </span>\r\n        </div>}\r\n        {editMode && props.isOwner &&\r\n        <div className={s.changeStatusDiv}>\r\n            <input\r\n                onChange={onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={deactivateEditMode}\r\n                className={s.statusInput}\r\n                type=\"text\"\r\n                value={status}\r\n                onKeyPress={onKeyPressInput}\r\n            />\r\n        </div>}\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport s from \"./DragAndDrop.module.css\";\r\n\r\ntype DragType = {\r\n    setPhoto?:(file:string | Blob) => void\r\n    setEditPhotoMode?: (value:boolean) => void\r\n    isOwner?:boolean\r\n}\r\nexport const DragAndDrop = (props:DragType) => {\r\n\r\n    const [drag, setDrag] = useState(false)\r\n\r\n    const dragStartHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n        setDrag(true)\r\n    }\r\n    const dragLeaveHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n        setDrag(false)\r\n    }\r\n    const onDropHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n\r\n        if(e.dataTransfer.files[0]){\r\n            let files = e.dataTransfer.files[0]\r\n            props.setPhoto && props.setPhoto(files)\r\n        }\r\n        setDrag(false)\r\n        props.setEditPhotoMode && props.setEditPhotoMode(false)\r\n    }\r\n\r\n    return   <div className={s.dragWrap}>\r\n        {drag\r\n            ? <div\r\n                className={s.drop}\r\n                onDragStart={(e)=>{dragStartHandler(e)}}\r\n                onDragOver={(e)=>{dragStartHandler(e)}}\r\n                onDragLeave={(e)=>{dragLeaveHandler(e)}}\r\n                onDrop={(e)=>{onDropHandler(e)}}\r\n            > Drop file  </div>\r\n            : <div\r\n                className={s.drag}\r\n                onDragStart={(e)=>{dragStartHandler(e)}}\r\n                onDragOver={(e)=>{dragStartHandler(e)}}\r\n                onDragLeave={(e)=>{dragLeaveHandler(e)}}\r\n            >  Drag file </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\n//todo add pop-up when file download","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\nimport {WrappedFieldsProps} from \"redux-form/lib/Fields\";\r\nimport {FieldProps} from \"formik\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType & WrappedFieldsProps & FieldProps> = (\r\n    {input,meta,type,checked,field,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,form,\r\n        children,name,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                className={finalInputClassName}\r\n                checked={checked}\r\n                {...input}\r\n                {...field}\r\n                {...meta}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}> {children}</span>}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport {ContentType} from \"../ProfileInfo\";\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport SuperButton from \"../../../common/FormsControl/SuperButton\";\r\nimport {FormInput} from \"../../../common/FormsControl/FormsControls\";\r\nimport SuperCheckbox from \"../../../common/Checkbox/SuperCheckbox\";\r\n\r\n\r\nexport type FormType = {\r\n    fullName: string | null | undefined\r\n    aboutMe: string | null | undefined\r\n    lookingForAJob:boolean | null | undefined\r\n    lookingForAJobDescription:string | null | undefined\r\n}\r\n\r\nconst contentFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\nexport const ContentForm:React.FC<ContentType> = (props ) => {\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        setSubmitting(false)\r\n        props.profileUpdateMode(false)\r\n        props.setProfile(values)\r\n    }\r\n\r\n    let fullName = props.profile?.fullName && props.profile?.fullName\r\n    let aboutMe = props.profile?.aboutMe && props.profile?.aboutMe\r\n    let lookingForAJob = props.profile?.lookingForAJob && props.profile?.lookingForAJob\r\n    let lookingForAJobDescription = props.profile?.lookingForAJobDescription && props.profile?.lookingForAJobDescription\r\n\r\n    const formClass = s.fragmentWrap + ' ' + s.contentForm\r\n    return <Formik\r\n        initialValues={{fullName: fullName, aboutMe: aboutMe,lookingForAJob:lookingForAJob,lookingForAJobDescription:lookingForAJobDescription}}\r\n        validate={contentFormValidate}\r\n        onSubmit={submit}\r\n    >\r\n        {({isSubmitting}) => (\r\n            <Form style={{paddingRight: '10px'}}>\r\n                <div className={formClass}  style={{marginTop: '13px'}}>\r\n                    <p> Full name: </p>\r\n                    <Field component={FormInput} placeholder={'Full name'} type=\"text\" name=\"fullName\"/>\r\n                </div>\r\n\r\n                <div className={formClass}>\r\n                    <p> Description: </p>\r\n                    <Field component={FormInput} placeholder={'About me'} type=\"text\" name=\"aboutMe\"/>\r\n                </div>\r\n                <div className={s.fragmentWrap}>\r\n                    <p> Looking for a job: </p>\r\n                    <Field component={SuperCheckbox} type=\"checkbox\" name=\"lookingForAJob\"/>\r\n                </div>\r\n                <div className={s.fragmentWrap  + ' ' + s.contentForm} style={{marginTop:'7px'}}>\r\n                        <p> My skills: </p>\r\n                        <Field component={FormInput} placeholder={'My skills'} type=\"text\" name=\"lookingForAJobDescription\"/>\r\n                </div>\r\n                <div className={s.fragmentWrap}>\r\n                         <p> Contacts: {\r\n                            Object\r\n                                .entries(props.profile?.contacts ? props.profile?.contacts : {})\r\n                                .map((key, value) => {\r\n                                    return <div key={value} className={s.fragmentWrap} style={{justifyContent: 'space-between',marginLeft: '20px'}}>\r\n                                        <p> {key[0]}: </p>\r\n                                        <Field style={{marginBottom:'5px'}} component={FormInput} placeholder={key[0]} type=\"text\" name={'contacts.' + key[0]}/>\r\n                                    </div>})}\r\n                        </p>\r\n                </div>\r\n                <SuperButton\r\n                    style={{width: '50%', opacity:'0.7'}}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}>\r\n                    submit changes\r\n                </SuperButton>\r\n\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Logo from './../../Users/img/logo2.png';\r\nimport {ProfileType} from \"../../../redux/propfile-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport {DragAndDrop} from \"../../common/DragAndDrop/DragAndDrop\";\r\nimport {ContentForm, FormType} from \"./ContentForm/ContentForm\";\r\nimport SuperButton from \"../../common/FormsControl/SuperButton\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus:(text:string) => void\r\n    setPhoto:(file:string | Blob) => void\r\n    isOwner:boolean\r\n    profileUpdateMode:(value:boolean) => void\r\n    updateMode:boolean\r\n    setProfile:(file:FormType)  => void\r\n}\r\n\r\nfunction ProfileInfo(props: PropsType) {\r\n\r\n    const [editPhotoMode, setEditPhotoMode] = useState(false)\r\n\r\n    if (!props.profile) return <Preloader/>;\r\n\r\n    let photoSmall = props.profile.photos.small ? props.profile.photos.small  : Logo\r\n    let photoLarge = props.profile.photos.large ? props.profile.photos.large : Logo\r\n\r\n    let img = <img onDoubleClick={()=>{setEditPhotoMode(!editPhotoMode)}} className={s.img} src={photoLarge || photoSmall}/>\r\n\r\n    return (\r\n        <div>\r\n\r\n                <div className={s.descriptionBlock}>\r\n                    <div className={s.content} style={{ margin: '15px 0 0 15px', padding:' 0 20px 0 0'}}>\r\n                        {img}\r\n                        <div>\r\n                            {props.isOwner\r\n                            && editPhotoMode\r\n                            && <div style={{margin: '15px 0 0 30px'}}>\r\n                                <DragAndDrop\r\n                                    setEditPhotoMode={setEditPhotoMode}\r\n                                    isOwner={props.isOwner}\r\n                                    setPhoto={props.setPhoto}/>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.contentWrap}>\r\n                        <div className={s.content} style={{margin:' 0 0 20px 0'}}>\r\n                        <div className={s.name}>{props.profile && props.profile.fullName}\r\n                            <span>Double click on highlighted objects to edit your profile</span>\r\n                        </div>\r\n\r\n                        <div className={s.fragmentWrap} style={{textAlign: 'initial'}}>\r\n                            <p> Status: </p> <ProfileStatusWithHooks isOwner={props.isOwner}\r\n                                                                     updateStatus={props.updateStatus}\r\n                                                                     status={props.status}/>\r\n                        </div>\r\n            </div>\r\n\r\n                            {props.updateMode\r\n                                ? <div className={s.content}>\r\n                                    <ContentForm\r\n                                    setPhoto={props.setPhoto}\r\n                                    isOwner={props.isOwner}\r\n                                    profile={props.profile}\r\n                                    setProfile={props.setProfile}\r\n                                    profileUpdateMode={props.profileUpdateMode}\r\n                                    updateMode={props.updateMode}/>\r\n                            </div>\r\n                                : <div className={s.content}>\r\n                                    <Content\r\n                                    setPhoto={props.setPhoto}\r\n                                    isOwner={props.isOwner}\r\n                                    profile={props.profile}\r\n                                    setProfile={props.setProfile}\r\n                                    profileUpdateMode={props.profileUpdateMode}\r\n                                    updateMode={props.updateMode}/>\r\n                                </div>\r\n                            }\r\n\r\n                    {/*<div className={s.textBlock}>*/}\r\n                    {/*    <div className={s.description}>Do you know that Falcon 9 is a reusable, two-stage rocket*/}\r\n                    {/*        manufactured by SpaceX for the reliable and safe transport of people and*/}\r\n                    {/*        payloads into Earth orbit and beyond? Now you know.*/}\r\n                    {/*    </div>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport type ContentType = {\r\n    profile: ProfileType | null\r\n    setPhoto:(file:string | Blob) => void\r\n    isOwner:boolean\r\n    profileUpdateMode:(value:boolean) => void\r\n    updateMode:boolean\r\n    setProfile:(file:FormType)  => void\r\n}\r\nconst Content = (props:ContentType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const submitHandler = () => {props.profileUpdateMode(true)}\r\n\r\n    return <div>\r\n\r\n        <div  className={s.fragmentWrap}>\r\n            <p> Full name: </p> <p>{props.profile?.fullName}</p>\r\n        </div>\r\n\r\n        <div  className={s.fragmentWrap}>\r\n            <p> Description: </p> <p>{props.profile?.aboutMe}</p>\r\n        </div>\r\n        <div  className={s.fragmentWrap}>\r\n            {props.profile?.lookingForAJob &&\r\n            <>\r\n           <p> Looking for a job: </p>\r\n            <p>yes</p>\r\n           </>}\r\n        </div>\r\n        <div  className={s.fragmentWrap}>\r\n            {props.profile?.lookingForAJob &&\r\n            <>\r\n                <p> My skills: </p>\r\n                <p>{props.profile?.lookingForAJobDescription || 'lookingForAJobDescription'}</p>\r\n            </>}\r\n        </div>\r\n        <div  className={s.fragmentWrap}>\r\n            {!editMode\r\n                ? <div className={s.detailsWrap}  onClick={()=>{setEditMode(true)}}>\r\n                    <div > Show contacts</div>\r\n                    <div className={s.details}/>\r\n                </div>\r\n                : <div style={{flexDirection: 'column'}}>\r\n                    <div className={s.detailsWrap} onClick={() => {setEditMode(false)}}>\r\n                        <div> Hide contacts</div>\r\n                        <div className={s.details}/>\r\n                    </div>\r\n                    <p style={{textAlign:'initial'}}> Contacts: {\r\n                        Object\r\n                            .entries(props.profile?.contacts ? props.profile?.contacts : {})\r\n                            .map((key, value) => {\r\n                                return <div key={value} className={s.fragmentWrap} style={{marginLeft: '20px'}}>\r\n                                    <p> {key[0]}: </p> <p>{key[1]}</p>\r\n                                </div>\r\n                            })}</p>\r\n                </div>}\r\n\r\n        </div>\r\n        {props.isOwner && <SuperButton\r\n            style={{width: '50%', opacity:'0.5'}}\r\n            onClick={submitHandler}> edit profile</SuperButton>}\r\n    </div>\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React, {useEffect} from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport {ProfileType} from \"../../redux/propfile-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {FormType} from \"./ProfileInfo/ContentForm/ContentForm\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus:(text:string) => void\r\n    setPhoto:(file:string | Blob) => void\r\n    isAuth: boolean\r\n    isOwner:boolean\r\n    profileUpdateMode:(value:boolean) => void\r\n    updateMode:boolean\r\n    setProfile:(file:FormType)  => void\r\n}\r\nfunction Profile(props:PropsType) {\r\n\r\n    useEffect(() => {\r\n        document.title =  props.profile?.fullName ? props.profile?.fullName : 'Profile'\r\n    },[props.profile?.fullName])\r\n\r\n        if(!props.isAuth){ return <Redirect to={'/login'}/> }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         setPhoto={props.setPhoto}\r\n                         profileUpdateMode={props.profileUpdateMode}\r\n                         updateMode={props.updateMode}\r\n                         setProfile={props.setProfile}\r\n            />\r\n\r\n            <div className={s.myPostWrap}>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    ProfileType,\r\n    profileUpdateMode,\r\n    setPhoto, setProfile,\r\n    updateStatus\r\n} from \"../../redux/propfile-reducer\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {FormType} from \"./ProfileInfo/ContentForm/ContentForm\";\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    isAuth: boolean\r\n    authorizedUserId: number | null\r\n    isOwner:boolean\r\n    updateMode:boolean\r\n}\r\n\r\ntype ProfileContainerType = mapStateToPropsType & {\r\n    getProfile:(userId:number) => void\r\n    getStatus:(userId:number) => void\r\n    updateStatus:(text:string) => void\r\n    setPhoto:(file:string | Blob) => void\r\n    profileUpdateMode:(value:boolean) => void\r\n    setProfile:(file:FormType)  => void\r\n}\r\n\r\ntype PathParamsType = { userId: string }\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\r\n\r\n class ProfileContainer extends React.Component<PropsType, {}>{\r\n\r\n  setUserId (){\r\n      let userId = +this.props.match.params.userId;\r\n      if(!userId) {\r\n          this.props.isAuth\r\n              ? userId = Number(this.props.authorizedUserId)\r\n              : this.props.history.push('/login')\r\n      }\r\n      this.props.getProfile(userId)\r\n      this.props.getStatus(userId)\r\n }\r\n\r\n     componentDidMount() {\r\n         this.setUserId()\r\n     }\r\n\r\n     componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n         if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n             this.setUserId()\r\n         }\r\n     }\r\n\r\n\r\n     render(){\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        setPhoto={this.props.setPhoto}\r\n                        profileUpdateMode={this.props.profileUpdateMode}\r\n                        updateMode={this.props.updateMode}\r\n                        setProfile={this.props.setProfile}\r\n        />\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isOwner: state.profilePage.isOwner,\r\n        updateMode: state.profilePage.updateMode,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default  compose<React.ComponentType>(connect(mapStateToProps,{setProfile,profileUpdateMode,getStatus,updateStatus,setPhoto,getProfile}),withRouter)(ProfileContainer)\r\n","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport SuperButton from \"../FormsControl/SuperButton\";\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalItemsCount: number\r\n    pageSize:number\r\n    currentPage: number\r\n    portionSize:number\r\n}\r\n\r\nexport const Paginator = React.memo((props:PaginatorPropsType) => {\r\n\r\n    let selectedPage = s.selectedPage + ' ' + s.pagination\r\n    const [portionNumber,setPortionNumber] = useState(1)\r\n\r\n     //всего юзеров / кол-во юзеров на странице = кол-во страниц\r\n    const pagesCount = Math.ceil( props.totalItemsCount / props.pageSize)\r\n    const pages:number[] = []\r\n\r\n    for (let i = 1;i <= pagesCount ;i++){ pages.push(i) }\r\n\r\n    // кол-во страниц / \"порцию страниц\"  = кол-во \"порций\" страниц\r\n    const portionCount = Math.ceil(pagesCount  / props.portionSize)\r\n\r\n    const leftPortionSize = (portionNumber - 1) * props.pageSize + 1\r\n    const rightPortionSize = portionNumber * props.pageSize\r\n\r\n    return (\r\n            <div className={s.wrap}>\r\n                {portionNumber > 1 &&\r\n                <SuperButton\r\n                    className={s.button}\r\n                    onClick={() => {setPortionNumber(portionNumber - 1)}}>\r\n                    PREV </SuperButton>}\r\n\r\n                {pages\r\n                    .filter(p => p >= leftPortionSize && p <= rightPortionSize)\r\n                    .map((p ,index) => {\r\n                    return <span\r\n                            key={index}\r\n                            className={props.currentPage === p ? selectedPage : s.pagination}\r\n                            onClick={()=>{props.onPageChanged(p)}}>\r\n                       {p < 10 ? `${' '}${p}${' '}`: p} </span>  })}\r\n\r\n\r\n                {portionCount > portionNumber &&\r\n                <SuperButton\r\n                    className={s.button}\r\n                    style={{marginLeft:'10px'}}\r\n                    onClick={() => {setPortionNumber(portionNumber + 1)}}>\r\n                    NEXT </SuperButton>}\r\n            </div>\r\n)})","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport logo from \"./img/logo2.png\";\r\nimport {FilterType, UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\n\r\ntype UserPropsType = {\r\n    users: UsersType\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    followingInProgress:number[]\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = ({users,...props}) => {\r\n    let checkedStatus = users.status === null ? 'Hello!' : users.status\r\n\r\n    return (\r\n        <div className={s.userWrap}>\r\n            <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + users.id}>\r\n                            <img src={users.photos.small != null ? users.photos.small : logo} className={s.photo}/>\r\n                        </NavLink>\r\n                </div>\r\n\r\n                </span>\r\n            <span className={s.userInfoWrap}>\r\n                    <span style={{cursor:'default'}}>\r\n                        <div> {users.name}</div>\r\n                        <div  style={{fontStyle:'italic', fontSize:'16px'}}> {checkedStatus}</div>\r\n                    </span>\r\n\r\n                         <div  style={{marginLeft:'-3px'}}>\r\n\r\n                        {  users.followed\r\n                            ? <SuperButton\r\n                                style={{letterSpacing:'1px', fontSize:'14px'}}\r\n                                disabled={props.followingInProgress.some(id => id === users.id)}\r\n                                onClick={() => {props.unFollow(users.id)}}>\r\n                                UNFOLLOW\r\n                            </SuperButton>\r\n                            : <SuperButton  style={{letterSpacing:'1px', fontSize:'14px'}}\r\n                                            disabled={props.followingInProgress.some(id => id === users.id)}\r\n                                            onClick={() => {props.follow(users.id)}}>\r\n                                FOLLOW\r\n                            </SuperButton>\r\n                        }\r\n\r\n                    </div>\r\n                </span>\r\n        </div>\r\n\r\n)}","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport SuperButton from \"../common/FormsControl/SuperButton\";\r\nimport {FormInput, FormSelect, Input} from \"../common/FormsControl/FormsControls\";\r\nimport s from \"./Users.module.css\";\r\n\r\nconst usersSearchValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\ntype FormType = {\r\n    term:string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\nexport const UsersSearch:React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const submit = (values:FormType, { setSubmitting }:{setSubmitting:(isSubmitting: boolean) => void}) => {\r\n        const filter:FilterType = {\r\n            term:values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return  <Formik\r\n        initialValues={{ term: '', friend:'null'}}\r\n        validate={usersSearchValidate}\r\n        onSubmit={submit}\r\n    >\r\n        {({ isSubmitting }) => (\r\n            <Form className={s.form} >\r\n                <Field component={FormSelect}  name=\"friend\" type=\"select\" >\r\n                    <option value=\"null\">All</option>\r\n                    <option value=\"true\">Only followed</option>\r\n                    <option value=\"false\">Only unfollowed</option>\r\n                </Field>\r\n                <Field placeholder={'  Find...'}  component={FormInput}  type=\"text\" name=\"term\" />\r\n                <SuperButton style={{width:'20%'}} type=\"submit\" disabled={isSubmitting}>\r\n                    Find\r\n                </SuperButton>\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n})","import React, {useEffect} from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport {FilterType, UsersType} from \"../../redux/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\nimport {UsersSearch} from \"./UsersSearch\";\r\n\r\n\r\ntype UsersPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    followingInProgress:number[]\r\n    portionSize:number\r\n    onFilterChanged:(filter:FilterType) => void\r\n}\r\n\r\nexport const Users : React.FC<UsersPropsType> = (\r\n    {onFilterChanged,users,currentPage,pageSize: usersOnPage,\r\n        onPageChanged,totalUsersCount,portionSize,...props}) => {\r\n\r\n    useEffect(() => {\r\n        document.title = 'Users'\r\n    },[])\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n            <UsersSearch onFilterChanged={onFilterChanged}/>\r\n            { users.map(u =>\r\n                <User\r\n                users={u}\r\n                key={u.id}\r\n                follow={props.follow}\r\n                unFollow={props.unFollow}\r\n                followingInProgress={props.followingInProgress}\r\n                />)\r\n            }\r\n\r\n                <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={usersOnPage}\r\n                portionSize={portionSize}\r\n            />\r\n        </div>\r\n\r\n)}\r\n\r\n\r\n","import {ReduxStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getUsersPageSelector = (state: ReduxStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsersPage = createSelector([getUsersPageSelector],(users) => {\r\n    return users\r\n})\r\n\r\nexport const getPageSize = (state: ReduxStateType) => {\r\n    return state.usersPage.usersOnPage\r\n}\r\n\r\nexport const getTotalUsersCount = (state: ReduxStateType) => {\r\n     return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: ReduxStateType) => {\r\n    return  state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: ReduxStateType) => {\r\n    return  state.usersPage.isFetching\r\n}\r\nexport const portionSize = (state: ReduxStateType) => {\r\n    return  state.usersPage.portionSize\r\n}\r\nexport const getFollowingInProgress = (state: ReduxStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getUsersFilter = (state: ReduxStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {Users} from \"./Users\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersFilter,\r\n    getUsersPage,\r\n    portionSize\r\n} from \"../../redux/users-selectors\";\r\nimport {actions, FilterType, follow, getPage, getUsers, unFollow, UsersType} from \"../../redux/users-reducer\";\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    followingInProgress:number[]\r\n    portionSize:number\r\n    filter:FilterType\r\n}\r\nexport type dispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unFollow: (userId: number) => void\r\n    getUsers:(pageSize: number, currentPage: number, filter:FilterType)  => void\r\n    getPage:(pageNumber: number, currentPage: number)  => void\r\n}\r\n\r\ntype UsersPropsType = mapStateToPropsType & dispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component <UsersPropsType,{}>{\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize,filter} =  this.props\r\n        this.props.getUsers(currentPage,pageSize,filter)\r\n    }\r\n    onPageChanged = (pageNumber:number) => {\r\n        const {pageSize,filter} =  this.props\r\n        this.props.getUsers(pageNumber,pageSize,filter)\r\n    }\r\n    onFilterChanged = (filter:FilterType) => {\r\n        const {pageSize} =  this.props\r\n        this.props.getUsers(1,pageSize,filter)\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : ''}\r\n            <Users\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unFollow={this.props.unFollow}\r\n            followingInProgress={this.props.followingInProgress}\r\n            portionSize={this.props.portionSize}\r\n            onFilterChanged={this.onFilterChanged}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType):mapStateToPropsType => {\r\n    return {\r\n        users: getUsersPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        portionSize: portionSize(state),\r\n        followingInProgress:getFollowingInProgress(state),\r\n        filter:getUsersFilter(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n    {follow, unFollow, setUsers:actions.setUsers,\r\n        setCurrentPage:actions.setCurrentPage, setTotalUsersCount:actions.setTotalUsersCount, toggleIsFetching:actions.toggleIsFetching,\r\n        toggleIsFollowingProgress:actions.toggleIsFollowingProgress,getUsers, getPage}), WithAuthRedirect)(UsersContainer)\r\n","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n\r\n        <div className={s.errorWrap}>\r\n            <div className={s.errorBox}>\r\n                <div className={s.err}>4</div>\r\n                <div className={s.err}>0</div>\r\n                <div className={s.err}>4</div>\r\n            </div>\r\n            <div className={s.msg}>Maybe this page moved? Got deleted? Is hiding out in a secret place? Never existed in\r\n                the first place?<p>Let's go <a href=\"#\">home</a> and try from there.</p></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {lazy, Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initialize} from \"./redux/app-reducer\";\r\nimport store, {ReduxStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport Error404 from './components/common/404/Error404';\r\n\r\n\r\nconst News = lazy(() => import('./components/News/News'));\r\nconst Music = lazy(() => import('./components/Music/Music'));\r\nconst Settings = lazy(() => import('./components/Settings/Settings'));\r\n\r\ntype HeaderContainerType  =  MapStateToPropsType & {\r\n    initialize:() => void\r\n}\r\ntype  MapStateToPropsType = {\r\n    initialized:boolean\r\n}\r\n\r\nclass App extends React.Component<HeaderContainerType, {}> {\r\n    catchAllUnHandledErrors = () => {\r\n        console.log('Some errors')\r\n}\r\n\r\n    componentDidMount() {\r\n        this.props.initialize()\r\n        window.addEventListener('unhandledrejection', this.catchAllUnHandledErrors)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnHandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return  <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                    <HeaderContainer/>\r\n                <div className='app-content-wrapper'>\r\n                    <div className='nav-wrapper'>\r\n                        <Navbar/>\r\n                    </div>\r\n                    <div className='content-wrapper'>\r\n                        <Suspense fallback={<Preloader/>}>\r\n                            <Switch>\r\n                                <Route path='/' exact render={() => <Redirect to={'profile'}/>}/>\r\n                                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                                <Route path='/dialogs' render={() => <DialogsContainer/>}/>\r\n                                <Route path='/users' render={() => <UsersContainer/>}/>\r\n                                <Route path='/login' render={() => <Login/>}/>\r\n                                <Route path='/news' render={() => <News/>}/>\r\n                                <Route path='/music' render={() => <Music/>}/>\r\n                                <Route path='/settings' render={() => <Settings/>}/>\r\n                                <Route render={() => <Error404/>}/>\r\n                            </Switch>\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MapStateToPropsType => ({\r\n    initialized: state.app.initialized,\r\n})\r\nconst AppConnect = connect(mapStateToProps,{initialize}) (App);\r\n\r\n const AppContainer = () => {\r\n return  <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppConnect/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>\r\n}\r\nexport default AppContainer","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./App\";\r\n\r\n\r\nReactDOM.render(<AppContainer/>, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1PKM2\",\"dialogsItems\":\"Dialogs_dialogsItems__1ohTD\",\"messages\":\"Dialogs_messages__3Age9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Users_wrap__3sWeN\",\"userWrap\":\"Users_userWrap__3H8b4\",\"userInfoWrap\":\"Users_userInfoWrap__1vcPb\",\"photo\":\"Users_photo__38xCo\",\"pagination\":\"Users_pagination__OHGGc\",\"selectedPage\":\"Users_selectedPage__2C9Fy\",\"user\":\"Users_user__2JHGo\",\"form\":\"Users_form__3NEo2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__nwlMs\",\"selectedPage\":\"Paginator_selectedPage__1npOX\",\"wrap\":\"Paginator_wrap__2rKXl\",\"button\":\"Paginator_button__1o8_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrap\":\"Error404_errorWrap__2CV-p\",\"errorBox\":\"Error404_errorBox__28w8r\",\"err\":\"Error404_err__1BdCP\",\"msg\":\"Error404_msg__3FVJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Ozwe\",\"wrap\":\"Header_wrap__2BQLM\",\"logo\":\"Header_logo__1sU97\",\"brand\":\"Header_brand__3FSq4\",\"loginBlock\":\"Header_loginBlock__1m390\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3kQ5e\",\"red\":\"SuperButton_red__1nNl2\",\"button\":\"SuperButton_button__8zyzT\",\"blink\":\"SuperButton_blink__3b_VN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrap\":\"Login_loginWrap__1wP8M\",\"login\":\"Login_login__H5P_O\",\"auth\":\"Login_auth__1nYT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__bddHt\",\"posts\":\"MyPosts_posts__1YkW2\",\"header\":\"MyPosts_header__uORGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3MiuU\",\"img\":\"Post_img__1AXZT\",\"message\":\"Post_message__3A_LI\",\"like\":\"Post_like___r4DU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusInput\":\"ProfileStatus_statusInput__1OUlU\",\"statusInputDiv\":\"ProfileStatus_statusInputDiv__2PCju\",\"changeStatusDiv\":\"ProfileStatus_changeStatusDiv__xTSw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dragWrap\":\"DragAndDrop_dragWrap__3H0oa\",\"drop\":\"DragAndDrop_drop__2LVRc\",\"drag\":\"DragAndDrop_drag__14r-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__27a1V\",\"checkbox\":\"SuperCheckbox_checkbox__33S5Z\"};"],"sourceRoot":""}