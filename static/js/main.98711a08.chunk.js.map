{"version":3,"sources":["Components/Users/Users.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Header/Header.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Profile.module.css","Components/Navbar/Navbar.module.css","Redux/sidebar-reducer.tsx","Redux/dialogs-reducer.tsx","Redux/propfile-reducer.tsx","Redux/users-reducer.ts","Redux/redux-store.tsx","Components/Header/Header.tsx","Components/Navbar/Navbar.tsx","Components/Profile/MyPosts/Post/img.webp","Components/Profile/MyPosts/Post/Post.tsx","Components/Profile/MyPosts/MyPosts.tsx","Components/Profile/MyPosts/MyPostsContainer.tsx","Components/Profile/ProfileInfo/ProfileInfo.tsx","Components/Profile/Profile.tsx","Components/News/News.tsx","Components/Music/Music.tsx","Components/Settings/Settings.tsx","Components/Dialogs/DialogItem/DialogItem.tsx","Components/Dialogs/Message/Message.tsx","Components/Dialogs/Dialogs.tsx","Components/Dialogs/DialogsContainer.tsx","Components/Users/img/logo.png","Components/Users/Users.tsx","Components/Users/UsersContainer.tsx","App.tsx","index.tsx","Components/Dialogs/Dialogs.module.css"],"names":["module","exports","initialState","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogs","id","name","messages","newMessageBody","UPDATE_NEW_POST","ADD_POST","posts","likesCount","newPostText","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","users","pageSize","totalUsersCount","currentPage","rootReducer","combineReducers","sidebar","state","dialogsPage","action","type","body","Date","getTime","profilePage","newPost","newText","usersPage","map","u","userID","followed","totalCount","store","createStore","Header","className","classes","header","logo","Navbar","nav","item","to","activeClassName","active","Post","props","content","img","src","Logo","alt","message","like","MyPosts","PostsElements","post","newPostElement","React","createRef","postBlock","onChange","event","text","currentTarget","value","ref","onClick","MyPostsContainer","connect","dispatch","updateNewPostCreator","ProfileInfo","descriptionBlock","description","Profile","s","News","Music","Settings","DialogItem","path","dialog","Message","Dialogs","dialogsElements","messagesElements","dialogsItems","updateNewMessageBody","sendMessage","DialogsContainer","updateNewMessageCreator","Users","onPageChanged","pageNumber","setCurrentPage","axios","get","then","response","setUsers","data","items","this","setTotalUsersCount","selectedPage","pagination","pagesCount","Math","ceil","pages","i","push","wrap","photos","small","photo","unfollow","follow","status","p","Component","UsersContainer","userId","setUsersAC","page","setCurrentPageAC","App","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98711a08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Users_wrap__1FBbp\",\"photo\":\"Users_photo__1nnq1\",\"pagination\":\"Users_pagination__o7o7S\",\"selectedPage\":\"Users_selectedPage__TkLP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3DGyO\",\"img\":\"Post_img__kHxfE\",\"message\":\"Post_message__3QPS7\",\"like\":\"Post_like__1Xkw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1DqSy\",\"item\":\"MyPosts_item__WB3A_\",\"posts\":\"MyPosts_posts__aBbYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1SEQZ\",\"logo\":\"Header_logo__VwJNW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1J6dA\",\"description\":\"ProfileInfo_description__1e9aD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2BDJ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3IHOI\",\"item\":\"Navbar_item__3-xYg\",\"active\":\"Navbar_active__ItIae\"};","let initialState = {}\r\n\r\n\r\nexport const sidebarReducer = (state:any = initialState,action:any) => {\r\n\r\n    return state\r\n\r\n}\r\n","\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY'\r\nconst SEND_MESSAGE = 'SEND_MESSAGE'\r\n\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DispatchType = UpdateNewMessageBodyActionType | SendMessageActionType\r\n\r\ntype UpdateNewMessageBodyActionType = ReturnType<typeof updateNewMessageCreator>\r\ntype SendMessageActionType = ReturnType<typeof sendMessageCreator>\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Anya'},\r\n        {id: 4, name: 'Sveta'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'},\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'How are you?'},\r\n        {id: 3, messages: 'Good'},\r\n    ] as MessagesType[],\r\n    newMessageBody:''\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: DispatchType):InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n\r\n            return {...state,\r\n                newMessageBody: action.body}\r\n\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody\r\n            return {...state,\r\n                newMessageBody: '',\r\n                messages:[...state.messages,{id: new Date().getTime(), messages: body}]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = () => {\r\n   return {\r\n        type: SEND_MESSAGE\r\n    } as const\r\n}\r\nexport const updateNewMessageCreator = (text: string) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY, body: text\r\n    } as const\r\n}","const UPDATE_NEW_POST = 'UPDATE-NEW-POST-TEXT';\r\nconst ADD_POST = 'ADD-POST';\r\n\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    messages: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n}\r\nexport type DispatchType = AddPostActionType | UpdatePostActionType\r\ntype AddPostActionType = ReturnType<typeof addPostCreator>\r\ntype UpdatePostActionType = ReturnType<typeof updateNewPostCreator>\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            messages: 'Hi,how are you?',\r\n            likesCount: 11,\r\n        },\r\n        {\r\n            id: 2,\r\n            messages: 'its my first posts',\r\n            likesCount: 41,\r\n        },\r\n\r\n    ],\r\n    newPostText:''\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: DispatchType):ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                messages: state.newPostText,\r\n                likesCount: 0,\r\n            }\r\n\r\n            return {...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n\r\n        case UPDATE_NEW_POST:\r\n            return {...state,\r\n                newPostText: action.newText\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addPostCreator = () => {\r\n   return {\r\n        type: ADD_POST\r\n    } as const\r\n}\r\nexport const updateNewPostCreator = (text: string)=> {\r\n    return {\r\n        type: UPDATE_NEW_POST, newText: text\r\n    }as const\r\n}","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\n\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\n\r\n\r\nexport type DispatchType = FollowActionType | UnFollowActionType | SetUsersActionType | setCurrentPageActionType | setUsersTotalCountActionType\r\n\r\ntype FollowActionType = ReturnType<typeof followAC>\r\ntype UnFollowActionType = ReturnType<typeof unfollowAC>\r\ntype SetUsersActionType = ReturnType<typeof setUsersAC>\r\ntype setCurrentPageActionType = ReturnType<typeof setCurrentPageAC>\r\ntype setUsersTotalCountActionType = ReturnType<typeof setUsersTotalCountAC>\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 2\r\n}\r\n\r\nexport type InitialStateType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n}\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: DispatchType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const followAC = (id: number) => {\r\n    return {\r\n        type: FOLLOW, userID: id\r\n    } as const\r\n}\r\n\r\nexport const unfollowAC = (id: number) => {\r\n    return {\r\n        type: UNFOLLOW, userID: id\r\n    } as const\r\n}\r\nexport const setUsersAC = (users: UsersType[]) => {\r\n    return {\r\n        type: SET_USERS, users: users\r\n    } as const\r\n}\r\nexport const setCurrentPageAC = (page: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE, currentPage: page\r\n    } as const\r\n}\r\nexport const setUsersTotalCountAC = (count: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT, totalCount: count\r\n    } as const\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {profileReducer} from \"./propfile-reducer\";\r\nimport {usersReducer} from \"./users-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    sidebar: sidebarReducer,\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer\r\n})\r\n\r\nexport type ReduxStateType = ReturnType<typeof rootReducer>\r\n\r\nlet store = createStore(rootReducer)\r\n\r\n\r\n\r\nexport default store","import React from \"react\";\r\nimport classes from './Header.module.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.logo}></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from './Navbar.module.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile'  activeClassName={classes.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/dialogs' activeClassName={classes.active}> Messages</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/users' activeClassName={classes.active}> Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.active}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/img.1c5b1442.webp\";","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport Logo from './img.webp';\r\n\r\ntype PostType = {\r\n    message:string\r\n    like:number\r\n}\r\n\r\nfunction Post(props:PostType) {\r\n\r\n    return (\r\n\r\n        <div className={classes.content}>\r\n\r\n                <div className={classes.img}><img src={Logo} alt=\"\"/></div>\r\n                <div className={classes.message}> {props.message}</div>\r\n                <div className={classes.like}>like {props.like}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsMapDispatchToPropsType, MyPostsMapStateToPropsType} from \"./MyPostsContainer\";\r\n\r\n\r\nexport type MyPostsPropsType = MyPostsMapStateToPropsType & MyPostsMapDispatchToPropsType\r\n\r\n\r\nfunction MyPosts(props: MyPostsPropsType) {\r\n\r\n     let PostsElements =\r\n        props.posts.map (post => <Post message={post.messages} like={post.likesCount} />)\r\n\r\n     let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    const onPostChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = event.currentTarget.value\r\n        props.onChange(text);\r\n    }\r\n    let addPost = () => {\r\n        props.onClick()\r\n    }\r\n    return (\r\n        <div className={classes.content}>\r\n\r\n            <div className={classes.postBlock}>\r\n                <div>\r\n                    <h4>My publications</h4>\r\n                </div>\r\n                <div>\r\n                    <textarea\r\n                        onChange={onPostChange}\r\n                        value={props.newPostText}\r\n                        ref={newPostElement}> </textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}> Publish</button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {PostsElements}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator, PostsType, updateNewPostCreator} from \"../../../Redux/propfile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type MyPostsMapStateToPropsType = {\r\n    posts:PostsType[]\r\n    newPostText:string\r\n}\r\nexport  type MyPostsMapDispatchToPropsType = {\r\n    onChange:(text:string) => void\r\n    onClick:() => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MyPostsMapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):MyPostsMapDispatchToPropsType => {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(addPostCreator())\r\n        },\r\n        onChange: (text: string) => {\r\n            let action = updateNewPostCreator(text);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Logo from './../MyPosts/Post/img.webp';\r\n\r\nfunction ProfileInfo() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\" alt=\"\"/>\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                <div><img src={Logo} alt=\"\"/></div>\r\n                <div className={classes.description}>  Hello! Nice to meet you on my page. There is will be description about my page. You should wait for this.</div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\n\r\n\r\nfunction Profile() {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport classes from './News.module.css'\r\n\r\nfunction News  () {\r\n    return (\r\n        <div >\r\n           news\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News"," import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\nfunction Music  () {\r\n    return (\r\n        <div >\r\n      music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react';\r\nimport classes from './Settings.module.css'\r\n\r\nfunction Settings  () {\r\n    return (\r\n        <div >\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './../Dialogs.module.css'\r\n\r\nexport type DialogItemType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\n\r\nfunction DialogItem(props: DialogItemType) {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}> {props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\ntype MessageType = {\r\n    message:string\r\n}\r\n\r\nfunction Message(props: MessageType) {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from './Message/Message';\r\nimport {DialogsMapDispatchToPropsType, DialogsMapStateToPropsType} from \"./DialogsContainer\";\r\n\r\n\r\ntype DialogType = DialogsMapStateToPropsType & DialogsMapDispatchToPropsType\r\n\r\nfunction Dialogs(props: DialogType) {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = props.dialogsPage.messages.map(message => <Message key={message.id} message={message.messages}/>)\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>()\r\n\r\n    let newMessageBody = props.dialogsPage.newMessageBody\r\n\r\n    let updateNewMessageBody = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = event.currentTarget.value\r\n        props.updateNewMessageBody(text)\r\n    }\r\n    let sendMessage = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <div>\r\n                    <div>\r\n                    <textarea\r\n                        onChange={updateNewMessageBody}\r\n                        value={newMessageBody}\r\n                        ref={newPostElement}> </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={sendMessage}> Send message</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {InitialStateType, sendMessageCreator, updateNewMessageCreator} from '../../Redux/dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type DialogsMapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\nexport type DialogsMapDispatchToPropsType = {\r\n    updateNewMessageBody:(text:string) => void\r\n    sendMessage:() => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):DialogsMapDispatchToPropsType => {\r\n    return {\r\n     updateNewMessageBody: (text:string) => {\r\n         let action = updateNewMessageCreator(text);\r\n         dispatch(action)\r\n     },\r\n        sendMessage: () => {\r\n           dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.ef2c408a.png\";","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport logo from \"./img/logo.png\";\r\nimport axios from \"axios\";\r\nimport {dispatchToPropsType, mapStateToPropsType} from \"./UsersContainer\";\r\n\r\n\r\ntype UsersPropsType = mapStateToPropsType & dispatchToPropsType\r\n\r\nclass Users extends React.Component <UsersPropsType,{}>{\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        })\r\n    }\r\n   onPageChanged = (pageNumber:number) => {\r\n       this.props.setCurrentPage(pageNumber)\r\n       axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n           .then(response =>{\r\n               this.props.setUsers(response.data.items)\r\n           })\r\n   }\r\n    render(){\r\n        let selectedPage = s.selectedPage + ' ' + s.pagination\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n        let pages:number[] = []\r\n        //pages.slice(0.15).map(p => p)\r\n\r\n         for (let i = 1;i <= pagesCount ;i++){\r\n\r\n            pages.push(i)\r\n        }\r\n        // let i = 1\r\n        // while(i < pagesCount ){\r\n        //     pages.push(i)\r\n        //     i++\r\n        // }\r\n        return (\r\n            <div>\r\n\r\n                {this.props.users.map(u => <div className={s.wrap} key={u.id}>\r\n                <span>\r\n                    <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : logo} className={s.photo}/>\r\n                </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button onClick={() => {this.props.unfollow(u.id)}}>Unfollow</button>\r\n                            : <button onClick={() => {this.props.follow(u.id)}}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div> {u.name}</div>\r\n                        <div> {u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                         <div>{'u.location.country'}</div>\r\n                         <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)}\r\n\r\n                <div>\r\n                    {pages.map(p => {\r\n                        return  p <15 && <span className={this.props.currentPage === p ? selectedPage : s.pagination}\r\n                                     onClick={()=>{this.onPageChanged(p)}}>\r\n                       {p} </span>  })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users","import React from 'react';\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    followAC,\r\n    setCurrentPageAC,\r\n    setUsersAC,\r\n    setUsersTotalCountAC,\r\n    unfollowAC,\r\n    UsersType\r\n} from \"../../Redux/users-reducer\";\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n}\r\nexport type dispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: UsersType[]) => void\r\n    setCurrentPage: (page: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: ReduxStateType):mapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch):dispatchToPropsType => {\r\n return {\r\n     follow: (userId:number) => {\r\n         dispatch(followAC(userId))\r\n     },\r\n     unfollow: (userId:number) => {\r\n         dispatch(unfollowAC(userId))\r\n     },\r\n     setUsers: (users: UsersType[]) => {\r\n         dispatch(setUsersAC(users))\r\n     },\r\n     setCurrentPage: (page: number) => {\r\n         dispatch(setCurrentPageAC(page))\r\n     },\r\n     setTotalUsersCount: (totalCount: number) => {\r\n         dispatch(setUsersTotalCountAC(totalCount))\r\n     },\r\n\r\n }\r\n}\r\n\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users)\r\nexport default UsersContainer","import React from 'react';\nimport './App.css';\nimport Header from \"./Components/Header/Header\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport Profile from \"./Components/Profile/Profile\";\nimport {Route} from \"react-router-dom\";\nimport News from './Components/News/News';\nimport Music from './Components/Music/Music';\nimport Settings from \"./Components/Settings/Settings\";\nimport DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\n\n\n\nfunction App() {\n\n\n    return (\n\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/profile' render={() => <Profile/>}/>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                </div>\n            </div>\n\n    );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport './index.css';\nimport store from './Redux/redux-store';\nimport ReactDOM from \"react-dom\";\nimport {HashRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n        <React.StrictMode>\n            <HashRouter>\n                <Provider store={store}>\n                <App/>\n                </Provider>\n            </HashRouter>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Wwmq0\",\"dialogsItems\":\"Dialogs_dialogsItems__k-GXX\",\"active\":\"Dialogs_active__1JhBv\",\"dialog\":\"Dialogs_dialog__11cD9\",\"messages\":\"Dialogs_messages__3zY0R\"};"],"sourceRoot":""}