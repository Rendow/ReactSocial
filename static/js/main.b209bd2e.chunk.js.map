{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/common/addMessageForm/AddMessageFormik.module.css","api/api.ts","hoc/WithAuthRedirect.tsx","components/common/FormsControl/FormsControls.module.css","components/common/Preloader/Preloader.module.css","components/common/Button/SuperButton.tsx","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/Header/logo/rocket33.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/common/FormsControl/FormsControls.tsx","utils/validators/validators.tsx","components/Login/Login.tsx","redux/sidebar-reducer.ts","redux/dialogs-reducer.ts","redux/propfile-reducer.ts","redux/users-reducer.ts","redux/redux-store.ts","components/common/Preloader/Preloader.tsx","components/Users/img/logo2.png","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.tsx","components/common/DragAndDrop/DragAndDrop.tsx","components/common/Checkbox/SuperCheckbox.tsx","components/Profile/ProfileInfo/ContentForm/ContentForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/img/img.webp","components/Profile/MyPosts/Post/Post.tsx","components/common/addMessageForm/AddMessageFormik.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/common/Paginator/Paginator.tsx","redux/users-selectors.ts","components/Users/User.tsx","components/Users/UsersSearch.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/common/404/Error404.tsx","App.tsx","index.tsx","components/Header/Header.module.css","redux/auth-reducer.ts","components/common/Paginator/Paginator.module.css","components/common/404/Error404.module.css","components/common/Button/SuperButton.module.css","components/Login/Login.module.css","components/Profile/MyPosts/Post/Post.module.css","redux/app-reducer.ts","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/common/DragAndDrop/DragAndDrop.module.css","components/common/Checkbox/SuperCheckbox.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","ResultCode","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","term","friend","isFriend","get","then","response","data","followUser","id","post","unFollowUser","delete","authUser","authAPI","me","login","email","password","rememberMe","captchaURL","logout","profileAPI","getProfile","userId","getStatus","setPhoto","file","formData","FormData","append","put","setProfile","profile","updateStatus","status","securityAPI","getCaptchaURL","mapStateToPropsForRedirect","state","auth","isAuth","WithAuthRedirect","Component","connect","props","restProps","to","SuperButton","red","className","finalClassName","s","default","button","Navbar","navClass","useSelector","app","theme","nav","opacity","item","activeClassName","active","Header","imgRef","useRef","divRef","useEffect","fly","landing","a","current","style","marginLeft","classList","add","logoMove","ignition","start","display","Promise","res","animate","transform","setTimeout","left","getBoundingClientRect","top","boxShadow","remove","wrapClass","header","wrap","logo","ref","src","alt","brand","loginBlock","fontSize","width","margin","padding","background","color","onClick","HeaderContainer","this","React","Input","input","meta","classStyle","touched","error","errorTextarea","textarea","errorSpan","FormInput","field","form","errors","name","formClass","FormSelect","children","required","value","maxLength","length","maxLengthCreator","minLength","minLengthCreator","LoginReduxForm","reduxForm","handleSubmit","document","title","loginWrap","onSubmit","href","target","Field","placeholder","height","validate","component","type","marginTop","marginRight","Login","dispatch","useDispatch","initialState","SEND_MESSAGE","dialogs","messages","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SET_PHOTO","posts","likesCount","newPostText","isOwner","updateMode","addPostCreator","setStatus","text","profileUpdateMode","mode","console","log","users","usersOnPage","totalUsersCount","isFetching","followingInProgress","portionSize","filter","actions","userID","payload","page","count","totalCount","items","followUnFollowFlow","apiMethod","actionCreator","resultCode","rootReducer","combineReducers","sidebar","dialogsPage","action","body","newMessageBody","Date","getTime","profilePage","newPost","Math","ceil","random","photos","usersPage","map","u","followed","authReducer","appReducer","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Preloader","ldsDualRing","ProfileStatusWithHooks","useState","editMode","setEditMode","deactivateEditMode","checkedStatus","flexWrap","statusInputDiv","onDoubleClick","changeStatusDiv","onChange","e","currentTarget","autoFocus","onBlur","statusInput","onKeyPress","key","DragAndDrop","drag","setDrag","dragStartHandler","preventDefault","dragLeaveHandler","dragWrap","drop","onDragStart","onDragOver","onDragLeave","onDrop","dataTransfer","files","setEditPhotoMode","onDropHandler","SuperCheckbox","checked","onChangeChecked","spanClassName","finalInputClassName","checkbox","label","contentFormValidate","values","ContentForm","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","fragmentWrap","contentForm","initialValues","setSubmitting","isSubmitting","paddingRight","Object","entries","contacts","justifyContent","marginBottom","disabled","Content","detailsWrap","paddingLeft","highlight","textAlign","ProfileInfo","editPhotoMode","photoSmall","small","Logo","photoLarge","large","img","descriptionBlock","content","contentWrap","Post","classes","like","message","AddMessageFormik","formik","useFormik","addPost","setFieldValue","textareaClass","FormControl","flex","FormGroup","getFieldProps","buttonWidth","MyPosts","memo","PostsElements","postBlock","Profile","myPostWrap","ProfileContainer","match","params","Number","authorizedUserId","history","push","setUserId","prevProps","prevState","snapshot","getState","reject","withRouter","Paginator","selectedPage","pagination","portionNumber","setPortionNumber","pagesCount","totalItemsCount","pages","i","portionCount","leftPortionSize","rightPortionSize","p","index","onPageChanged","getFollowingInProgress","createSelector","getUsersFilter","User","strOne","strTwo","array","split","result","floor","splice","join","userWrap","photo","userInfoWrap","cursor","wordWrap","letterSpacing","some","bind","usersSearchValidate","UsersSearch","enableReinitialize","String","onFilterChanged","Users","useHistory","str","location","search","substr","parsed","queryString","actualPage","actualFilter","friends","query","pathname","pageNumber","Error404","errorWrap","errorBox","err","msg","ChatPage","lazy","Settings","App","catchAllUnHandledErrors","initialize","addEventListener","removeEventListener","initialized","fallback","path","exact","render","AppConnect","AppContainer","StrictMode","ReactDOM","getElementById","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","setAuthUserData","getCaptchaURLSuccess","Success","Captcha","url","stopSubmit","_error","INITIALIZED_SUCCESS","CHANGE_THEME","changeTheme","promise","all"],"mappings":"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","file":"static/js/main.b209bd2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2knFI\",\"detailsWrap\":\"ProfileInfo_detailsWrap__2HAQd\",\"details\":\"ProfileInfo_details__2yjPH\",\"highlight\":\"ProfileInfo_highlight__3_Tr8\",\"img\":\"ProfileInfo_img__168ug\",\"textBlock\":\"ProfileInfo_textBlock__3HsWL\",\"description\":\"ProfileInfo_description__2Bnqe\",\"contentWrap\":\"ProfileInfo_contentWrap__1ttk9\",\"fragmentWrap\":\"ProfileInfo_fragmentWrap__1flSx\",\"contentForm\":\"ProfileInfo_contentForm__1pRBU\",\"name\":\"ProfileInfo_name__2Nfxf\",\"content\":\"ProfileInfo_content__1ZaTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1jbYM\",\"myPostWrap\":\"Profile_myPostWrap__2Mtbr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"AddMessageFormik_textarea__3UyET\"};","import axios from \"axios\";\r\nimport {UsersType} from \"../redux/users-reducer\";\r\nimport {ProfileType} from \"../redux/propfile-reducer\";\r\nimport {FormType} from \"../components/Profile/ProfileInfo/ContentForm/ContentForm\";\r\n\r\n\r\nexport enum ResultCode  {\r\n    Success = 0,\r\n    Error = 1,\r\n    Captcha = 10,\r\n}\r\n\r\nexport type CommonType<T = {}> = {\r\n    data: T\r\n    fieldsErrors: string[]\r\n    messages: string[]\r\n    resultCode: ResultCode\r\n}\r\n\r\ntype UsersCommonType = {\r\n    items: UsersType[]\r\n    totalCount: number\r\n    error: null | string\r\n}\r\ntype MeResponseType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL:  'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:{\r\n        'API-KEY':'7e928b19-02e3-4839-a906-80cc9541b152'\r\n    }})\r\n\r\nexport const userAPI = {\r\n\r\n    getUsers (currentPage = 1, pageSize = 5, term:string = '', friend:null | boolean = null) {\r\n        const isFriend = friend === null ? '' : `&friend=${friend}`\r\n\r\n        return instance.get<UsersCommonType>( `users?page=${currentPage}&count=${pageSize}&term=${term}`+ isFriend)\r\n            .then(response => response.data)},\r\n\r\n    followUser(id:number)  {\r\n        return instance.post<CommonType>(`follow/${id}`)\r\n            .then(response =>  response.data)},\r\n\r\n    unFollowUser(id:number) {\r\n        return instance.delete<CommonType>(`follow/${id}`)\r\n            .then(response => response.data)},\r\n\r\n    //without instance\r\n    authUser() {\r\n        return axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {\r\n            withCredentials:true})\r\n            .then(response => {\r\n              return response.data})\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get<CommonType<MeResponseType>>(`auth/me`, {})\r\n            .then(response =>  response.data)},\r\n\r\n    login(email:string, password:string,rememberMe:boolean = false,captchaURL:string | null = null) {\r\n        return instance.post<CommonType<{userId: number}>>(`auth/login`, {email,password,rememberMe,captchaURL})\r\n    },\r\n    logout() {\r\n        return instance.delete<CommonType>(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n\r\n    getProfile(userId:number | null) {\r\n        return instance.get(`profile/`+ userId)\r\n            .then(response => {\r\n                return response\r\n            })},\r\n    getStatus(userId:number) {\r\n        return instance.get(`profile/status/`+ userId)\r\n          },\r\n    setPhoto(file:string | Blob) {\r\n        const formData = new FormData()\r\n        formData.append('image',file)\r\n\r\n        return instance.put(`/profile/photo/`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }})\r\n          },\r\n    setProfile(profile:FormType) {\r\n        return instance.put(`profile`,profile)\r\n    },\r\n\r\n    updateStatus(status:string) {\r\n        return instance.put<CommonType>(`profile/status/`, {status})\r\n           },\r\n\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL() {\r\n        return instance.get<CommonType<{url: string}>>(` /security/get-captcha-url/`)\r\n    },\r\n}","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {ReduxStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\ntype mapStateForRedirectPropsType = {\r\n    auth: boolean\r\n}\r\nlet mapStateToPropsForRedirect = (state: ReduxStateType): mapStateForRedirectPropsType => {\r\n    return {\r\n        auth: state.auth.isAuth\r\n    }\r\n}\r\nexport function WithAuthRedirect <T>(Component: ComponentType<T>)  {\r\n\r\n    const RedirectComponent = (props:mapStateForRedirectPropsType) => {\r\n            let {auth, ...restProps} = props\r\n            if (!props.auth) return <Redirect to={'/login'}/>\r\n\r\n            return <Component {...restProps as T}/>\r\n\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form-control\":\"FormsControls_form-control__3UWpJ\",\"my-post-input\":\"FormsControls_my-post-input__3Kc4K\",\"textarea\":\"FormsControls_textarea__2A0lr\",\"errorInput\":\"FormsControls_errorInput__ShC7f\",\"errorTextarea\":\"FormsControls_errorTextarea__8lQff\",\"errorSpan\":\"FormsControls_errorSpan__1qZvi\",\"formClass\":\"FormsControls_formClass__3UCOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsDualRing\":\"Preloader_ldsDualRing__3yn0R\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n                                                         red, className,\r\n                                                         ...restProps\r\n                                                     }\r\n) => {\r\n    const finalClassName = `${red ? s.red + ' ' + s.default : s.default} ${className} ${s.button}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Users_wrap__3sWeN\",\"userWrap\":\"Users_userWrap__3H8b4\",\"userInfoWrap\":\"Users_userInfoWrap__1vcPb\",\"photo\":\"Users_photo__38xCo\",\"status\":\"Users_status__3GmQ1\",\"button\":\"Users_button__3gyxv\",\"pagination\":\"Users_pagination__OHGGc\",\"selectedPage\":\"Users_selectedPage__2C9Fy\",\"user\":\"Users_user__2JHGo\",\"form\":\"Users_form__3NEo2\",\"users\":\"Users_users__3PGlS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3TPlV\",\"item\":\"Navbar_item__1mjvs\",\"active\":\"Navbar_active__rcQNT\",\"opacity\":\"Navbar_opacity__2g_2X\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navbar.module.css';\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\n\r\nfunction Navbar() {\r\n    const theme = useSelector<ReduxStateType,string>((state) => state.app.theme)\r\n\r\n    let navClass = theme === 'light'? s.nav  : s.nav +' '+ s.opacity\r\n    return (\r\n        <nav className={navClass}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            {/*<div className={s.item}>*/}\r\n            {/*    <NavLink to='/dialogs' activeClassName={s.active}> Messages</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={s.item}>\r\n                <NavLink to='/users' activeClassName={s.active}> Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/chat' activeClassName={s.active}>Chat</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to='/settings' activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/rocket33.bf84b78f.png\";","import React, {useEffect, useRef, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css';\r\nimport logo from './logo/rocket33.png';\r\nimport SuperButton from \"../common/Button/SuperButton\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\n\r\ntype HeaderPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nfunction Header(props:HeaderPropsType) {\r\n    const theme = useSelector<ReduxStateType, string>((state) => state.app.theme)\r\n\r\n    const imgRef = useRef<HTMLImageElement | null>(null)\r\n    const divRef = useRef<HTMLDivElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (theme === 'dark') {\r\n            fly()\r\n        } else {\r\n            landing()\r\n        }\r\n    }, [theme])\r\n\r\n\r\n    const fly = async () => {\r\n        if (divRef && divRef.current) divRef.current.style.marginLeft = '85px'\r\n\r\n        imgRef.current?.classList.add(s.logoMove)\r\n        await ignition()\r\n        await start()\r\n        if (imgRef && imgRef.current) imgRef.current.style.display = 'none';\r\n\r\n    }\r\n\r\n    const ignition = () => {\r\n        return new Promise<void>(res => {\r\n            imgRef.current?.animate({transform: 'rotate(1400deg)'}, 500)\r\n\r\n            setTimeout(() => {\r\n                res()\r\n            }, 500)\r\n        })\r\n    }\r\n    const start = () => {\r\n        return new Promise<void>(res => {\r\n            let left = imgRef.current?.getBoundingClientRect().left\r\n            let top = imgRef.current?.getBoundingClientRect().top\r\n            imgRef.current?.animate([\r\n                { // from\r\n                    transform: 'rotate(90deg)',\r\n                    left: left + 'px',\r\n                    top: top + 'px',\r\n                    boxShadow: '-3px 1px 1px rgba(126, 27, 27, 0.84)',\r\n                },\r\n                { // to\r\n                    transform: 'rotate(60deg)',\r\n                    left: left && left + 990 + 'px',\r\n                    top: top && top + 900 + 'px',\r\n                    boxShadow: '-25px 15px 15px rgba(126, 27, 27, 0.84)',\r\n                }\r\n            ], 5000)\r\n\r\n            setTimeout(() => {\r\n                res()\r\n            }, 4900)\r\n        })\r\n    }\r\n    const landing = () => {\r\n        imgRef.current?.classList.remove(s.logoMove)\r\n        if (divRef && divRef.current) divRef.current.style.marginLeft = '15px'\r\n        if (imgRef && imgRef.current) imgRef.current.style.display = 'unset';\r\n    }\r\n\r\n    let wrapClass = theme === 'light' ? s.header : s.header + ' ' + s.opacity\r\n    return (\r\n        <header className={wrapClass}>\r\n            <div className={s.wrap}>\r\n                <div className={s.logo}><img ref={imgRef} src={logo} alt=\"\"/>\r\n                    <div ref={divRef} className={s.brand}>SOCIAL NETWORK</div>\r\n                </div>\r\n                <div className={s.loginBlock}>\r\n                    {props.isAuth\r\n                        ? <div>\r\n                            <NavLink to={'/profile'}> {props.login} </NavLink>\r\n                            <SuperButton\r\n                                style={{\r\n                                    fontSize: '12px',\r\n                                    width: '60px',\r\n                                    margin: '0 0 0 8px',\r\n                                    padding: '4px',\r\n                                    background: '#303f9f',\r\n                                    color: 'white',\r\n                                }}\r\n                                // className={s.outButton}\r\n                                onClick={props.logout}>\r\n                                Log out\r\n                            </SuperButton>\r\n                        </div>\r\n                        : <NavLink to={'/login'}> Login </NavLink>}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {authUser, logout} from \"../../redux/auth-reducer\";\r\n\r\ntype HeaderContainerType = MapStateToPropsType &{\r\n    authUser:() => void\r\n    logout:() => void\r\n}\r\nclass HeaderContainer extends React.Component<HeaderContainerType, {}>{\r\n\r\n    render() {\r\n      return <Header {...this.props}/>\r\n    }\r\n}\r\ntype  MapStateToPropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\nexport default connect(mapStateToProps,{authUser, logout}) (HeaderContainer);","import React from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport {WrappedFieldsProps} from 'redux-form/lib/Fields'\r\nimport { FieldProps } from 'formik'\r\n\r\n\r\nexport const Textarea: React.FC<WrappedFieldsProps> = ({input,meta, value, ...restProps}) => {\r\n    const classStyle = meta.touched && meta.error ? s.errorTextarea + ' ' + s.textarea :  s.textarea\r\n    return <div>\r\n        <textarea className={classStyle} {...restProps} {...value}{...input} {...meta}/>\r\n        <div>\r\n            {meta.touched && meta.error && <span className={s.errorSpan}> {meta.error}</span>}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldsProps> = ({input,meta, ...restProps}) => {\r\n    const classStyle = meta.touched && meta.error ? s.errorTextarea + ' ' + s.textarea :  s.textarea\r\n    return <div>\r\n        <input className={classStyle} {...restProps} {...input} {...meta}/>\r\n        <div>\r\n            {meta.touched && meta.error && <span className={s.errorSpan}> {meta.error}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const FormInput:  React.ComponentType<FieldProps> = ({ field,  form: { touched, errors }, ...props }) => {\r\n    const classStyle = touched[field.name] && errors[field.name] ? s.errorTextarea + ' ' + s.textarea + ' ' + s.formClass  :  s.textarea + ' ' + s.formClass\r\n    return <div>\r\n        <input className={classStyle}\r\n               {...field} {...props}/>\r\n        <div>\r\n            {touched[field.name] && errors[field.name] && <span className={s.errorSpan}> {errors[field.name]}</span>}\r\n        </div>\r\n    </div>\r\n}\r\nexport const FormSelect:  React.ComponentType<FieldProps> = ({children, field,  form: { touched, errors }, ...props }) => {\r\n    const classStyle = touched[field.name] && errors[field.name] ? s.errorTextarea + ' ' + s.textarea + ' ' + s.formClass :  s.textarea + ' ' + s.formClass\r\n    return <div>\r\n        <select className={classStyle}\r\n               {...field} {...props}>\r\n            {children}\r\n        </select>\r\n        <div>\r\n            {touched[field.name] && errors[field.name] && <span className={s.errorSpan}> {errors[field.name]}</span>}\r\n        </div>\r\n    </div>\r\n}\r\n","export const required = (value: any) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: any) => (value: any) => {\r\n    if (value && value.length > maxLength)  return `Max length is ${maxLength} symbols`\r\n    return undefined\r\n}\r\nexport const minLengthCreator = (minLength: any) => (value: any) => {\r\n    if (value && value.length < minLength)  return `Min length is ${minLength} symbols`\r\n    return undefined\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport SuperButton from \"../common/Button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./Login.module.css\";\r\n\r\n type FormDataType = {\r\n    email:string\r\n    password:string\r\n    captchaURL:string | null\r\n    rememberMe:boolean\r\n}\r\n\r\nlet maxLength = maxLengthCreator(20)\r\nlet minLength = minLengthCreator(4)\r\n\r\n const LoginForm:React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit,...props}) => {\r\n\r\n    const captchaURL = useSelector<ReduxStateType,string | null>(state => state.auth.captchaURL)\r\n\r\n    useEffect(() => {\r\n        document.title = 'Login'\r\n    },[])\r\n\r\n\r\n    return <div>\r\n        <form className={s.loginWrap} onSubmit={handleSubmit}>\r\n            <p className={s.login}>Sign in</p>\r\n            <div className={s.auth}>\r\n                <p> You can use this app with default authorization or register\r\n                    <a href=\"https://social-network.samuraijs.com/\" target=\"_blank\"> here</a>\r\n                </p>\r\n                <p> Email: free@samuraijs.com</p>\r\n                <p>Password: free</p>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'   Email'}\r\n                       style={{height: '35px', width: '100%'}}\r\n                       validate={[required]}\r\n                       name={'email'}\r\n                       component={Input}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={'   Password'}\r\n                       style={{height: '35px', width: '100%'}}\r\n                       validate={[required, maxLength, minLength]}\r\n                       type={'password'}\r\n                       name={'password'}\r\n                       component={Input}/>\r\n            </div>\r\n            <div style={{display: 'flex', marginTop: '5px'}}>\r\n                <Field\r\n                    style={{marginRight: '8px'}}\r\n                    component={'input'}\r\n                    name={'rememberMe'}\r\n                    type={\"checkbox\"}\r\n                />\r\n                <p style={{marginTop: '-6px'}}>Remember me</p>\r\n            </div>\r\n            <div style={{display: 'flex', marginTop: '5px'}}>\r\n                {captchaURL && <img src={captchaURL}/>}\r\n\r\n                {captchaURL && <Field\r\n                    style={{marginRight: '8px'}}\r\n                    component={Input}\r\n                    placeholder={'Symbols from image'}\r\n                    validate={required}\r\n                    name={'captchaURL'}\r\n                />}\r\n            </div>\r\n            <div>\r\n                <SuperButton> Login</SuperButton>\r\n            </div>\r\n            {props.error && <div className={s.errorTextarea}>{props.error}</div>}\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = () => {\r\n    const isAuth = useSelector<ReduxStateType,boolean >(state => state.auth.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        dispatch(login(formData.email,formData.password,formData.rememberMe,formData.captchaURL))\r\n    }\r\n\r\n    if(isAuth){ return <Redirect to={'/profile'}/> }\r\n\r\n    return <div>\r\n        <LoginReduxForm  onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Login","let initialState = {}\r\n\r\n\r\nexport const sidebarReducer = (state:any = initialState,action:any) => {\r\n\r\n    return state\r\n\r\n}\r\n","\r\nconst SEND_MESSAGE = 'DIALOGS/SEND_MESSAGE'\r\n\r\n\r\nexport type MessagesType = {\r\n    id: number\r\n    messages: string\r\n}\r\n\r\nexport type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type DialogActionType = SendMessageActionType\r\nexport type SendMessageActionType = ReturnType<typeof sendMessageCreator>\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Anya'},\r\n        {id: 4, name: 'Sveta'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'},\r\n    ] as DialogsType[],\r\n    messages: [\r\n        {id: 1, messages: 'Hi'},\r\n        {id: 2, messages: 'How are you?'},\r\n        {id: 3, messages: 'Good'},\r\n    ] as MessagesType[]\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: DialogActionType):InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {...state,\r\n                messages:[...state.messages,{id: new Date().getTime(), messages: body}]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string) => {\r\n    return {\r\n        type: SEND_MESSAGE, newMessageBody\r\n    } as const\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/api\";\r\nimport {FormType} from \"../components/Profile/ProfileInfo/ContentForm/ContentForm\";\r\nimport {AppThunkType} from \"./redux-store\";\r\n\r\nconst ADD_POST = 'PROFILE/ADD-POST';\r\nconst SET_USER_PROFILE = 'PROFILE/SET_USER_PROFILE';\r\nconst SET_STATUS = 'PROFILE/SET_STATUS';\r\nconst DELETE_POST = 'PROFILE/DELETE_POST';\r\nconst SET_PHOTO = 'PROFILE/SET_PHOTO';\r\n\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    messages: string\r\n    likesCount: number\r\n}\r\n\r\nexport type ContactsType = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ProfileType = {\r\n    userId: number| null\r\n    lookingForAJob: boolean | null\r\n    lookingForAJobDescription: string | null\r\n    fullName: string | null\r\n    aboutMe: string | null\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n    }\r\nexport type ProfilePageType = {\r\n    posts: PostsType[]\r\n    newPostText: string\r\n    profile: ProfileType | null\r\n    status: string\r\n    isOwner:boolean\r\n    updateMode:boolean\r\n}\r\n\r\nexport type ProfileActionType = AddPostActionType | ProfileUpdateModeType | SetUsersProfileActionType | SetStatusActionType | DeletePostActionType | SetPhotoActionType\r\n\r\nexport type AddPostActionType = ReturnType<typeof addPostCreator>\r\ntype SetUsersProfileActionType = ReturnType<typeof setUsersProfile>\r\ntype SetStatusActionType = ReturnType<typeof setStatus>\r\ntype DeletePostActionType = ReturnType<typeof deletePost>\r\ntype SetPhotoActionType = ReturnType<typeof setPhotoSuccess>\r\ntype ProfileUpdateModeType = ReturnType<typeof profileUpdateMode>\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            messages: 'Falcon 9’s first stage has landed on!',\r\n            likesCount: 11,\r\n        },\r\n        {\r\n            id: 2,\r\n            messages: 'Yuri Gagarin was the first person to fly in space.',\r\n            likesCount: 41,\r\n        },\r\n\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status:'Hello!',\r\n    isOwner:false,\r\n    updateMode:false\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ProfileActionType): ProfilePageType => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                messages: action.newPostText,\r\n                likesCount: Math.ceil(Math.random() * 100),\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost,...state.posts],\r\n                newPostText: '',\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.text\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n\r\n        case DELETE_POST:\r\n            return {...state,\r\n                posts: state.posts.filter((post) => post.id !== action.id) }\r\n        case SET_PHOTO:\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n      case 'PROFILE_UPDATE_MODE':\r\n            return {...state, updateMode:action.mode }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addPostCreator = (newPostText:string) => ({type: ADD_POST, newPostText} as const)\r\nexport const setStatus = (text: string) => ({type: SET_STATUS, text} as const)\r\nexport const setUsersProfile = (profile: ProfileType) => ( {type: SET_USER_PROFILE, profile} as const)\r\nexport const deletePost = (id: number) => ({type: DELETE_POST, id} as const)\r\nexport const setPhotoSuccess = (photos: PhotosType) => ({type: SET_PHOTO, photos} as const )\r\nexport const profileUpdateMode = (mode: boolean) => ({type: \"PROFILE_UPDATE_MODE\", mode} as const)\r\n\r\nexport const getProfile = (id:number | null) =>\r\n    async (dispatch: Dispatch<ProfileActionType>) => {\r\n         try {\r\n             const res = await profileAPI.getProfile(id)\r\n             dispatch(setUsersProfile(res.data))\r\n         }catch (e){\r\n             console.log(e)\r\n         }\r\n}\r\n\r\n\r\nexport const getStatus = (id: number) =>\r\n    async (dispatch: Dispatch<ProfileActionType>) => {\r\n        try {\r\n            const res = await profileAPI.getStatus(id)\r\n            dispatch(setStatus(res.data))\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\n\r\nexport const setPhoto = (file: string | Blob) =>\r\n    async (dispatch: Dispatch<ProfileActionType>) => {\r\n        try {\r\n            const res = await profileAPI.setPhoto(file)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setPhotoSuccess(res.data.data.photos))\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n\r\nexport const setProfile = (file: FormType):AppThunkType  =>\r\n    async (dispatch, getState) => {\r\n        let userId = getState().auth.userId\r\n        try {\r\n            const res = await profileAPI.setProfile(file)\r\n                    if (res.data.resultCode === 0) {\r\n                        dispatch(getProfile(userId))\r\n                        dispatch(profileUpdateMode(false))\r\n                    }\r\n        } catch (e) {\r\n          return Promise.reject(e.data.messages[0])\r\n        }\r\n    }\r\n\r\n\r\nexport const updateStatus = (text: string) =>\r\n    async (dispatch: Dispatch<ProfileActionType>) => {\r\n        try {\r\n            const res = await profileAPI.updateStatus(text)\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(setStatus(text))\r\n            }\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n","import {CommonType, userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {InferActionTypes} from \"./redux-store\";\r\n\r\nexport type UsersType = {\r\n    id: number\r\n    photoUrl: string\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n    location: {\r\n        city: string\r\n        country: string\r\n    }\r\n}\r\n\r\n type InitialStateType = {\r\n    users: UsersType[]\r\n    usersOnPage: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    followingInProgress:number[]\r\n    portionSize:number\r\n    filter:{\r\n        term:string\r\n        friend:null | boolean\r\n    }\r\n}\r\nexport type FilterType = typeof initialState.filter\r\ntype FollowActionType = ReturnType<typeof actions.followSuccess>\r\ntype UnFollowActionType = ReturnType<typeof actions.unFollowSuccess>\r\nexport type UsersActionType = InferActionTypes<typeof actions>\r\n\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    usersOnPage: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching:false,\r\n    followingInProgress:[],\r\n    portionSize:15,\r\n    filter:{\r\n        term:'',\r\n        friend:null\r\n    }\r\n}\r\nexport const usersReducer = (state: InitialStateType = initialState, action: UsersActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case 'SET_USERS': {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case 'SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case 'TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'FILTER': {\r\n            return {...state, filter: action.payload}\r\n        }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id =>  id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess :(id: number) => ({type: 'FOLLOW', userID: id} as const),\r\n    setFilter :(filter:FilterType) =>  ({type: 'FILTER', payload:filter} as const),\r\n    unFollowSuccess :(id: number) =>  ({type: 'UNFOLLOW', userID: id} as const),\r\n    setUsers :(users: UsersType[]) => ({type: 'SET_USERS', users: users} as const),\r\n    setCurrentPage :(page: number) => ({type: 'SET_CURRENT_PAGE', currentPage: page} as const),\r\n    setTotalUsersCount :(count: number) => ( {type: 'SET_TOTAL_USERS_COUNT', totalCount: count} as const),\r\n    toggleIsFetching :(isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleIsFollowingProgress :(followingInProgress: boolean, userId:number) => ({type: 'TOGGLE_IS_FOLLOWING_PROGRESS', followingInProgress, userId} as const ),\r\n}\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number,filter:FilterType) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n        dispatch(actions.toggleIsFetching(true))\r\n        dispatch(actions.setCurrentPage(currentPage))\r\n        dispatch(actions.setFilter(filter))\r\n\r\n      const res = await  userAPI.getUsers(currentPage, pageSize,filter.term,filter.friend);\r\n                dispatch(actions.toggleIsFetching(false))\r\n                dispatch(actions.setUsers(res.items))\r\n                dispatch(actions.setTotalUsersCount(res.totalCount))\r\n    }\r\n\r\nexport const getPage = (pageNumber: number, currentPage: number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n        dispatch(actions.setCurrentPage(pageNumber))\r\n        dispatch(actions.toggleIsFetching(true))\r\n\r\n        const res = await userAPI.getUsers(pageNumber, currentPage);\r\n                dispatch(actions.toggleIsFetching(false))\r\n                dispatch(actions.setUsers(res.items))\r\n    }\r\n\r\nconst followUnFollowFlow = async (userId: number, dispatch: Dispatch<UsersActionType>, apiMethod: (userId: number) => Promise<CommonType>,\r\n                                  actionCreator: (id: number) => FollowActionType | UnFollowActionType) => {\r\n    dispatch(actions.toggleIsFollowingProgress(true, userId))\r\n    const res = await apiMethod(userId)\r\n    if (res.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(actions.toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId:number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n\r\n        const apiMethod = userAPI.followUser.bind(userAPI)\r\n        followUnFollowFlow(userId,dispatch, apiMethod,actions.followSuccess)\r\n    }\r\n\r\nexport const unFollow = (userId:number) =>\r\n    async (dispatch: Dispatch<UsersActionType>) => {\r\n\r\n        const apiMethod = userAPI.unFollowUser.bind(userAPI)\r\n        followUnFollowFlow(userId,dispatch, apiMethod,actions.unFollowSuccess)\r\n    }\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport {DialogActionType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionType, profileReducer} from \"./propfile-reducer\";\r\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\r\nimport {AuthActionType, authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {AppActionType, appReducer} from \"./app-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    sidebar: sidebarReducer,\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport type ReduxStateType = ReturnType<typeof rootReducer>\r\n\r\n// аналог ReturnType, но для типизации обьекта;\r\n// если переданное значение(Т) соотвествует ключ-массив аргументов, infer запишет этот тип в U и вернет его\r\n//https://habr.com/ru/company/alfa/blog/452620/\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\nexport type ReduxActionType =\r\n    AuthActionType\r\n    | UsersActionType\r\n    | DialogActionType\r\n    | ProfileActionType\r\n    | AppActionType\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, ReduxStateType, unknown, ReduxActionType>\r\n\r\nexport default store","import s from \"./Preloader.module.css\";\r\nimport React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n    return <div className={s.ldsDualRing}></div>\r\n}","export default __webpack_public_path__ + \"static/media/logo2.73c0cc36.png\";","import s from \"./ProfileStatus.module.css\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\n type PropsType = {\r\n     status: string\r\n     isOwner:boolean\r\n     updateStatus:(text:string) => void\r\n }\r\nexport const ProfileStatusWithHooks = (props: PropsType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const deactivateEditMode = () => {\r\n        props.updateStatus(status)\r\n        setEditMode(false)\r\n    }\r\n    const activateEditMode = () => {\r\n       if(props.isOwner)  setEditMode(true)\r\n    }\r\n    const onKeyPressInput = (e:React.KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter')  deactivateEditMode()\r\n    }\r\n    const onStatusChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    let checkedStatus = props.status === null ? 'Hello!' : props.status\r\n\r\n    return <div style={{flexWrap: 'wrap'}}>\r\n        {!editMode &&\r\n        <div className={s.statusInputDiv}>\r\n            <span onDoubleClick={activateEditMode}>\r\n                {checkedStatus}\r\n            </span>\r\n        </div>}\r\n        {editMode && props.isOwner &&\r\n        <div className={s.changeStatusDiv}>\r\n            <input\r\n                onChange={onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={deactivateEditMode}\r\n                className={s.statusInput}\r\n                type=\"text\"\r\n                value={status}\r\n                onKeyPress={onKeyPressInput}\r\n            />\r\n        </div>}\r\n    </div>\r\n}","import React, {useState} from \"react\";\r\nimport s from \"./DragAndDrop.module.css\";\r\n\r\ntype DragType = {\r\n    setPhoto?:(file:string | Blob) => void\r\n    setEditPhotoMode?: (value:boolean) => void\r\n    isOwner?:boolean\r\n}\r\nexport const DragAndDrop = (props:DragType) => {\r\n\r\n    const [drag, setDrag] = useState(false)\r\n\r\n    const dragStartHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n        setDrag(true)\r\n    }\r\n    const dragLeaveHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n        setDrag(false)\r\n    }\r\n    const onDropHandler = (e: React.DragEvent<HTMLDivElement>) => {\r\n        e.preventDefault()\r\n\r\n        if(e.dataTransfer.files[0]){\r\n            let files = e.dataTransfer.files[0]\r\n            props.setPhoto && props.setPhoto(files)\r\n        }\r\n        setDrag(false)\r\n        props.setEditPhotoMode && props.setEditPhotoMode(false)\r\n    }\r\n\r\n    return   <div className={s.dragWrap}>\r\n        {drag\r\n            ? <div\r\n                className={s.drop}\r\n                onDragStart={(e)=>{dragStartHandler(e)}}\r\n                onDragOver={(e)=>{dragStartHandler(e)}}\r\n                onDragLeave={(e)=>{dragLeaveHandler(e)}}\r\n                onDrop={(e)=>{onDropHandler(e)}}\r\n            > Drop file  </div>\r\n            : <div\r\n                className={s.drag}\r\n                onDragStart={(e)=>{dragStartHandler(e)}}\r\n                onDragOver={(e)=>{dragStartHandler(e)}}\r\n                onDragLeave={(e)=>{dragLeaveHandler(e)}}\r\n            >  Drag file </div>\r\n        }\r\n\r\n    </div>\r\n}\r\n\r\n//todo add pop-up when file download","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\nimport {WrappedFieldsProps} from \"redux-form/lib/Fields\";\r\nimport {FieldProps} from \"formik\";\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nexport const SuperCheckbox: React.FC<SuperCheckboxPropsType & WrappedFieldsProps & FieldProps> = (\r\n    {input,meta,type,checked,field,\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,form,\r\n        children,name,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={'checkbox'}\r\n                className={finalInputClassName}\r\n                checked={checked}\r\n                {...input}\r\n                {...field}\r\n                {...meta}\r\n                {...restProps}\r\n            />\r\n            {children && <span className={s.spanClassName}> {children}</span>}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React from \"react\";\r\nimport {ContentType} from \"../ProfileInfo\";\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport SuperButton from \"../../../common/Button/SuperButton\";\r\nimport {FormInput} from \"../../../common/FormsControl/FormsControls\";\r\nimport SuperCheckbox from \"../../../common/Checkbox/SuperCheckbox\";\r\n\r\n\r\nexport type FormType = {\r\n    fullName: string | null | undefined\r\n    aboutMe: string | null | undefined\r\n    lookingForAJob:boolean | null | undefined\r\n    lookingForAJobDescription:string | null | undefined\r\n}\r\n\r\nconst contentFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\n\r\nexport const ContentForm:React.FC<ContentType> = (props ) => {\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        setSubmitting(false)\r\n        props.profileUpdateMode(false)\r\n        props.setProfile(values)\r\n    }\r\n\r\n    let fullName = props.profile?.fullName && props.profile?.fullName\r\n    let aboutMe = props.profile?.aboutMe && props.profile?.aboutMe\r\n    let lookingForAJob = props.profile?.lookingForAJob && props.profile?.lookingForAJob\r\n    let lookingForAJobDescription = props.profile?.lookingForAJobDescription && props.profile?.lookingForAJobDescription\r\n\r\n    const formClass = s.fragmentWrap + ' ' + s.contentForm\r\n    return <Formik\r\n        initialValues={{fullName: fullName, aboutMe: aboutMe,lookingForAJob:lookingForAJob,lookingForAJobDescription:lookingForAJobDescription}}\r\n        validate={contentFormValidate}\r\n        onSubmit={submit}\r\n    >\r\n        {({isSubmitting}) => (\r\n            <Form style={{paddingRight: '10px'}}>\r\n                <div className={formClass}  style={{marginTop: '13px'}}>\r\n                    <p> Full name: </p>\r\n                    <Field component={FormInput} placeholder={'Full name'} type=\"text\" name=\"fullName\"/>\r\n                </div>\r\n\r\n                <div className={formClass}>\r\n                    <p> Description: </p>\r\n                    <Field component={FormInput} placeholder={'About me'} type=\"text\" name=\"aboutMe\"/>\r\n                </div>\r\n                <div className={s.fragmentWrap}>\r\n                    <p> Looking for a job: </p>\r\n                    <Field component={SuperCheckbox} type=\"checkbox\" name=\"lookingForAJob\"/>\r\n                </div>\r\n                <div className={s.fragmentWrap  + ' ' + s.contentForm} style={{marginTop:'7px'}}>\r\n                        <p> My skills: </p>\r\n                        <Field component={FormInput} placeholder={'My skills'} type=\"text\" name=\"lookingForAJobDescription\"/>\r\n                </div>\r\n                <div className={s.fragmentWrap}>\r\n                         <p> Contacts: {\r\n                            Object\r\n                                .entries(props.profile?.contacts ? props.profile?.contacts : {})\r\n                                .map((key, value) => {\r\n                                    return <div key={value} className={s.fragmentWrap} style={{justifyContent: 'space-between',marginLeft: '20px'}}>\r\n                                        <p> {key[0]}: </p>\r\n                                        <Field style={{marginBottom:'5px'}} component={FormInput} placeholder={key[0]} type=\"text\" name={'contacts.' + key[0]}/>\r\n                                    </div>})}\r\n                        </p>\r\n                </div>\r\n                <SuperButton\r\n                    style={{width: '50%', opacity:'0.7'}}\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}>\r\n                    submit changes\r\n                </SuperButton>\r\n\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Logo from './../../Users/img/logo2.png';\r\nimport {ProfileType} from \"../../../redux/propfile-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatusWithHooks} from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport {DragAndDrop} from \"../../common/DragAndDrop/DragAndDrop\";\r\nimport {ContentForm, FormType} from \"./ContentForm/ContentForm\";\r\nimport SuperButton from \"../../common/Button/SuperButton\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus:(text:string) => void\r\n    setPhoto:(file:string | Blob) => void\r\n    isOwner:boolean\r\n    profileUpdateMode:(value:boolean) => void\r\n    updateMode:boolean\r\n    setProfile:(file:FormType)  => void\r\n}\r\n\r\nfunction ProfileInfo(props: PropsType) {\r\n\r\n    const [editPhotoMode, setEditPhotoMode] = useState(false)\r\n\r\n    if (!props.profile) return <Preloader/>;\r\n\r\n    let photoSmall = props.profile.photos.small ? props.profile.photos.small  : Logo\r\n    let photoLarge = props.profile.photos.large ? props.profile.photos.large : Logo\r\n\r\n    let img = <img onDoubleClick={()=>{setEditPhotoMode(!editPhotoMode)}} className={s.img} src={photoLarge || photoSmall}/>\r\n\r\n    return (\r\n        <div>\r\n\r\n                <div className={s.descriptionBlock}>\r\n                    <div className={s.content} style={{ margin: '15px 0 0 15px', padding:' 0 20px 0 0'}}>\r\n                        {img}\r\n                        <div>\r\n                            {props.isOwner\r\n                            && editPhotoMode\r\n                            && <div style={{margin: '15px 0 0 30px'}}>\r\n                                <DragAndDrop\r\n                                    setEditPhotoMode={setEditPhotoMode}\r\n                                    isOwner={props.isOwner}\r\n                                    setPhoto={props.setPhoto}/>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={s.contentWrap}>\r\n                        <div className={s.content} style={{margin:' 0 0 20px 0'}}>\r\n                        <div className={s.name}>{props.profile && props.profile.fullName}\r\n                            <span>Double click on highlighted objects to edit your profile</span>\r\n                        </div>\r\n\r\n                        <div className={s.fragmentWrap} style={{textAlign: 'initial'}}>\r\n                            <p> Status: </p> <ProfileStatusWithHooks isOwner={props.isOwner}\r\n                                                                     updateStatus={props.updateStatus}\r\n                                                                     status={props.status}/>\r\n                        </div>\r\n            </div>\r\n\r\n                            {props.updateMode\r\n                                ? <div className={s.content}>\r\n                                    <ContentForm\r\n                                    setPhoto={props.setPhoto}\r\n                                    isOwner={props.isOwner}\r\n                                    profile={props.profile}\r\n                                    setProfile={props.setProfile}\r\n                                    profileUpdateMode={props.profileUpdateMode}\r\n                                    updateMode={props.updateMode}/>\r\n                            </div>\r\n                                : <div className={s.content}>\r\n                                    <Content\r\n                                    setPhoto={props.setPhoto}\r\n                                    isOwner={props.isOwner}\r\n                                    profile={props.profile}\r\n                                    setProfile={props.setProfile}\r\n                                    profileUpdateMode={props.profileUpdateMode}\r\n                                    updateMode={props.updateMode}/>\r\n                                </div>\r\n                            }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport type ContentType = {\r\n    profile: ProfileType | null\r\n    setPhoto:(file:string | Blob) => void\r\n    isOwner:boolean\r\n    profileUpdateMode:(value:boolean) => void\r\n    updateMode:boolean\r\n    setProfile:(file:FormType)  => void\r\n}\r\nconst Content = (props:ContentType) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const submitHandler = () => {props.profileUpdateMode(true)}\r\n\r\n    return <div>\r\n\r\n        <div  className={s.fragmentWrap}>\r\n            <p> Full name: </p> <p>{props.profile?.fullName}</p>\r\n        </div>\r\n\r\n        <div  className={s.fragmentWrap}>\r\n            <p> Description: </p> <p>{props.profile?.aboutMe}</p>\r\n        </div>\r\n        <div  className={s.fragmentWrap}>\r\n            {props.profile?.lookingForAJob &&\r\n            <>\r\n           <p> Looking for a job: </p>\r\n            <p>Yes!</p>\r\n           </>}\r\n        </div>\r\n        <div  className={s.fragmentWrap}>\r\n            {props.profile?.lookingForAJob &&\r\n            <>\r\n                <p> My skills: </p>\r\n                <p>{props.profile?.lookingForAJobDescription || 'lookingForAJobDescription'}</p>\r\n            </>}\r\n        </div>\r\n        <div  className={s.fragmentWrap}>\r\n            {!editMode\r\n                ? <div className={s.detailsWrap} onClick={() => {\r\n                    setEditMode(true)\r\n                }}>\r\n\r\n                    <div className={s.highlight}>\r\n                        <span>Show contacts</span>\r\n                    </div>\r\n                </div>\r\n                : <div>\r\n                    <div className={s.detailsWrap} onClick={() => {\r\n                        setEditMode(false)\r\n                    }}>\r\n\r\n                        <div style={{paddingLeft: '94px'}} className={s.highlight}>\r\n                            <span> Hide contacts</span>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <p style={{textAlign: 'initial'}}> Contacts: {\r\n                        Object\r\n                            .entries(props.profile?.contacts ? props.profile?.contacts : {})\r\n                            .map((key, value) => {\r\n                                return <div key={value} className={s.fragmentWrap} style={{marginLeft: '20px'}}>\r\n                                    <p> {key[0]}: </p> <p>{key[1]}</p>\r\n                                </div>\r\n                            })}</p>\r\n                </div>}\r\n\r\n        </div>\r\n        {props.isOwner && <SuperButton\r\n            style={{width: '50%', opacity: '0.7'}}\r\n            onClick={submitHandler}> edit profile</SuperButton>}\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/img.1c5b1442.webp\";","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport Logo from './img/img.webp';\r\n\r\ntype PostType = {\r\n    message:string\r\n    like:number\r\n}\r\n\r\nfunction Post(props:PostType) {\r\n\r\n    return <div className={classes.content}>\r\n        <div>\r\n            <div className={classes.img}><img src={Logo} alt=\"\"/></div>\r\n            <div className={classes.like}>like {props.like}</div>\r\n\r\n        </div>\r\n                <div className={classes.message}> {props.message}</div>\r\n        </div>\r\n}\r\n\r\nexport default Post;","import {useDispatch} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport s from \"./AddMessageFormik.module.css\";\r\nimport {FormControl, FormGroup} from \"@material-ui/core\";\r\nimport SuperButton from \"../Button/SuperButton\";\r\nimport React from \"react\";\r\n\r\ntype FormikErrorType = {\r\n    text?: string\r\n}\r\ntype AddMessageFormikType = {\r\n    addPost?: (newPostText: string) => void\r\n    placeholder?: string\r\n    buttonWidth?: string\r\n    textareaClass?: string\r\n    style?: { width: string; margin: string; }\r\n}\r\n\r\nexport const AddMessageFormik = (props: AddMessageFormikType) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            text: '',\r\n        },\r\n        onSubmit: (values, actions) => {\r\n            dispatch(props.addPost && props.addPost(values.text))\r\n            actions.setFieldValue('text', '', false)\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {}\r\n            if (values.text.length < 2) {\r\n                errors.text = 'Message must be more than 2 characters'\r\n            }\r\n            return errors\r\n        },\r\n    })\r\n\r\n    let textareaClass = props.textareaClass ? props.textareaClass + ' ' + s.textarea : s.textarea\r\n\r\n    return <form onSubmit={formik.handleSubmit}>\r\n        <FormControl style={{display: 'flex', flex: '1 0'}}>\r\n            <FormGroup>\r\n                            <textarea\r\n                                className={textareaClass}\r\n                                style={props.style}\r\n                                placeholder={props.placeholder}\r\n                                {...formik.getFieldProps('text')}\r\n                            />\r\n\r\n                {formik.touched.text && formik.errors.text\r\n                    ? <div style={{color: 'red'}}>{formik.errors.text}</div>\r\n                    : null}\r\n\r\n                <SuperButton style={{width: props.buttonWidth}}\r\n                    //  className={s.btn}\r\n                             type={'submit'}> Send message</SuperButton>\r\n            </FormGroup>\r\n        </FormControl>\r\n    </form>\r\n\r\n}","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../redux/redux-store\";\r\nimport {addPostCreator} from \"../../../redux/propfile-reducer\";\r\nimport {AddMessageFormik} from \"../../common/addMessageForm/AddMessageFormik\";\r\n\r\n\r\nconst MyPosts = React.memo(() => {\r\n    const {posts} = useSelector((state: ReduxStateType) => state.profilePage)\r\n\r\n    let PostsElements =\r\n        posts.map(post => <Post key={post.id} message={post.messages} like={post.likesCount}/>)\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.postBlock}>\r\n                <AddMessageFormik placeholder={'Create new post'}\r\n                                  buttonWidth={'initial'}\r\n                                  addPost={addPostCreator}\r\n                                //  textareaClass={s.myPstInput}\r\n                                  style={{\r\n                                      width: 'inherit',\r\n                                      margin: '8px 0 0 0',\r\n                                  }}\r\n                />\r\n            </div>\r\n            <div className={s.posts}>\r\n                {PostsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React, {useEffect} from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport {ProfileType} from \"../../redux/propfile-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {FormType} from \"./ProfileInfo/ContentForm/ContentForm\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus:(text:string) => void\r\n    setPhoto:(file:string | Blob) => void\r\n    isAuth: boolean\r\n    isOwner:boolean\r\n    profileUpdateMode:(value:boolean) => void\r\n    updateMode:boolean\r\n    setProfile:(file:FormType)  => void\r\n}\r\nfunction Profile(props:PropsType) {\r\n\r\n    useEffect(() => {\r\n        document.title =  props.profile?.fullName ? props.profile?.fullName : 'Profile'\r\n    },[props.profile?.fullName])\r\n\r\n        if(!props.isAuth){ return <Redirect to={'/login'}/> }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner}\r\n                         setPhoto={props.setPhoto}\r\n                         profileUpdateMode={props.profileUpdateMode}\r\n                         updateMode={props.updateMode}\r\n                         setProfile={props.setProfile}\r\n            />\r\n\r\n            <div className={s.myPostWrap}>\r\n                <MyPosts/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    ProfileType,\r\n    profileUpdateMode,\r\n    setPhoto, setProfile,\r\n    updateStatus\r\n} from \"../../redux/propfile-reducer\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {FormType} from \"./ProfileInfo/ContentForm/ContentForm\";\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    isAuth: boolean\r\n    authorizedUserId: number | null\r\n    isOwner:boolean\r\n    updateMode:boolean\r\n}\r\n\r\ntype ProfileContainerType = mapStateToPropsType & {\r\n    getProfile:(userId:number) => void\r\n    getStatus:(userId:number) => void\r\n    updateStatus:(text:string) => void\r\n    setPhoto:(file:string | Blob) => void\r\n    profileUpdateMode:(value:boolean) => void\r\n    setProfile:(file:FormType)  => void\r\n}\r\n\r\ntype PathParamsType = { userId: string }\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\r\n\r\n class ProfileContainer extends React.Component<PropsType, {}>{\r\n\r\n  setUserId (){\r\n      let userId = +this.props.match.params.userId;\r\n      if(!userId) {\r\n          this.props.isAuth\r\n              ? userId = Number(this.props.authorizedUserId)\r\n              : this.props.history.push('/login')\r\n      }\r\n      this.props.getProfile(userId)\r\n      this.props.getStatus(userId)\r\n }\r\n\r\n     componentDidMount() {\r\n         this.setUserId()\r\n     }\r\n\r\n     componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n         if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n             this.setUserId()\r\n         }\r\n     }\r\n\r\n\r\n     render(){\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        setPhoto={this.props.setPhoto}\r\n                        profileUpdateMode={this.props.profileUpdateMode}\r\n                        updateMode={this.props.updateMode}\r\n                        setProfile={this.props.setProfile}\r\n        />\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isOwner: state.profilePage.isOwner,\r\n        updateMode: state.profilePage.updateMode,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default  compose<React.ComponentType>(connect(mapStateToProps,{setProfile,profileUpdateMode,getStatus,updateStatus,setPhoto,getProfile}),withRouter)(ProfileContainer)\r\n","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\nimport SuperButton from \"../Button/SuperButton\";\r\n\r\n\r\ntype PaginatorPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    totalItemsCount: number\r\n    usersOnPage:number\r\n    currentPage: number\r\n    portionSize:number\r\n}\r\n\r\nexport const Paginator = React.memo((props:PaginatorPropsType) => {\r\n\r\n    let selectedPage = s.selectedPage + ' ' + s.pagination\r\n    const [portionNumber,setPortionNumber] = useState(1)\r\n\r\n     //всего юзеров / кол-во юзеров на странице = кол-во страниц\r\n    const pagesCount = Math.ceil( props.totalItemsCount / props.usersOnPage)\r\n    const pages:number[] = []\r\n\r\n    for (let i = 1;i <= pagesCount ;i++){ pages.push(i) }\r\n\r\n    // кол-во страниц / \"порцию страниц\"  = кол-во \"порций\" страниц\r\n    const portionCount = Math.ceil(pagesCount  / props.portionSize)\r\n\r\n    const leftPortionSize = (portionNumber - 1) * props.usersOnPage + 1\r\n    const rightPortionSize = portionNumber * props.usersOnPage\r\n\r\n    return (\r\n            <div className={s.wrap}>\r\n                {portionNumber > 1 &&\r\n                <SuperButton\r\n                    className={s.button}\r\n                    onClick={() => {setPortionNumber(portionNumber - 1)}}>\r\n                    PREV </SuperButton>}\r\n\r\n                {pages\r\n                    .filter(p => p >= leftPortionSize && p <= rightPortionSize)\r\n                    .map((p ,index) => {\r\n                    return <span\r\n                            key={index}\r\n                            className={props.currentPage === p ? selectedPage : s.pagination}\r\n                            onClick={()=>{props.onPageChanged(p)}}>\r\n                       {p < 10 ? `${' '}${p}${' '}`: p} </span>  })}\r\n\r\n\r\n                {portionCount > portionNumber &&\r\n                <SuperButton\r\n                    className={s.button}\r\n                    style={{marginLeft:'10px'}}\r\n                    onClick={() => {setPortionNumber(portionNumber + 1)}}>\r\n                    NEXT </SuperButton>}\r\n            </div>\r\n)})","import {ReduxStateType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\nexport const getUsersPageSelector = (state: ReduxStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsersPage = createSelector([getUsersPageSelector],(users) => {\r\n    return users\r\n})\r\n\r\nexport const getPageSize = (state: ReduxStateType) => {\r\n    return state.usersPage.usersOnPage\r\n}\r\n\r\nexport const getTotalUsersCount = (state: ReduxStateType) => {\r\n     return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: ReduxStateType) => {\r\n    return  state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: ReduxStateType) => {\r\n    return  state.usersPage.isFetching\r\n}\r\nexport const portionSize = (state: ReduxStateType) => {\r\n    return  state.usersPage.portionSize\r\n}\r\nexport const getFollowingInProgress = (state: ReduxStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getUsersFilter = (state: ReduxStateType) => {\r\n    return state.usersPage.filter\r\n}\r\n\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport logo from \"./img/logo2.png\";\r\nimport {follow, unFollow, UsersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport SuperButton from \"../common/Button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getFollowingInProgress} from \"../../redux/users-selectors\";\r\n\r\ntype UserPropsType = {\r\n    users: UsersType\r\n}\r\n\r\nexport const User: React.FC<UserPropsType> = ({users,...props}) => {\r\n    const dispatch = useDispatch()\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    let checkedStatus = users.status === null ? 'Hello!' : users.status\r\n\r\n    let strOne,  strTwo\r\n    const array = checkedStatus.split('')\r\n    if (checkedStatus.length >= 16) {\r\n        const array = checkedStatus.split('')\r\n        const result = [], length = Math.floor(array.length / 2);\r\n        while (array.length) result.push(array.splice(0, length));\r\n\r\n        strOne = result[0].join('')\r\n        strTwo = result[1].join('')\r\n    }\r\n\r\n    return (\r\n        <div className={s.userWrap}>\r\n            <span>\r\n                        <NavLink to={'/profile/' + users.id}>\r\n                            <img src={users.photos.small != null ? users.photos.small : logo} className={s.photo}/>\r\n                        </NavLink>\r\n                </span>\r\n            <span className={s.userInfoWrap}>\r\n                    <span style={{cursor: 'default'}}>\r\n                        <div style={{wordWrap: 'break-word'}}> {users.name}</div>\r\n\r\n                        {!!array && array.length < 16\r\n                            ? <div className={s.status}> {checkedStatus}</div>\r\n                            : <div className={s.status}>\r\n                                {strOne} <br/> {strTwo}\r\n                            </div>}\r\n                    </span>\r\n\r\n                         <div className={s.button}>\r\n\r\n                        {users.followed\r\n                            ? <SuperButton\r\n                                style={{letterSpacing: '1px', fontSize: '14px'}}\r\n                                disabled={followingInProgress.some(id => id === users.id)}\r\n                                onClick={() => {\r\n                                    dispatch(unFollow(users.id))\r\n                                }}>\r\n                                UNFOLLOW\r\n                            </SuperButton>\r\n                            : <SuperButton style={{letterSpacing: '1px', fontSize: '14px'}}\r\n                                           disabled={followingInProgress.some(id => id === users.id)}\r\n                                            onClick={() => {dispatch(follow(users.id))}}>\r\n                                FOLLOW\r\n                            </SuperButton>\r\n                        }\r\n                    </div>\r\n                </span>\r\n        </div>\r\n\r\n)}","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport SuperButton from \"../common/Button/SuperButton\";\r\nimport {FormInput, FormSelect} from \"../common/FormsControl/FormsControls\";\r\nimport s from \"./Users.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/users-selectors\";\r\n\r\nconst usersSearchValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\ntype FriendFormType = 'true' | 'false' | 'null';\r\ntype FormType = {\r\n    term:string\r\n    friend: FriendFormType\r\n}\r\nexport const UsersSearch:React.FC<PropsType> = React.memo((props) => {\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const submit = (values:FormType, { setSubmitting }:{setSubmitting:(isSubmitting: boolean) => void}) => {\r\n        const filter:FilterType = {\r\n            term:values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return  <Formik\r\n        enableReinitialize={true}\r\n        initialValues={{ term: filter.term, friend:String(filter.friend) as FriendFormType}}\r\n        validate={usersSearchValidate}\r\n        onSubmit={submit}\r\n    >\r\n        {({ isSubmitting }) => (\r\n            <Form className={s.form} >\r\n                <Field component={FormSelect}  name=\"friend\" type=\"select\" >\r\n                    <option value=\"null\">All</option>\r\n                    <option value=\"true\">Only followed</option>\r\n                    <option value=\"false\">Only unfollowed</option>\r\n                </Field>\r\n                <Field placeholder={'  Find...'}  component={FormInput}  type=\"text\" name=\"term\" />\r\n                <SuperButton style={{width:'20%'}} type=\"submit\" disabled={isSubmitting}>\r\n                    Find\r\n                </SuperButton>\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n})","import React, {useEffect} from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport {FilterType, getUsers, UsersType} from \"../../redux/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\nimport {UsersSearch} from \"./UsersSearch\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport * as queryString from \"querystring\";\r\n\r\n\r\ntype UsersPropsType = {\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: UsersType[]\r\n    usersOnPage: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    portionSize:number\r\n    onFilterChanged:(filter:FilterType) => void\r\n    filter:FilterType\r\n}\r\n\r\ntype QueryType = { term?: string, friends?: string, page?: string };\r\n\r\nexport const Users : React.FC<UsersPropsType> = (\r\n    {onFilterChanged,users,currentPage,usersOnPage,\r\n        onPageChanged,totalUsersCount,filter,portionSize,...props}) => {\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        document.title = 'Users'\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        // получаем инфо из строки поиска, обрезая первый символ - ?term=d&friends=null&page=4\r\n        const str = history.location.search.substr(1)\r\n        // получаем распарсенный обьект {term: 'd', friends: 'null', page: '4'}\r\n        const parsed = queryString.parse(str) as QueryType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (parsed.page) actualPage = Number(parsed.page)\r\n        if (parsed.term) actualFilter = {...actualFilter,term:parsed.term }\r\n        switch (parsed.friends) {\r\n            case 'null':\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break\r\n            case 'true':\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break\r\n            case 'false':\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break\r\n        }\r\n\r\n        dispatch(getUsers(actualPage,usersOnPage,actualFilter))\r\n\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        const query:QueryType = {}\r\n\r\n        if(!!filter.term) query.term = filter.term\r\n        if(filter.friend != null) query.friends = String(filter.friend)\r\n        if(currentPage != 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname:'/users',\r\n            search:queryString.stringify(query)\r\n        })\r\n    },[filter,currentPage])\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n\r\n            <UsersSearch onFilterChanged={onFilterChanged}/>\r\n            <div className={s.users}>{users.map(u => <User users={u} key={u.id}/>)}</div>\r\n\r\n            <Paginator\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                totalItemsCount={totalUsersCount}\r\n                usersOnPage={usersOnPage}\r\n                portionSize={portionSize}\r\n            />\r\n        </div>\r\n\r\n)}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../redux/redux-store\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {Users} from \"./Users\";\r\nimport {FilterType, getUsers} from \"../../redux/users-reducer\";\r\n\r\n\r\nconst UsersContainer = () => {\r\n\r\n    const {usersOnPage, users,totalUsersCount,filter,portionSize,currentPage,isFetching} = useSelector((state:ReduxStateType) => state.usersPage)\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber:number) => {\r\n        dispatch(getUsers(pageNumber,usersOnPage,filter))\r\n    }\r\n    const onFilterChanged = (filter:FilterType) => {\r\n        dispatch(getUsers(1,usersOnPage,filter))\r\n    }\r\n\r\n    return <>\r\n        {isFetching ? <Preloader/> : ''}\r\n        <Users\r\n            totalUsersCount={totalUsersCount}\r\n            usersOnPage={usersOnPage}\r\n            currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            users={users}\r\n            portionSize={portionSize}\r\n            onFilterChanged={onFilterChanged}\r\n            filter={filter}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default compose<React.ComponentType>(WithAuthRedirect)(UsersContainer)","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n\r\n        <div className={s.errorWrap}>\r\n            <div className={s.errorBox}>\r\n                <div className={s.err}>4</div>\r\n                <div className={s.err}>0</div>\r\n                <div className={s.err}>4</div>\r\n            </div>\r\n            <div className={s.msg}>Maybe this page moved? Got deleted? Is hiding out in a secret place? Never existed in\r\n                the first place?<p>Let's go <a href=\"#\">home</a> and try from there.</p></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {lazy, Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initialize} from \"./redux/app-reducer\";\r\nimport store, {ReduxStateType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport Error404 from './components/common/404/Error404';\r\nimport Dialogs from \"./components/Dialogs/Dialogs\";\r\n\r\n\r\nconst ChatPage = lazy(() => import('./components/Chat/ChatPage'));\r\nconst Settings = lazy(() => import('./components/Settings/Settings'));\r\n\r\ntype HeaderContainerType  =  MapStateToPropsType & {\r\n    initialize:() => void\r\n}\r\ntype  MapStateToPropsType = {\r\n    initialized:boolean\r\n}\r\n\r\nclass App extends React.Component<HeaderContainerType, {}> {\r\n    catchAllUnHandledErrors = () => {\r\n        console.log('Some errors')\r\n}\r\n\r\n    componentDidMount() {\r\n        this.props.initialize()\r\n        window.addEventListener('unhandledrejection', this.catchAllUnHandledErrors)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnHandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return  <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                    <HeaderContainer/>\r\n                <div className='app-content-wrapper'>\r\n                    <div className='nav-wrapper'>\r\n                        <Navbar/>\r\n                    </div>\r\n                    <div id={'container'} className='content-wrapper'>\r\n                        <Suspense fallback={<Preloader/>}>\r\n                            <Switch>\r\n                                <Route path='/' exact render={() => <Redirect to={'profile'}/>}/>\r\n                                <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\r\n                                {/*<Route path='/dialogs' render={() => <Dialogs/>}/>*/}\r\n                                <Route path='/users' render={() => <UsersContainer/>}/>\r\n                                <Route path='/login' render={() => <Login />}/>\r\n                                <Route path='/chat' render={() => <ChatPage/>}/>\r\n                                <Route path='/settings' render={() => <Settings/>}/>\r\n                                <Route render={() => <Error404/>}/>\r\n                            </Switch>\r\n                        </Suspense>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MapStateToPropsType => ({\r\n    initialized: state.app.initialized,\r\n})\r\nconst AppConnect = connect(mapStateToProps,{initialize}) (App);\r\n\r\n const AppContainer = () => {\r\n return  <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <AppConnect/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>\r\n}\r\nexport default AppContainer","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport AppContainer from \"./App\";\r\n\r\n\r\nReactDOM.render(<AppContainer/>, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Ozwe\",\"wrap\":\"Header_wrap__2BQLM\",\"opacity\":\"Header_opacity__15-vJ\",\"logo\":\"Header_logo__1sU97\",\"brand\":\"Header_brand__3FSq4\",\"logoMove\":\"Header_logoMove__qhnt5\",\"loginBlock\":\"Header_loginBlock__1m390\",\"outButton\":\"Header_outButton__2V_32\"};","import {authAPI, ResultCode, securityAPI} from \"../api/api\";\r\nimport {AppThunkType, ReduxStateType} from \"./redux-store\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nexport type AuthActionType = SetUserDataActionType | GetCaptchaURLSuccess\r\ntype SetUserDataActionType = ReturnType<typeof setAuthUserData>\r\ntype GetCaptchaURLSuccess = ReturnType<typeof getCaptchaURLSuccess>\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth:false,\r\n    captchaURL:null, //if null, captcha not required\r\n}\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaURL: string | null\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: AuthActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n            case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,captchaURL: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId:number| null, email:string| null, login:string| null,isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA, payload:{userId,email,login,isAuth}\r\n    } as const\r\n}\r\nexport const getCaptchaURLSuccess = (captchaURL: string) => {\r\n    return {type: GET_CAPTCHA_URL_SUCCESS, payload: captchaURL} as const\r\n}\r\n\r\n\r\n//with async\r\nexport const authUser = ():AppThunkType =>\r\n    async (dispatch) => {\r\n      let response = await  authAPI.me();\r\n\r\n                if (response.resultCode === ResultCode.Success) {\r\n                    let {id, login, email} = response.data\r\n                    dispatch(setAuthUserData(id, email, login, true))\r\n                }\r\n}\r\nexport const getCaptchaURL = ():AppThunkType =>\r\n    async (dispatch) => {\r\n        const res = await  securityAPI.getCaptchaURL();\r\n\r\n        const captchaURL = res.data.data.url\r\n        dispatch(getCaptchaURLSuccess(captchaURL))\r\n    }\r\nexport const login = (email:string, password:string, rememberMe:boolean, captchaURL:string | null) =>\r\n    async (dispatch: ThunkDispatch<ReduxStateType, unknown, AuthActionType | FormAction>) => {\r\n\r\n        let response = await  authAPI.login(email, password, rememberMe,captchaURL);\r\n\r\n                if (response.data.resultCode === ResultCode.Success) {\r\n                    dispatch(authUser())\r\n                } else {\r\n                    if (response.data.resultCode === ResultCode.Captcha) {\r\n                        dispatch(getCaptchaURL())\r\n                    }\r\n                 let message = response.data.messages.length > 0\r\n                     ? response.data.messages\r\n                     : 'Something is wrong'\r\n                    dispatch(stopSubmit('login',{_error: message}))\r\n                }\r\n    }\r\n\r\n//without async\r\nexport const logout = ():AppThunkType => {\r\n    return (dispatch) => {\r\n        authAPI.logout()\r\n            .then(data => {\r\n                if (data.data.resultCode === ResultCode.Success) {\r\n                    dispatch(setAuthUserData(null,null,null,false))\r\n                }\r\n            })\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Paginator_pagination__nwlMs\",\"selectedPage\":\"Paginator_selectedPage__1npOX\",\"wrap\":\"Paginator_wrap__2rKXl\",\"button\":\"Paginator_button__1o8_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrap\":\"Error404_errorWrap__2CV-p\",\"errorBox\":\"Error404_errorBox__28w8r\",\"err\":\"Error404_err__1BdCP\",\"msg\":\"Error404_msg__3FVJL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__27ueU\",\"red\":\"SuperButton_red__JH68z\",\"button\":\"SuperButton_button__2oDJ9\",\"blink\":\"SuperButton_blink__G1OxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrap\":\"Login_loginWrap__1wP8M\",\"login\":\"Login_login__H5P_O\",\"auth\":\"Login_auth__1nYT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__3MiuU\",\"img\":\"Post_img__1AXZT\",\"message\":\"Post_message__3A_LI\",\"like\":\"Post_like___r4DU\"};","import {authUser} from \"./auth-reducer\";\r\nimport {AppThunkType} from \"./redux-store\";\r\n\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\nconst CHANGE_THEME = 'APP/CHANGE_THEME';\r\n\r\n\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized:false,\r\n    theme:'light',\r\n}\r\n\r\nexport type AppActionType = ReturnType<typeof initializedSuccess> | ReturnType<typeof changeTheme>\r\nexport type InitialStateType = {\r\n    initialized:boolean\r\n    theme:string\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: AppActionType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {...state, initialized:true}\r\n        case CHANGE_THEME:{\r\n         return {...state, theme: action.theme}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS\r\n    } as const\r\n}\r\nexport const changeTheme = (theme:string) => {\r\n    return {\r\n        type: CHANGE_THEME, theme\r\n    } as const\r\n}\r\n\r\nexport const initialize = (): AppThunkType =>\r\n    (dispatch) => {\r\n        let promise = dispatch(authUser())\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            })\r\n    }\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusInput\":\"ProfileStatus_statusInput__1OUlU\",\"statusInputDiv\":\"ProfileStatus_statusInputDiv__2PCju\",\"changeStatusDiv\":\"ProfileStatus_changeStatusDiv__xTSw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dragWrap\":\"DragAndDrop_dragWrap__3H0oa\",\"drop\":\"DragAndDrop_drop__2LVRc\",\"drag\":\"DragAndDrop_drag__14r-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__27a1V\",\"checkbox\":\"SuperCheckbox_checkbox__33S5Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__hrKqc\",\"posts\":\"MyPosts_posts__1YkW2\",\"header\":\"MyPosts_header__uORGV\",\"myPstInput\":\"MyPosts_myPstInput__2zcpn\"};"],"sourceRoot":""}