[{"C:\\Project\\React-samurai\\src\\Redux\\dialogs-reducer.tsx":"1","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Dialogs.tsx":"2","C:\\Project\\React-samurai\\src\\Redux\\propfile-reducer.tsx":"3","C:\\Project\\React-samurai\\src\\Redux\\store.tsx":"4","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"5","C:\\Project\\React-samurai\\src\\App.tsx":"6","C:\\Project\\React-samurai\\src\\Redux\\redux-store.tsx":"7","C:\\Project\\React-samurai\\src\\Redux\\sidebar-reducer.tsx":"8","C:\\Project\\React-samurai\\src\\Components\\Profile\\Profile.tsx":"9","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"10","C:\\Project\\React-samurai\\src\\index.tsx":"11","C:\\Project\\React-samurai\\src\\Components\\Header\\Header.tsx":"12","C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"13","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogsContainer.tsx":"14","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Message\\Message.tsx":"15","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"16","C:\\Project\\React-samurai\\src\\Components\\Settings\\Settings.tsx":"17","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"18","C:\\Project\\React-samurai\\src\\Components\\Music\\Music.tsx":"19","C:\\Project\\React-samurai\\src\\Components\\Users\\UsersContainer.tsx":"20","C:\\Project\\React-samurai\\src\\Redux\\users-reducer.ts":"21","C:\\Project\\React-samurai\\src\\Components\\Navbar\\Navbar.tsx":"22","C:\\Project\\React-samurai\\src\\Components\\Users\\Users.tsx":"23","C:\\Project\\React-samurai\\src\\Components\\News\\News.tsx":"24","C:\\Project\\React-samurai\\src\\Components\\common\\Preloader\\Preloader.tsx":"25","C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileContainer.tsx":"26","C:\\Project\\React-samurai\\src\\Redux\\auth-reducer.ts":"27","C:\\Project\\React-samurai\\src\\Components\\Header\\HeaderContainer.tsx":"28"},{"size":1783,"mtime":1616424340396,"results":"29","hashOfConfig":"30"},{"size":1783,"mtime":1616423006482,"results":"31","hashOfConfig":"30"},{"size":2625,"mtime":1618762559290,"results":"32","hashOfConfig":"30"},{"size":3007,"mtime":1615726262112,"results":"33","hashOfConfig":"30"},{"size":1486,"mtime":1616366636684,"results":"34","hashOfConfig":"30"},{"size":1332,"mtime":1618761567493,"results":"35","hashOfConfig":"30"},{"size":562,"mtime":1616791513601,"results":"36","hashOfConfig":"30"},{"size":126,"mtime":1616097007559,"results":"37","hashOfConfig":"30"},{"size":473,"mtime":1618749737783,"results":"38","hashOfConfig":"30"},{"size":1133,"mtime":1616426006778,"results":"39","hashOfConfig":"30"},{"size":498,"mtime":1618403771811,"results":"40","hashOfConfig":"30"},{"size":703,"mtime":1618774342921,"results":"41","hashOfConfig":"30"},{"size":1172,"mtime":1618761938740,"results":"42","hashOfConfig":"30"},{"size":1123,"mtime":1616271085226,"results":"43","hashOfConfig":"30"},{"size":271,"mtime":1613501390113,"results":"44","hashOfConfig":"30"},{"size":532,"mtime":1615648739392,"results":"45","hashOfConfig":"30"},{"size":203,"mtime":1612697914852,"results":"46","hashOfConfig":"30"},{"size":448,"mtime":1613593828886,"results":"47","hashOfConfig":"30"},{"size":186,"mtime":1614097598828,"results":"48","hashOfConfig":"30"},{"size":2889,"mtime":1618742516610,"results":"49","hashOfConfig":"30"},{"size":3405,"mtime":1618690334144,"results":"50","hashOfConfig":"30"},{"size":1167,"mtime":1618066172316,"results":"51","hashOfConfig":"30"},{"size":2166,"mtime":1618762785822,"results":"52","hashOfConfig":"30"},{"size":186,"mtime":1612697914827,"results":"53","hashOfConfig":"30"},{"size":156,"mtime":1618688653516,"results":"54","hashOfConfig":"30"},{"size":1414,"mtime":1618762046991,"results":"55","hashOfConfig":"30"},{"size":946,"mtime":1618773299439,"results":"56","hashOfConfig":"30"},{"size":1218,"mtime":1618773552489,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1bvgreh",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Project\\React-samurai\\src\\Redux\\dialogs-reducer.tsx",[],["123","124"],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\propfile-reducer.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\store.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Project\\React-samurai\\src\\App.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\redux-store.tsx",[],["125","126"],"C:\\Project\\React-samurai\\src\\Redux\\sidebar-reducer.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\Profile.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["127"],"import React from \"react\";\r\nimport {addPostCreator, PostsType, updateNewPostCreator} from \"../../../Redux/propfile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type MyPostsMapStateToPropsType = {\r\n    posts:PostsType[]\r\n    newPostText:string\r\n}\r\nexport  type MyPostsMapDispatchToPropsType = {\r\n    onChange:(text:string) => void\r\n    onClick:() => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MyPostsMapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):MyPostsMapDispatchToPropsType => {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(addPostCreator())\r\n        },\r\n        onChange: (text: string) => {\r\n            let action = updateNewPostCreator(text);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer","C:\\Project\\React-samurai\\src\\index.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Header\\Header.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogsContainer.tsx",["128"],"import React from 'react';\r\nimport {InitialStateType, sendMessageCreator, updateNewMessageCreator} from '../../Redux/dialogs-reducer';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type DialogsMapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\nexport type DialogsMapDispatchToPropsType = {\r\n    updateNewMessageBody:(text:string) => void\r\n    sendMessage:() => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):DialogsMapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):DialogsMapDispatchToPropsType => {\r\n    return {\r\n     updateNewMessageBody: (text:string) => {\r\n         let action = updateNewMessageCreator(text);\r\n         dispatch(action)\r\n     },\r\n        sendMessage: () => {\r\n           dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",["129","130"],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Message\\Message.tsx",[],["131","132"],"C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Settings\\Settings.tsx",["133"],"import React from 'react';\r\nimport classes from './Settings.module.css'\r\n\r\nfunction Settings  () {\r\n    return (\r\n        <div >\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Music\\Music.tsx",["134"]," import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\nfunction Music  () {\r\n    return (\r\n        <div >\r\n      music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","C:\\Project\\React-samurai\\src\\Components\\Users\\UsersContainer.tsx",["135"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage, toggleIsFetching,\r\n    setUsers,\r\n    setTotalUsersCount,\r\n    unfollow,\r\n    UsersType\r\n} from \"../../Redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    isFetching:boolean\r\n}\r\nexport type dispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: UsersType[]) => void\r\n    setCurrentPage: (page: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    toggleIsFetching:(isFetching:boolean) => void\r\n}\r\n\r\ntype UsersPropsType = mapStateToPropsType & dispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component <UsersPropsType,{}>{\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false);\r\n                this.props.setUsers(response.data.items);\r\n                this.props.setTotalUsersCount(response.data.totalCount);\r\n            })\r\n    }\r\n    onPageChanged = (pageNumber:number) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response =>{\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : ''}\r\n            <Users\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType):mapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow, setUsers,\r\n    setCurrentPage, setTotalUsersCount, toggleIsFetching})(UsersContainer)\r\n","C:\\Project\\React-samurai\\src\\Redux\\users-reducer.ts",[],"C:\\Project\\React-samurai\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Users\\Users.tsx",["136"],"C:\\Project\\React-samurai\\src\\Components\\News\\News.tsx",["137"],"C:\\Project\\React-samurai\\src\\Components\\common\\Preloader\\Preloader.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileContainer.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\auth-reducer.ts",[],"C:\\Project\\React-samurai\\src\\Components\\Header\\HeaderContainer.tsx",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"138","replacedBy":"142"},{"ruleId":"140","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"144","severity":1,"message":"145","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":13},{"ruleId":"138","replacedBy":"148"},{"ruleId":"140","replacedBy":"149"},{"ruleId":"138","replacedBy":"150"},{"ruleId":"140","replacedBy":"151"},{"ruleId":"144","severity":1,"message":"152","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"152","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"153","line":4,"column":9,"nodeType":"146","messageId":"147","endLine":4,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":35,"column":29,"nodeType":"156","endLine":35,"endColumn":108},{"ruleId":"144","severity":1,"message":"152","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],["157"],["158"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar",["157"],["158"],["157"],["158"],"'classes' is defined but never used.","'Dispatch' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]