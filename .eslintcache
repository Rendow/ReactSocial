[{"C:\\Project\\React-samurai\\src\\Redux\\dialogs-reducer.tsx":"1","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Dialogs.tsx":"2","C:\\Project\\React-samurai\\src\\Redux\\propfile-reducer.tsx":"3","C:\\Project\\React-samurai\\src\\Redux\\store.tsx":"4","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"5","C:\\Project\\React-samurai\\src\\App.tsx":"6","C:\\Project\\React-samurai\\src\\Redux\\redux-store.tsx":"7","C:\\Project\\React-samurai\\src\\Redux\\sidebar-reducer.tsx":"8","C:\\Project\\React-samurai\\src\\Components\\Profile\\Profile.tsx":"9","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"10","C:\\Project\\React-samurai\\src\\index.tsx":"11","C:\\Project\\React-samurai\\src\\Components\\Header\\Header.tsx":"12","C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"13","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogsContainer.tsx":"14","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Message\\Message.tsx":"15","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"16","C:\\Project\\React-samurai\\src\\Components\\Settings\\Settings.tsx":"17","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"18","C:\\Project\\React-samurai\\src\\Components\\Music\\Music.tsx":"19","C:\\Project\\React-samurai\\src\\Components\\Users\\UsersContainer.tsx":"20","C:\\Project\\React-samurai\\src\\Redux\\users-reducer.ts":"21","C:\\Project\\React-samurai\\src\\Components\\Navbar\\Navbar.tsx":"22","C:\\Project\\React-samurai\\src\\Components\\Users\\Users.tsx":"23","C:\\Project\\React-samurai\\src\\Components\\News\\News.tsx":"24","C:\\Project\\React-samurai\\src\\Components\\common\\Preloader\\Preloader.tsx":"25","C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileContainer.tsx":"26","C:\\Project\\React-samurai\\src\\Redux\\auth-reducer.ts":"27","C:\\Project\\React-samurai\\src\\Components\\Header\\HeaderContainer.tsx":"28","C:\\Project\\React-samurai\\src\\api\\api.ts":"29","C:\\Project\\React-samurai\\src\\Components\\login\\Login.tsx":"30","C:\\Project\\React-samurai\\src\\hoc\\WithAuthRedirect.tsx":"31","C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"32","C:\\Project\\React-samurai\\src\\Components\\Login\\Login.tsx":"33","C:\\Project\\React-samurai\\src\\utils\\validators\\validators.tsx":"34","C:\\Project\\React-samurai\\src\\Components\\common\\FormsControl\\FormsControls.tsx":"35"},{"size":1680,"mtime":1620659556897,"results":"36","hashOfConfig":"37"},{"size":3227,"mtime":1620671348226,"results":"38","hashOfConfig":"37"},{"size":3992,"mtime":1620660481434,"results":"39","hashOfConfig":"37"},{"size":3007,"mtime":1615726262112,"results":"40","hashOfConfig":"37"},{"size":3078,"mtime":1620672295628,"results":"41","hashOfConfig":"37"},{"size":1476,"mtime":1620504321632,"results":"42","hashOfConfig":"37"},{"size":800,"mtime":1620504969393,"results":"43","hashOfConfig":"37"},{"size":126,"mtime":1616097007559,"results":"44","hashOfConfig":"37"},{"size":751,"mtime":1620217049504,"results":"45","hashOfConfig":"37"},{"size":1109,"mtime":1620660518199,"results":"46","hashOfConfig":"37"},{"size":507,"mtime":1618745778816,"results":"47","hashOfConfig":"37"},{"size":703,"mtime":1620073726210,"results":"48","hashOfConfig":"37"},{"size":1320,"mtime":1620217002579,"results":"49","hashOfConfig":"37"},{"size":1156,"mtime":1620659625926,"results":"50","hashOfConfig":"37"},{"size":271,"mtime":1613501390113,"results":"51","hashOfConfig":"37"},{"size":532,"mtime":1615648739392,"results":"52","hashOfConfig":"37"},{"size":203,"mtime":1612697914852,"results":"53","hashOfConfig":"37"},{"size":448,"mtime":1613593828886,"results":"54","hashOfConfig":"37"},{"size":186,"mtime":1614097598828,"results":"55","hashOfConfig":"37"},{"size":2788,"mtime":1620063199343,"results":"56","hashOfConfig":"37"},{"size":6020,"mtime":1619549387324,"results":"57","hashOfConfig":"37"},{"size":1167,"mtime":1618066172316,"results":"58","hashOfConfig":"37"},{"size":3949,"mtime":1620671775407,"results":"59","hashOfConfig":"37"},{"size":186,"mtime":1612697914827,"results":"60","hashOfConfig":"37"},{"size":156,"mtime":1618688653516,"results":"61","hashOfConfig":"37"},{"size":1683,"mtime":1620218642691,"results":"62","hashOfConfig":"37"},{"size":1364,"mtime":1619690301658,"results":"63","hashOfConfig":"37"},{"size":781,"mtime":1619690379104,"results":"64","hashOfConfig":"37"},{"size":2011,"mtime":1620221330533,"results":"65","hashOfConfig":"37"},{"size":88,"mtime":1619691362377,"results":"66","hashOfConfig":"37"},{"size":851,"mtime":1620073726258,"results":"67","hashOfConfig":"37"},{"size":1650,"mtime":1620303063955,"results":"68","hashOfConfig":"37"},{"size":1810,"mtime":1620672751008,"results":"69","hashOfConfig":"37"},{"size":487,"mtime":1620665718074,"results":"70","hashOfConfig":"37"},{"size":1434,"mtime":1620672821378,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1bvgreh",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Project\\React-samurai\\src\\Redux\\dialogs-reducer.tsx",[],["150","151"],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Dialogs.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\propfile-reducer.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\store.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",["152","153","154"],"C:\\Project\\React-samurai\\src\\App.tsx",["155"],"C:\\Project\\React-samurai\\src\\Redux\\redux-store.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\sidebar-reducer.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\Profile.tsx",["156"],"import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport s from './Profile.module.css'\r\nimport { ProfileType } from \"../../Redux/propfile-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus:(text:string) => void\r\n}\r\nfunction Profile(props:PropsType) {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile;","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["157"],"C:\\Project\\React-samurai\\src\\index.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Header\\Header.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["158"],"import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport Logo from './../MyPosts/Post/img.webp';\r\nimport {ProfileType} from \"../../../Redux/propfile-reducer\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport { ProfileStatus } from \"./ProfileStatus\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus:(text:string) => void\r\n}\r\n\r\nfunction ProfileInfo(props: PropsType) {\r\n    if (!props.profile) return <Preloader/>;\r\n\r\n    let photo = props.profile.photos.small ? props.profile.photos.large : Logo\r\n    let img = <img src={photo}/>\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <div>{img}</div>\r\n                <div className={classes.textBlock}>\r\n                    <div className={classes.status}> <ProfileStatus  updateStatus= {props.updateStatus} status={props.status} /></div>\r\n                    <div className={classes.description}>Nice to meet you on my page.\r\n                        Now page look not so good, but only because i working on functional. There is will be beautiful\r\n                        design in the future.\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogsContainer.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Settings\\Settings.tsx",["159"],"import React from 'react';\r\nimport classes from './Settings.module.css'\r\n\r\nfunction Settings  () {\r\n    return (\r\n        <div >\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Music\\Music.tsx",["160"]," import React from 'react';\r\nimport classes from './Music.module.css'\r\n\r\nfunction Music  () {\r\n    return (\r\n        <div >\r\n      music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","C:\\Project\\React-samurai\\src\\Components\\Users\\UsersContainer.tsx",["161"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../Redux/redux-store\";\r\nimport {\r\n    followSuccess, getPage, getUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching, toggleIsFollowingProgress,\r\n    unFollowSuccess,\r\n    UsersType\r\n} from \"../../Redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport Dialogs from \"../Dialogs/Dialogs\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nexport type mapStateToPropsType = {\r\n    users: UsersType[]\r\n    pageSize: number\r\n    totalUsersCount:number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    followingInProgress:number[]\r\n}\r\nexport type dispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    toggleIsFollowingProgress:(followingInProgress: boolean, userId:number) => void\r\n    getUsers:(pageSize: number, currentPage: number)  => void\r\n    getPage:(pageNumber: number, currentPage: number)  => void\r\n}\r\n\r\ntype UsersPropsType = mapStateToPropsType & dispatchToPropsType\r\n\r\nclass UsersContainer extends React.Component <UsersPropsType,{}>{\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage,this.props.pageSize)\r\n    }\r\n    onPageChanged = (pageNumber:number) => {\r\n        this.props.getPage(pageNumber,this.props.pageSize)\r\n\r\n    }\r\n\r\n    render(){\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : ''}\r\n            <Users\r\n            totalUsersCount={this.props.totalUsersCount}\r\n            pageSize={this.props.pageSize}\r\n            currentPage={this.props.currentPage}\r\n            onPageChanged={this.onPageChanged}\r\n            users={this.props.users}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n            followingInProgress={this.props.followingInProgress}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType):mapStateToPropsType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress:state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n    {follow: followSuccess, unfollow: unFollowSuccess, setUsers,\r\n        setCurrentPage, setTotalUsersCount, toggleIsFetching,\r\n        toggleIsFollowingProgress,getUsers, getPage}), WithAuthRedirect)(UsersContainer)\r\n","C:\\Project\\React-samurai\\src\\Redux\\users-reducer.ts",[],"C:\\Project\\React-samurai\\src\\Components\\Navbar\\Navbar.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Users\\Users.tsx",["162","163","164"],"C:\\Project\\React-samurai\\src\\Components\\News\\News.tsx",["165"],"import React from 'react';\r\nimport classes from './News.module.css'\r\n\r\nfunction News  () {\r\n    return (\r\n        <div >\r\n           news\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","C:\\Project\\React-samurai\\src\\Components\\common\\Preloader\\Preloader.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileContainer.tsx",["166"],"import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, ProfileType, updateStatus} from \"../../Redux/propfile-reducer\";\r\nimport {ReduxStateType} from \"../../Redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype mapStateToPropsType = {\r\n     profile:ProfileType | null\r\n    status: string\r\n}\r\n\r\ntype ProfileContainerType = mapStateToPropsType & {\r\n    getProfile:(userId:number) => void\r\n    getStatus:(userId:number) => void\r\n    updateStatus:(text:string) => void\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string,\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & ProfileContainerType\r\n\r\n class ProfileContainer extends React.Component<PropsType, {}>{\r\n\r\n    componentDidMount() {\r\n        let userId = +this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = 16107\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render(){\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: ReduxStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default  compose<React.ComponentType>(connect(mapStateToProps,{getStatus,updateStatus,getProfile}),withRouter)(ProfileContainer)\r\n","C:\\Project\\React-samurai\\src\\Redux\\auth-reducer.ts",[],"C:\\Project\\React-samurai\\src\\Components\\Header\\HeaderContainer.tsx",[],"C:\\Project\\React-samurai\\src\\api\\api.ts",[],"C:\\Project\\React-samurai\\src\\Components\\login\\Login.tsx",[],"C:\\Project\\React-samurai\\src\\hoc\\WithAuthRedirect.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Login\\Login.tsx",[],"C:\\Project\\React-samurai\\src\\utils\\validators\\validators.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\common\\FormsControl\\FormsControls.tsx",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":1,"column":16,"nodeType":"173","messageId":"174","endLine":1,"endColumn":27},{"ruleId":"171","severity":1,"message":"175","line":5,"column":9,"nodeType":"173","messageId":"174","endLine":5,"endColumn":15},{"ruleId":"171","severity":1,"message":"176","line":5,"column":17,"nodeType":"173","messageId":"174","endLine":5,"endColumn":26},{"ruleId":"171","severity":1,"message":"177","line":4,"column":9,"nodeType":"173","messageId":"174","endLine":4,"endColumn":17},{"ruleId":"171","severity":1,"message":"177","line":6,"column":9,"nodeType":"173","messageId":"174","endLine":6,"endColumn":17},{"ruleId":"171","severity":1,"message":"178","line":1,"column":8,"nodeType":"173","messageId":"174","endLine":1,"endColumn":13},{"ruleId":"179","severity":1,"message":"180","line":18,"column":15,"nodeType":"181","endLine":18,"endColumn":33},{"ruleId":"171","severity":1,"message":"182","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":15},{"ruleId":"171","severity":1,"message":"182","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":15},{"ruleId":"171","severity":1,"message":"183","line":16,"column":8,"nodeType":"173","messageId":"174","endLine":16,"endColumn":15},{"ruleId":"171","severity":1,"message":"184","line":6,"column":9,"nodeType":"173","messageId":"174","endLine":6,"endColumn":16},{"ruleId":"171","severity":1,"message":"175","line":7,"column":9,"nodeType":"173","messageId":"174","endLine":7,"endColumn":15},{"ruleId":"179","severity":1,"message":"180","line":40,"column":29,"nodeType":"181","endLine":40,"endColumn":108},{"ruleId":"171","severity":1,"message":"182","line":2,"column":8,"nodeType":"173","messageId":"174","endLine":2,"endColumn":15},{"ruleId":"171","severity":1,"message":"185","line":7,"column":9,"nodeType":"173","messageId":"174","endLine":7,"endColumn":25},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'TextField' is defined but never used.","'Redirect' is defined but never used.","'React' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is defined but never used.","'Dialogs' is defined but never used.","'userAPI' is defined but never used.","'WithAuthRedirect' is defined but never used.","no-global-assign","no-unsafe-negation"]