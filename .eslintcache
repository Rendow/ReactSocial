[{"C:\\Project\\React-samurai\\src\\Redux\\dialogs-reducer.tsx":"1","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Dialogs.tsx":"2","C:\\Project\\React-samurai\\src\\Redux\\propfile-reducer.tsx":"3","C:\\Project\\React-samurai\\src\\Redux\\store.tsx":"4","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx":"5","C:\\Project\\React-samurai\\src\\App.tsx":"6","C:\\Project\\React-samurai\\src\\Redux\\redux-store.tsx":"7","C:\\Project\\React-samurai\\src\\Redux\\sidebar-reducer.tsx":"8","C:\\Project\\React-samurai\\src\\Components\\Profile\\Profile.tsx":"9","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx":"10","C:\\Project\\React-samurai\\src\\index.tsx":"11","C:\\Project\\React-samurai\\src\\Components\\Header\\Header.tsx":"12","C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"13","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogsContainer.tsx":"14","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Message\\Message.tsx":"15","C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx":"16","C:\\Project\\React-samurai\\src\\Components\\Settings\\Settings.tsx":"17","C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx":"18","C:\\Project\\React-samurai\\src\\Components\\Music\\Music.tsx":"19","C:\\Project\\React-samurai\\src\\Components\\Users\\UsersContainer.tsx":"20","C:\\Project\\React-samurai\\src\\Redux\\users-reducer.ts":"21","C:\\Project\\React-samurai\\src\\Components\\Users\\Users.tsx":"22","C:\\Project\\React-samurai\\src\\Components\\Navbar\\Navbar.tsx":"23"},{"size":1783,"mtime":1616424340396,"results":"24","hashOfConfig":"25"},{"size":1783,"mtime":1616423006482,"results":"26","hashOfConfig":"25"},{"size":1651,"mtime":1616424570871,"results":"27","hashOfConfig":"25"},{"size":3007,"mtime":1615726262112,"results":"28","hashOfConfig":"25"},{"size":1486,"mtime":1616366636684,"results":"29","hashOfConfig":"25"},{"size":1206,"mtime":1618066172324,"results":"30","hashOfConfig":"25"},{"size":562,"mtime":1616791513601,"results":"31","hashOfConfig":"25"},{"size":126,"mtime":1616097007559,"results":"32","hashOfConfig":"25"},{"size":371,"mtime":1616260406330,"results":"33","hashOfConfig":"25"},{"size":1133,"mtime":1616426006778,"results":"34","hashOfConfig":"25"},{"size":498,"mtime":1618403771811,"results":"35","hashOfConfig":"25"},{"size":257,"mtime":1614094027626,"results":"36","hashOfConfig":"25"},{"size":738,"mtime":1615647627678,"results":"37","hashOfConfig":"25"},{"size":1123,"mtime":1616271085226,"results":"38","hashOfConfig":"25"},{"size":271,"mtime":1613501390113,"results":"39","hashOfConfig":"25"},{"size":532,"mtime":1615648739392,"results":"40","hashOfConfig":"25"},{"size":203,"mtime":1612697914852,"results":"41","hashOfConfig":"25"},{"size":448,"mtime":1613593828886,"results":"42","hashOfConfig":"25"},{"size":186,"mtime":1614097598828,"results":"43","hashOfConfig":"25"},{"size":1708,"mtime":1618171294978,"results":"44","hashOfConfig":"25"},{"size":2981,"mtime":1618403219693,"results":"45","hashOfConfig":"25"},{"size":2847,"mtime":1618403081646,"results":"46","hashOfConfig":"25"},{"size":1167,"mtime":1618066172316,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1bvgreh",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Project\\React-samurai\\src\\Redux\\dialogs-reducer.tsx",[],["99","100"],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Dialogs.tsx",[],["101","102"],"C:\\Project\\React-samurai\\src\\Redux\\propfile-reducer.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\store.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Project\\React-samurai\\src\\App.tsx",[],"C:\\Project\\React-samurai\\src\\Redux\\redux-store.tsx",[],["103","104"],"C:\\Project\\React-samurai\\src\\Redux\\sidebar-reducer.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\Profile.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\MyPostsContainer.tsx",["105"],"import React from \"react\";\r\nimport {addPostCreator, PostsType, updateNewPostCreator} from \"../../../Redux/propfile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReduxStateType} from \"../../../Redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nexport type MyPostsMapStateToPropsType = {\r\n    posts:PostsType[]\r\n    newPostText:string\r\n}\r\nexport  type MyPostsMapDispatchToPropsType = {\r\n    onChange:(text:string) => void\r\n    onClick:() => void\r\n}\r\nconst mapStateToProps = (state:ReduxStateType):MyPostsMapStateToPropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch:Dispatch):MyPostsMapDispatchToPropsType => {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(addPostCreator())\r\n        },\r\n        onChange: (text: string) => {\r\n            let action = updateNewPostCreator(text);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer","C:\\Project\\React-samurai\\src\\index.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Header\\Header.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\ProfileInfo\\ProfileInfo.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogsContainer.tsx",["106"],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\Message\\Message.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Profile\\MyPosts\\Post\\Post.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Settings\\Settings.tsx",["107"],"C:\\Project\\React-samurai\\src\\Components\\Dialogs\\DialogItem\\DialogItem.tsx",[],"C:\\Project\\React-samurai\\src\\Components\\Music\\Music.tsx",["108"],"C:\\Project\\React-samurai\\src\\Components\\Users\\UsersContainer.tsx",["109"],"C:\\Project\\React-samurai\\src\\Redux\\users-reducer.ts",[],"C:\\Project\\React-samurai\\src\\Components\\Users\\Users.tsx",["110"],"import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport logo from \"./img/logo.png\";\r\nimport axios from \"axios\";\r\nimport {dispatchToPropsType, mapStateToPropsType} from \"./UsersContainer\";\r\n\r\n\r\ntype UsersPropsType = mapStateToPropsType & dispatchToPropsType\r\n\r\nclass Users extends React.Component <UsersPropsType,{}>{\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        })\r\n    }\r\n   onPageChanged = (pageNumber:number) => {\r\n       this.props.setCurrentPage(pageNumber)\r\n       axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n           .then(response =>{\r\n               this.props.setUsers(response.data.items)\r\n           })\r\n   }\r\n    render(){\r\n        let selectedPage = s.selectedPage + ' ' + s.pagination\r\n        let pagesCount = Math.ceil(this.props.totalUsersCount / this.props.pageSize)\r\n        let pages:number[] = []\r\n        //pages.slice(0.15).map(p => p)\r\n\r\n         for (let i = 1;i <= pagesCount ;i++){\r\n\r\n            pages.push(i)\r\n        }\r\n        // let i = 1\r\n        // while(i < pagesCount ){\r\n        //     pages.push(i)\r\n        //     i++\r\n        // }\r\n        return (\r\n            <div>\r\n\r\n                {this.props.users.map(u => <div className={s.wrap} key={u.id}>\r\n                <span>\r\n                    <div>\r\n                    <img src={u.photos.small != null ? u.photos.small : logo} className={s.photo}/>\r\n                </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button onClick={() => {this.props.unfollow(u.id)}}>Unfollow</button>\r\n                            : <button onClick={() => {this.props.follow(u.id)}}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                        <div> {u.name}</div>\r\n                        <div> {u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                         <div>{'u.location.country'}</div>\r\n                         <div>{'u.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)}\r\n\r\n                <div>\r\n                    {pages.map(p => {\r\n                        return  p <15 && <span className={this.props.currentPage === p ? selectedPage : s.pagination}\r\n                                     onClick={()=>{this.onPageChanged(p)}}>\r\n                       {p} </span>  })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Users","C:\\Project\\React-samurai\\src\\Components\\Navbar\\Navbar.tsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"111","replacedBy":"117"},{"ruleId":"113","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"119","severity":1,"message":"123","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"119","severity":1,"message":"123","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":15},{"ruleId":"119","severity":1,"message":"120","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":47,"column":21,"nodeType":"126","endLine":47,"endColumn":100},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],["127"],["128"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'classes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]